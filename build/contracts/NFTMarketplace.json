{
  "contractName": "NFTMarketplace",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "allowedTokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "AllowedTokenAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "AllowedTokenRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "ChangedAutentica",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ownerProceeds",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creatorProceeds",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "investorProceeds",
          "type": "uint256"
        }
      ],
      "name": "TradedForCoins",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ownerProceeds",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creatorProceeds",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "investorProceeds",
          "type": "uint256"
        }
      ],
      "name": "TradedForTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DECIMALS",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "OPERATOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "autentica",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "setAutentica",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "numberOfAllowedTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "allowedTokenAtIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "isTokenAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "addAllowedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "removeAllowedTokenAtIndex",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "marketplaceFee",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct NFTMarketplace.Signature",
          "name": "signature",
          "type": "tuple"
        }
      ],
      "name": "tradeForCoins",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "marketplaceFee",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct NFTMarketplace.Signature",
          "name": "signature",
          "type": "tuple"
        }
      ],
      "name": "tradeForTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "marketplaceFee",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct NFTMarketplace.Signature",
          "name": "signature",
          "type": "tuple"
        }
      ],
      "name": "canPerformTrade",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getInvestorFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "isMarketplaceApproved",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"allowedTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"AllowedTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"AllowedTokenRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ChangedAutentica\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ownerProceeds\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creatorProceeds\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"investorProceeds\",\"type\":\"uint256\"}],\"name\":\"TradedForCoins\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ownerProceeds\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creatorProceeds\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"investorProceeds\",\"type\":\"uint256\"}],\"name\":\"TradedForTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"addAllowedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"allowedTokenAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autentica\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketplaceFee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct NFTMarketplace.Signature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"canPerformTrade\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getInvestorFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"isMarketplaceApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"isTokenAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfAllowedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"removeAllowedTokenAtIndex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"setAutentica\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketplaceFee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct NFTMarketplace.Signature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"tradeForCoins\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketplaceFee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct NFTMarketplace.Signature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"tradeForTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AllowedTokenAdded(address)\":{\"details\":\"Emitted when a new token is allowed to be used for trading.\"},\"AllowedTokenRemoved(address)\":{\"details\":\"Emitted when a token is not longer allowed to be used for trading.\"},\"ChangedAutentica(address,address)\":{\"details\":\"Emitted when the Autentica wallet address has been updated.\"},\"TradedForCoins(address,uint256,address,address,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when a trade occured between the `seller` (the owner of the ERC-721 token represented by `tokenId` within the `collection` smart contract) and `buyer` which payed the specified `price` in coins (the native cryptocurrency of the platform, i.e.: ETH).\"},\"TradedForTokens(address,uint256,address,address,address,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when a trade occured between the `seller` (the owner of the ERC-721 token represented by `tokenId` within the `collection` smart contract) and `buyer` which payed the specified `price` in tokens that are represented by the `token` ERC-20 smart contract address.\"}},\"kind\":\"dev\",\"methods\":{\"addAllowedToken(address)\":{\"details\":\"Add a new allowed token to the contract.\",\"params\":{\"tokenAddress\":\"The address of the allowed token to add. Requirements: - the caller must be admin.\"}},\"allowedTokenAtIndex(uint256)\":{\"details\":\"Returns the address of the allowed token at the specified index.\",\"params\":{\"index\":\"The index of the allowed token.\"}},\"canPerformTrade(address,uint256,uint256,address,address,uint256,(uint8,bytes32,bytes32))\":{\"params\":{\"buyer\":\"Buyer address.\",\"collection\":\"The ERC-721 smart contract.\",\"currency\":\"The type of currency (erc20 or native currency)\",\"marketplaceFee\":\"Marketplace fee.\",\"price\":\"The price of the NFT in `token` tokens.\",\"signature\":\"ECDSA signature.\",\"tokenId\":\"The unique identifier of the ERC-721 token within the `collection` smart contract.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used for fees.\"},\"getInvestorFee(address,uint256)\":{\"params\":{\"collection\":\"The ERC-721 smart contract.\",\"tokenId\":\"The unique identifier of the ERC-721 token within the `collection` smart contract.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoyaltyFee(address,uint256)\":{\"params\":{\"collection\":\"The ERC-721 smart contract.\",\"tokenId\":\"The unique identifier of the ERC-721 token within the `collection` smart contract.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isMarketplaceApproved(address,uint256,address)\":{\"details\":\"Verifies if the token owner has approved this smart contract to manage its  NFTs from the specified collection.\",\"returns\":{\"_0\":\"Returns `true` if this smart contract is approved by the `tokenOwner` in  the `collection` smart contract or only if that specific NFT is approved for this smart contract.\"}},\"isTokenAllowed(address)\":{\"details\":\"Verifies if a token address has been allowed already.\"},\"numberOfAllowedTokens()\":{\"details\":\"Returns the number of allowed tokens.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeAllowedTokenAtIndex(uint256)\":{\"details\":\"Remove the allowed token at the specified index.\",\"params\":{\"index\":\"The index of the allowed token. Requirements: - the caller must be admin.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setAutentica(address)\":{\"details\":\"Sets the Autentica wallet address. Requirements: - the caller must be admin.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tradeForCoins(address,uint256,uint256,address,uint256,(uint8,bytes32,bytes32))\":{\"details\":\"Requirements - The `collection` smart contract must be an ERC-721 smart contract. - The owner of the NFT identified by `tokenId` within the `collection` smart contract must have approved   this smart contract to manage its NFTs. - The `price` and `msg.value` must be equal. - The sum of all the fees cannot be greater than 100%. - The ECDSA signature must be signed by someone with the admin or operator role.\",\"params\":{\"buyer\":\"Buyer address.\",\"collection\":\"The ERC-721 smart contract.\",\"marketplaceFee\":\"Marketplace fee.\",\"price\":\"The price of the NFT in coins.\",\"signature\":\"ECDSA signature.\",\"tokenId\":\"The unique identifier of the ERC-721 token within the `collection` smart contract.\"}},\"tradeForTokens(address,uint256,uint256,address,address,uint256,(uint8,bytes32,bytes32))\":{\"params\":{\"buyer\":\"Buyer address.\",\"collection\":\"The ERC-721 smart contract.\",\"marketplaceFee\":\"Marketplace fee.\",\"price\":\"The price of the NFT in `token` tokens.\",\"signature\":\"ECDSA signature. Requirements: - The `collection` smart contract must be an ERC-721 smart contract. - The owner of the NFT identified by `tokenId` within the `collection` smart contract must have approved   this smart contract to manage its NFTs. - The sum of all the fees cannot be greater than 100%. - The ECDSA signature must be signed by someone with the admin or operator role.\",\"token\":\"The ERC-20 smart contract.\",\"tokenId\":\"The unique identifier of the ERC-721 token within the `collection` smart contract.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"autentica()\":{\"notice\":\"Returns the Autentica wallet address.\"},\"canPerformTrade(address,uint256,uint256,address,address,uint256,(uint8,bytes32,bytes32))\":{\"notice\":\"Validate the trade.\"},\"constructor\":{\"notice\":\"The constructor sets the creator of the contract as the admin and operator of this smart contract, sets the wallet address for Autentica and sets the allowed tokens.\"},\"getInvestorFee(address,uint256)\":{\"notice\":\"If the collection smart contract implements `IERC721Autentica` then the function  returns the investor fee from that smart contract, otherwise it will return 0.\"},\"getRoyaltyFee(address,uint256)\":{\"notice\":\"If the collection smart contract implements `IERC721Autentica` or `IERC2981` then  the function returns the royalty fee from that smart contract, otherwise it will return 0.\"},\"pause()\":{\"notice\":\"Pause the contract. Requirements: - the caller must be admin.\"},\"tradeForCoins(address,uint256,uint256,address,uint256,(uint8,bytes32,bytes32))\":{\"notice\":\"Trades an NFT for a given amount of coins (the native cryptocurrency of the platform, i.e.: ETH).\"},\"tradeForTokens(address,uint256,uint256,address,address,uint256,(uint8,bytes32,bytes32))\":{\"notice\":\"Trades an NFT for a given amount of ERC-20 tokens (i.e.: AUT/USDT/USDC).\"},\"unpause()\":{\"notice\":\"Unpause the contract. Requirements: - the caller must be admin.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NFTMarketplace.sol\":\"NFTMarketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xa812eed728198acd2c30d06950a5bea8d68436e4f694dd892273266ec2f79f5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5522afc5c222c810d9ad67c45f37cb7169452fcf76692cad10ac8153c068daa\",\"dweb:/ipfs/QmX4XgnDp7pyvojQ6g5tacrUMCf7TED2qC2vERH9Xh9feZ\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xf7291d7213336b00ee7edbf7cd5034778dd7b0bda2a7489e664f1e5cacc6c24e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3671a157cfdc73f334fc9e584862e1b3b48e8b771cde69d79834b03dc5c2826\",\"dweb:/ipfs/QmVJnMc3FLyYzJFktqwinaZes3pnRPuU1wKmBGvGRfh4rc\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/IERC721Autentica.sol\":{\"keccak256\":\"0xbf314c917cf8444918592abe616556e729b8f8ece909d6d36a87ad221c6d7411\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd990a97c3b6529403511522a002f9e65dffbe70291b65cd297313ecb8235c4d\",\"dweb:/ipfs/QmS1sQRAKyeYJwRxdpn4R9EwnmvBn3VEmLRju5g4Xn7BqN\"]},\"project:/contracts/NFTMarketplace.sol\":{\"keccak256\":\"0xb5eb8de1e06be2127ffd9831d72e7a0fbc793de1e453986d564d43105373e0c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407e808c2ef39bece5560e4f5e1ed27f175f8019dd7ada9f5ad042a9843e1ad2\",\"dweb:/ipfs/QmYxNfBXYuBd4yhigVovwcqebJrpjUoN4VcKwhfzm4AYTC\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200307438038062003074833981016040819052620000349162000421565b600180556002805460ff191690556200004f600033620000f3565b6200007b7f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b92933620000f3565b60028054610100600160a81b0319166101006001600160a01b0385160217905560005b8151811015620000ea57620000d5828281518110620000c157620000c16200050a565b60200260200101516200010360201b60201c565b80620000e18162000520565b9150506200009e565b50505062000548565b620000ff8282620002dd565b5050565b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff16620001a25760405162461bcd60e51b815260206004820152603260248201527f4e46544d61726b6574706c6163653a204f6e6c792061646d696e732063616e2060448201527161646420616c6c6f77656420746f6b656e7360701b60648201526084015b60405180910390fd5b6001600160a01b038116620002035760405162461bcd60e51b815260206004820152603160248201526000805160206200305483398151915260448201527020746865207a65726f206164647265737360781b606482015260840162000199565b6200020e816200037d565b15620002655760405162461bcd60e51b815260206004820152603060248201526000805160206200305483398151915260448201526f08185b1c9958591e48185b1b1bddd95960821b606482015260840162000199565b6003805460018101825560009182527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b03841690811790915560405190917ff849d00bc67e9e4bf072df9680646c59b8c5380160834c2e1d4896ce5ec81f7591a250565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620000ff576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620003393390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000805b600354811015620003e557826001600160a01b031660038281548110620003ac57620003ac6200050a565b6000918252602090912001546001600160a01b031603620003d05750600192915050565b80620003dc8162000520565b91505062000381565b50600092915050565b80516001600160a01b03811681146200040657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200043557600080fd5b6200044083620003ee565b602084810151919350906001600160401b03808211156200046057600080fd5b818601915086601f8301126200047557600080fd5b8151818111156200048a576200048a6200040b565b8060051b604051601f19603f83011681018181108582111715620004b257620004b26200040b565b604052918252848201925083810185019189831115620004d157600080fd5b938501935b82851015620004fa57620004ea85620003ee565b84529385019392850192620004d6565b8096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200054157634e487b7160e01b600052601160045260246000fd5b5060010190565b612afc80620005586000396000f3fe6080604052600436106101815760003560e01c80635c975abb116100d157806391d148541161008a578063d0f4adca11610064578063d0f4adca14610450578063d547741f14610470578063f5b541a614610490578063f9eaee0d146104c457600080fd5b806391d1485414610406578063a217fddf14610426578063b4c438691461043b57600080fd5b80635c975abb146103635780636aaa90571461037b5780636bc79a671461039e57806376ab4570146103be5780638456cb59146103de578063862d32e2146103f357600080fd5b806336568abe1161013e5780633f4ba83a116101185780633f4ba83a146102d65780634178617f146102eb57806342f7260e1461030b57806359d7a4861461032b57600080fd5b806336568abe14610276578063369e4c2c146102965780633ab10409146102b657600080fd5b806301ffc9a714610186578063243f5c87146101bb578063248a9ca3146101db5780632e0f2625146102195780632f2ff15d14610240578063313ce56714610262575b600080fd5b34801561019257600080fd5b506101a66101a1366004612488565b6104e4565b60405190151581526020015b60405180910390f35b3480156101c757600080fd5b506101a66101d63660046124df565b61051b565b3480156101e757600080fd5b5061020b6101f6366004612558565b60009081526020819052604090206001015490565b6040519081526020016101b2565b34801561022557600080fd5b5061022e600281565b60405160ff90911681526020016101b2565b34801561024c57600080fd5b5061026061025b366004612571565b61064b565b005b34801561026e57600080fd5b50600261022e565b34801561028257600080fd5b50610260610291366004612571565b610675565b3480156102a257600080fd5b506101a66102b13660046125a1565b6106f3565b3480156102c257600080fd5b5061020b6102d13660046125e3565b6107e9565b3480156102e257600080fd5b50610260610881565b3480156102f757600080fd5b5061026061030636600461260f565b6108e0565b34801561031757600080fd5b506102606103263660046124df565b610a97565b34801561033757600080fd5b5061034b61034636600461260f565b610ef4565b6040516001600160a01b0390911681526020016101b2565b34801561036f57600080fd5b5060025460ff166101a6565b34801561038757600080fd5b5060025461010090046001600160a01b031661034b565b3480156103aa57600080fd5b5061034b6103b9366004612558565b610fc1565b3480156103ca57600080fd5b5061020b6103d93660046125e3565b611018565b3480156103ea57600080fd5b50610260611115565b61026061040136600461262c565b611170565b34801561041257600080fd5b506101a6610421366004612571565b61141d565b34801561043257600080fd5b5061020b600081565b34801561044757600080fd5b5060035461020b565b34801561045c57600080fd5b5061026061046b366004612558565b611446565b34801561047c57600080fd5b5061026061048b366004612571565b61162b565b34801561049c57600080fd5b5061020b7f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b92981565b3480156104d057600080fd5b506101a66104df36600461260f565b611650565b60006001600160e01b03198216637965db0b60e01b148061051557506301ffc9a760e01b6001600160e01b03198316145b92915050565b600061052960025460ff1690565b156105865760405162461bcd60e51b815260206004820152602260248201527f4e46544d61726b6574706c6163653a20436f6e74726163742069732070617573604482015261195960f21b60648201526084015b60405180910390fd5b61058f886116b9565b600061059b8989611749565b90506105a88989836119b3565b60006105b48a8a611018565b905060006105c28b8b6107e9565b90506105ce8287611a34565b6105e48b8b85600001518a8d8d88888e8e611ac2565b61063a5760405162461bcd60e51b815260206004820152602160248201527f4e46544d61726b6574706c6163653a20496e76616c6964207369676e617475726044820152606560f81b606482015260840161057d565b5060019a9950505050505050505050565b60008281526020819052604090206001015461066681611c45565b6106708383611c4f565b505050565b6001600160a01b03811633146106e55760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260840161057d565b6106ef8282611cd3565b5050565b60405163020604bf60e21b81526004810183905260009030906001600160a01b0386169063081812fc90602401602060405180830381865afa15801561073d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107619190612691565b6001600160a01b031614806107e1575060405163e985e9c560e01b81526001600160a01b03838116600483015230602483015285169063e985e9c590604401602060405180830381865afa1580156107bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e191906126ae565b949350505050565b6000806107fd846325bb1e8760e11b611d38565b1561087a5760405163f915765b60e01b8152600481018490526108779085906001600160a01b0382169063f915765b906024015b602060405180830381865afa15801561084e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087291906126d0565b611d54565b90505b9392505050565b61088c60003361141d565b6108d65760405162461bcd60e51b81526020600482015260276024820152600080516020612aa7833981519152604482015266756e706175736560c81b606482015260840161057d565b6108de611de3565b565b6108eb60003361141d565b6109405760405162461bcd60e51b81526020600482015260326024820152600080516020612aa783398151915260448201527161646420616c6c6f77656420746f6b656e7360701b606482015260840161057d565b6001600160a01b0381166109b05760405162461bcd60e51b815260206004820152603160248201527f4e46544d61726b6574706c6163653a20546f6b656e206164647265737320697360448201527020746865207a65726f206164647265737360781b606482015260840161057d565b6109b981611650565b15610a1f5760405162461bcd60e51b815260206004820152603060248201527f4e46544d61726b6574706c6163653a20546f6b656e206164647265737320697360448201526f08185b1c9958591e48185b1b1bddd95960821b606482015260840161057d565b6003805460018101825560009182527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b03841690811790915560405190917ff849d00bc67e9e4bf072df9680646c59b8c5380160834c2e1d4896ce5ec81f7591a250565b600260015403610ae95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161057d565b6002600155610af784611650565b610b4d5760405162461bcd60e51b815260206004820152602160248201527f4e46544d61726b6574706c6163653a20546f6b656e206e6f7420616c6c6f77656044820152601960fa1b606482015260840161057d565b610b5c8787878787878761051b565b506000610b698888611749565b90506000610b8b82610b7b8b8b611018565b610b858c8c6107e9565b87611e35565b905060006040518060600160405280610ba884600001518b611f8e565b8152602001610bbb84602001518b611f8e565b8152602001610bca878b611f8e565b905290506000610bda8983611fc1565b84516040516323b872dd60e01b81529192506001600160a01b038a16916323b872dd91610c0e918b919086906004016126e9565b6020604051808303816000875af1158015610c2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5191906126ae565b50602082015115610cd857604080850151602084015191516323b872dd60e01b81526001600160a01b038b16926323b872dd92610c93928c92906004016126e9565b6020604051808303816000875af1158015610cb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd691906126ae565b505b815115610d5957602084015182516040516323b872dd60e01b81526001600160a01b038b16926323b872dd92610d14928c9291906004016126e9565b6020604051808303816000875af1158015610d33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5791906126ae565b505b604082015115610de75760025460408084015190516323b872dd60e01b81526001600160a01b03808c16936323b872dd93610da2938d93610100909304909216916004016126e9565b6020604051808303816000875af1158015610dc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de591906126ae565b505b8351604051632142170760e11b81526001600160a01b038d16916342842e0e91610e18919033908f906004016126e9565b600060405180830381600087803b158015610e3257600080fd5b505af1158015610e46573d6000803e3d6000fd5b5050505083600001516001600160a01b03168a8c6001600160a01b03167f69d820f7af9ba1109e1ff47df37b0819b3ed419d6e5361abcd8574d4f836be1b610e8b3390565b8c8e8789600001518a60200151604051610edb969594939291906001600160a01b03968716815294909516602085015260408401929092526060830152608082015260a081019190915260c00190565b60405180910390a4505060018055505050505050505050565b6000610f00813361141d565b610f4e5760405162461bcd60e51b815260206004820152602b6024820152600080516020612aa783398151915260448201526a6368616e6765207468697360a81b606482015260840161057d565b600280546001600160a01b03848116610100908102610100600160a81b0319841617938490556040519281900482169304169082907fa2c04199617341beb18c0052b61ae8aa35006743d43ca44891ca000f56e9065590600090a3505060025461010090046001600160a01b0316919050565b6000610fcc60035490565b8210610fea5760405162461bcd60e51b815260040161057d9061270d565b60038281548110610ffd57610ffd612750565b6000918252602090912001546001600160a01b031692915050565b60008061102c846325bb1e8760e11b611d38565b1561106b57604051639e4c014160e01b8152600481018490526110649085906001600160a01b03821690639e4c014190602401610831565b905061087a565b61107c8463152a902d60e11b611d38565b1561087a576001600160a01b038416632a55205a8461109d6002600a612860565b6110a890606461286f565b6040516001600160e01b031960e085901b168152600481019290925260248201526044016040805180830381865afa1580156110e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110c919061288e565b95945050505050565b61112060003361141d565b6111685760405162461bcd60e51b81526020600482015260256024820152600080516020612aa7833981519152604482015264706175736560d81b606482015260840161057d565b6108de611ff1565b6002600154036111c25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161057d565b60026001553484146112245760405162461bcd60e51b815260206004820152602560248201527f4e46544d61726b6574706c6163653a204e6f7420656e6f75676820636f696e73604482015264081cd95b9d60da1b606482015260840161057d565b611234868686600087878761051b565b5060006112418787611749565b9050600061125d826112538a8a611018565b610b858b8b6107e9565b90506000604051806060016040528061127a84600001518a611f8e565b815260200161128d84602001518a611f8e565b815260200161129c878a611f8e565b9052905060006112ac8883611fc1565b90506112bc84600001518261202e565b6020820151156112d8576112d88460400151836020015161202e565b8151156112f1576112f18460200151836000015161202e565b60408201511561131b57600254604083015161131b9161010090046001600160a01b03169061202e565b8351604051632142170760e11b81526001600160a01b038c16916342842e0e9161134c919033908e906004016126e9565b600060405180830381600087803b15801561136657600080fd5b505af115801561137a573d6000803e3d6000fd5b5050505083600001516001600160a01b0316898b6001600160a01b03167f0208fc5be027d6de8ccfba986c6e00e8fe20decd43de203db40d4024616c23336113bf3390565b8c86886000015189602001516040516114059594939291906001600160a01b03959095168552602085019390935260408401919091526060830152608082015260a00190565b60405180910390a45050600180555050505050505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b61145160003361141d565b6114a95760405162461bcd60e51b81526020600482015260356024820152600080516020612aa783398151915260448201527472656d6f766520616c6c6f77656420746f6b656e7360581b606482015260840161057d565b60035481106114ca5760405162461bcd60e51b815260040161057d9061270d565b6000600382815481106114df576114df612750565b6000918252602090912001546001600160a01b031690506114ff60035490565b60010361153e576003805480611517576115176128bc565b600082815260209020810160001990810180546001600160a01b03191690550190556115f3565b6003600161154b60035490565b61155591906128d2565b8154811061156557611565612750565b600091825260209091200154600380546001600160a01b03909216918490811061159157611591612750565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060038054806115d0576115d06128bc565b600082815260209020810160001990810180546001600160a01b03191690550190555b6040516001600160a01b038216907fbf996b4fd74f0c7159bb017b1db415b0d9a6f13129f46d0b93309d170b78df3190600090a25050565b60008281526020819052604090206001015461164681611c45565b6106708383611cd3565b6000805b6003548110156116b057826001600160a01b03166003828154811061167b5761167b612750565b6000918252602090912001546001600160a01b03160361169e5750600192915050565b806116a8816128e9565b915050611654565b50600092915050565b6116ca816380ac58cd60e01b611d38565b6117465760405162461bcd60e51b815260206004820152604160248201527f4e46544d61726b6574706c6163653a20436f6c6c656374696f6e20646f65732060448201527f6e6f7420737570706f727420746865204552432d37323120696e7465726661636064820152606560f81b608482015260a40161057d565b50565b60408051606081018252600080825260208201819052918101919091526040805160608101918290526331a9108f60e11b90915260648101839052600090806001600160a01b038616636352211e60848301602060405180830381865afa1580156117b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117dc9190612691565b6001600160a01b031681526000602082018190526040909101529050611809846325bb1e8760e11b611d38565b156118fc57604051636a4731c560e11b8152600481018490526001600160a01b0385169063d48e638a90602401602060405180830381865afa158015611853573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118779190612691565b6001600160a01b03908116602083015260405163c99dccf960e01b8152600481018590529085169063c99dccf990602401602060405180830381865afa1580156118c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e99190612691565b6001600160a01b0316604082015261087a565b61190d8463152a902d60e11b611d38565b1561087a576001600160a01b038416632a55205a8461192e6002600a612860565b61193990606461286f565b6040516001600160e01b031960e085901b168152600481019290925260248201526044016040805180830381865afa158015611979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199d919061288e565b506001600160a01b031660208201529392505050565b6119c2838383600001516106f3565b6106705760405162461bcd60e51b815260206004820152603f60248201527f4e46544d61726b6574706c6163653a204f776e657220686173206e6f7420617060448201527f70726f76656420757320666f72206d616e6167696e6720697473204e46547300606482015260840161057d565b611a406002600a612860565b611a4b90606461286f565b611a558284612902565b11156106ef5760405162461bcd60e51b815260206004820152603660248201527f4e46544d61726b6574706c6163653a20546f74616c20666565732063616e6e6f604482015275742062652067726561746572207468616e203130302560501b606482015260840161057d565b60408051306020808301919091526001600160a01b038d811683850152606083018d90528b811660808401528a811660a084015260c083018a9052881660e08301526101008201879052610120820186905261014080830186905283518084039091018152610160830190935282519201919091207f19457468657265756d205369676e6564204d6573736167653a0a33320000000061018083015261019c820181905260009182906001906101bc0160408051601f19818403018152919052805160209182012090611b9790870187612929565b604080516000815260208181018084529490945260ff9092168282015291870135606082015290860135608082015260a0016020604051602081039080840390855afa158015611beb573d6000803e3d6000fd5b5050604051601f1901519150611c04905060008261141d565b80611c345750611c347f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9298261141d565b9d9c50505050505050505050505050565b61174681336120dd565b611c59828261141d565b6106ef576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055611c8f3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b611cdd828261141d565b156106ef576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000611d4383612141565b801561087a575061087a8383612174565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db89190612946565b611dc390600a612860565b611dcf6002600a612860565b611dd9908461286f565b61087a9190612963565b611deb61225d565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b604080518082019091526000808252602082015260006040518060400160405280600081526020016000815250905085602001516001600160a01b031686600001516001600160a01b031603611efe5760408601516001600160a01b031615801590611ea15750600084115b15611ef957611eb26002600a612860565b611ebd90606461286f565b83611eca6002600a612860565b611ed590606461286f565b611edf91906128d2565b611ee9908661286f565b611ef39190612963565b60208201525b61110c565b60208601516001600160a01b031615801590611f1a5750600085115b1561110c5784815260408601516001600160a01b031615801590611f3e5750600084115b1561110c57611f4f6002600a612860565b611f5a90606461286f565b8151611f66908661286f565b611f709190612963565b602082018190528151611f8391906128d2565b815295945050505050565b600082600003611fa057506000610515565b611fac6002600a612860565b611fb790606461286f565b611dd9848461286f565b600081602001518260000151836040015185611fdd91906128d2565b611fe791906128d2565b61087a91906128d2565b611ff96122a6565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611e183390565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461207b576040519150601f19603f3d011682016040523d82523d6000602084013e612080565b606091505b50509050806106705760405162461bcd60e51b8152602060048201526024808201527f4e46544d61726b6574706c6163653a204661696c656420746f2073656e6420636044820152636f696e7360e01b606482015260840161057d565b6120e7828261141d565b6106ef576120ff816001600160a01b031660146122ec565b61210a8360206122ec565b60405160200161211b9291906129b5565b60408051601f198184030181529082905262461bcd60e51b825261057d91600401612a2a565b6000612154826301ffc9a760e01b612174565b8015610515575061216d826001600160e01b0319612174565b1592915050565b604080516001600160e01b0319831660248083019190915282518083039091018152604490910182526020810180516001600160e01b03166301ffc9a760e01b179052905160009190829081906001600160a01b03871690617530906121db908690612a5d565b6000604051808303818686fa925050503d8060008114612217576040519150601f19603f3d011682016040523d82523d6000602084013e61221c565b606091505b50915091506020815110156122375760009350505050610515565b81801561225357508080602001905181019061225391906126ae565b9695505050505050565b60025460ff166108de5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161057d565b60025460ff16156108de5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161057d565b606060006122fb83600261286f565b612306906002612902565b67ffffffffffffffff81111561231e5761231e612a79565b6040519080825280601f01601f191660200182016040528015612348576020820181803683370190505b509050600360fc1b8160008151811061236357612363612750565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061239257612392612750565b60200101906001600160f81b031916908160001a90535060006123b684600261286f565b6123c1906001612902565b90505b6001811115612439576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106123f5576123f5612750565b1a60f81b82828151811061240b5761240b612750565b60200101906001600160f81b031916908160001a90535060049490941c9361243281612a8f565b90506123c4565b50831561087a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161057d565b60006020828403121561249a57600080fd5b81356001600160e01b03198116811461087a57600080fd5b6001600160a01b038116811461174657600080fd5b6000606082840312156124d957600080fd5b50919050565b6000806000806000806000610120888a0312156124fb57600080fd5b8735612506816124b2565b965060208801359550604088013594506060880135612524816124b2565b93506080880135612534816124b2565b925060a0880135915061254a8960c08a016124c7565b905092959891949750929550565b60006020828403121561256a57600080fd5b5035919050565b6000806040838503121561258457600080fd5b823591506020830135612596816124b2565b809150509250929050565b6000806000606084860312156125b657600080fd5b83356125c1816124b2565b92506020840135915060408401356125d8816124b2565b809150509250925092565b600080604083850312156125f657600080fd5b8235612601816124b2565b946020939093013593505050565b60006020828403121561262157600080fd5b813561087a816124b2565b600080600080600080610100878903121561264657600080fd5b8635612651816124b2565b95506020870135945060408701359350606087013561266f816124b2565b9250608087013591506126858860a089016124c7565b90509295509295509295565b6000602082840312156126a357600080fd5b815161087a816124b2565b6000602082840312156126c057600080fd5b8151801515811461087a57600080fd5b6000602082840312156126e257600080fd5b5051919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60208082526023908201527f4e46544d61726b6574706c6163653a20496e646578206f7574206f6620626f756040820152626e647360e81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600181815b808511156127b757816000190482111561279d5761279d612766565b808516156127aa57918102915b93841c9390800290612781565b509250929050565b6000826127ce57506001610515565b816127db57506000610515565b81600181146127f157600281146127fb57612817565b6001915050610515565b60ff84111561280c5761280c612766565b50506001821b610515565b5060208310610133831016604e8410600b841016171561283a575081810a610515565b612844838361277c565b806000190482111561285857612858612766565b029392505050565b600061087a60ff8416836127bf565b600081600019048311821515161561288957612889612766565b500290565b600080604083850312156128a157600080fd5b82516128ac816124b2565b6020939093015192949293505050565b634e487b7160e01b600052603160045260246000fd5b6000828210156128e4576128e4612766565b500390565b6000600182016128fb576128fb612766565b5060010190565b6000821982111561291557612915612766565b500190565b60ff8116811461174657600080fd5b60006020828403121561293b57600080fd5b813561087a8161291a565b60006020828403121561295857600080fd5b815161087a8161291a565b60008261298057634e487b7160e01b600052601260045260246000fd5b500490565b60005b838110156129a0578181015183820152602001612988565b838111156129af576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516129ed816017850160208801612985565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612a1e816028840160208801612985565b01602801949350505050565b6020815260008251806020840152612a49816040850160208701612985565b601f01601f19169190910160400192915050565b60008251612a6f818460208701612985565b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b600081612a9e57612a9e612766565b50600019019056fe4e46544d61726b6574706c6163653a204f6e6c792061646d696e732063616e20a26469706673582212209b6e613866f3773800ad06ff28ec05881903c3159fc6993c4e9607677b410a1964736f6c634300080f00334e46544d61726b6574706c6163653a20546f6b656e2061646472657373206973",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3167:30",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:30",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:30"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:30"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:30"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:30"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:30",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:30",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:30"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:30"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:30",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:30"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:30"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:30"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:30"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:30",
                "type": ""
              }
            ],
            "src": "14:177:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "228:95:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "245:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "252:3:30",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "257:10:30",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "248:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "248:20:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "238:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "238:31:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "238:31:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "285:1:30",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "288:4:30",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "278:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "278:15:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "278:15:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "309:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "312:4:30",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "302:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:15:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "302:15:30"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "196:127:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "451:1091:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "497:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "506:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "509:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "499:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "499:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "499:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "472:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "481:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "468:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "468:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "493:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "464:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "464:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "461:52:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "522:50:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "562:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "532:29:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:40:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "522:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "581:12:30",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "591:2:30",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "585:2:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "602:39:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "626:9:30"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "637:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "622:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "622:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "616:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:25:30"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "606:6:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "650:28:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "668:2:30",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "672:1:30",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "664:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "664:10:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "676:1:30",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "660:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "660:18:30"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "654:2:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "705:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "714:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "717:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "707:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "707:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "707:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "693:6:30"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "701:2:30"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "690:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "690:14:30"
                  },
                  "nodeType": "YulIf",
                  "src": "687:34:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "730:32:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "744:9:30"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "755:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "740:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "740:22:30"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "734:2:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "810:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "819:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "822:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "812:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "812:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "812:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "789:2:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "793:4:30",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "785:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "785:13:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "800:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "781:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "781:27:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "774:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "774:35:30"
                  },
                  "nodeType": "YulIf",
                  "src": "771:55:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "835:19:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "851:2:30"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "845:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "845:9:30"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "839:2:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "877:22:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "879:16:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "879:18:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "879:18:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "869:2:30"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "873:2:30"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "866:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "866:10:30"
                  },
                  "nodeType": "YulIf",
                  "src": "863:36:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "908:20:30",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "922:1:30",
                        "type": "",
                        "value": "5"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "925:2:30"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "918:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "918:10:30"
                  },
                  "variables": [
                    {
                      "name": "_5",
                      "nodeType": "YulTypedName",
                      "src": "912:2:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "937:23:30",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "957:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "951:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "951:9:30"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "941:6:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "969:56:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "991:6:30"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_5",
                                "nodeType": "YulIdentifier",
                                "src": "1007:2:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1011:2:30",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1003:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1003:11:30"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1020:2:30",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "1016:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1016:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "999:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "999:25:30"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "987:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "987:38:30"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "973:10:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1084:22:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1086:16:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1086:18:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1086:18:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1043:10:30"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1055:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1040:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1040:18:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1063:10:30"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1075:6:30"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1060:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1060:22:30"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1037:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1037:46:30"
                  },
                  "nodeType": "YulIf",
                  "src": "1034:72:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1122:2:30",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1126:10:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1115:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1115:22:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1115:22:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1146:17:30",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1157:6:30"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "1150:3:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1179:6:30"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1187:2:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1172:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1172:18:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1172:18:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1199:22:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1210:6:30"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1218:2:30"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1206:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1206:15:30"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "1199:3:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1230:34:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1252:2:30"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "1256:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1248:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1248:11:30"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1261:2:30"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1244:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1244:20:30"
                  },
                  "variables": [
                    {
                      "name": "srcEnd",
                      "nodeType": "YulTypedName",
                      "src": "1234:6:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1296:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1305:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1308:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1298:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1298:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1298:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1279:6:30"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1287:7:30"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1276:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1276:19:30"
                  },
                  "nodeType": "YulIf",
                  "src": "1273:39:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1321:22:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1336:2:30"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1340:2:30"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1332:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1332:11:30"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "1325:3:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1408:103:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "1429:3:30"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "1464:3:30"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_address_fromMemory",
                                "nodeType": "YulIdentifier",
                                "src": "1434:29:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1434:34:30"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1422:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1422:47:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1422:47:30"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1482:19:30",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "1493:3:30"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1498:2:30"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1489:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1489:12:30"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "1482:3:30"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "1363:3:30"
                      },
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1368:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1360:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1360:15:30"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1376:23:30",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1378:19:30",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "1389:3:30"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1394:2:30"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1385:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1385:12:30"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "1378:3:30"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1356:3:30",
                    "statements": []
                  },
                  "src": "1352:159:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1520:16:30",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1530:6:30"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1520:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "409:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "420:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "432:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "440:6:30",
                "type": ""
              }
            ],
            "src": "328:1214:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1579:95:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1596:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1603:3:30",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1608:10:30",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1599:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1599:20:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1589:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1589:31:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1589:31:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1636:1:30",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1639:4:30",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1629:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1629:15:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1629:15:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1660:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1663:4:30",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1653:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1653:15:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1653:15:30"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "1547:127:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1726:185:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1765:111:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1786:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1793:3:30",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1798:10:30",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1789:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1789:20:30"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1779:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1779:31:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1779:31:30"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1830:1:30",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1833:4:30",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1823:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1823:15:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1823:15:30"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1858:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1861:4:30",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1851:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1851:15:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1851:15:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1742:5:30"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1753:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1749:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1749:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1739:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1739:17:30"
                  },
                  "nodeType": "YulIf",
                  "src": "1736:140:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1885:20:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1896:5:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1903:1:30",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1892:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1892:13:30"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1885:3:30"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1708:5:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1718:3:30",
                "type": ""
              }
            ],
            "src": "1679:232:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2090:240:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2107:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2118:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2100:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2100:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2100:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2141:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2152:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2137:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2137:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2157:2:30",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2130:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2130:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2130:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2180:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2191:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2176:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2176:18:30"
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a204f6e6c792061646d696e732063616e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2196:34:30",
                        "type": "",
                        "value": "NFTMarketplace: Only admins can "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2169:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2169:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2169:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2251:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2262:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2247:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2247:18:30"
                      },
                      {
                        "hexValue": "61646420616c6c6f77656420746f6b656e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2267:20:30",
                        "type": "",
                        "value": "add allowed tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2240:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2240:48:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2240:48:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2297:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2309:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2320:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2305:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2305:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2297:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b753c4b03d4dd0510cd5df5e091e23a0360aa94654e3a2acf61424f3ca3ad485__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2067:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2081:4:30",
                "type": ""
              }
            ],
            "src": "1916:414:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2509:239:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2526:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2537:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2519:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2519:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2519:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2560:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2571:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2556:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2556:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2576:2:30",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2549:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2549:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2549:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2599:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2610:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2595:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2595:18:30"
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a20546f6b656e2061646472657373206973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2615:34:30",
                        "type": "",
                        "value": "NFTMarketplace: Token address is"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2588:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2588:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2588:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2670:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2681:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2666:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2666:18:30"
                      },
                      {
                        "hexValue": "20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2686:19:30",
                        "type": "",
                        "value": " the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2659:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2659:47:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2659:47:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2715:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2727:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2738:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2723:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2723:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2715:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_047838e034479d979cd1cbaad729b6c197e347371857b0a9abb194247d90b575__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2486:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2500:4:30",
                "type": ""
              }
            ],
            "src": "2335:413:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2927:238:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2944:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2955:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2937:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2937:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2937:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2978:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2989:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2974:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2974:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2994:2:30",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2967:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2967:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2967:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3017:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3028:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3013:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3013:18:30"
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a20546f6b656e2061646472657373206973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3033:34:30",
                        "type": "",
                        "value": "NFTMarketplace: Token address is"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3006:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3006:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3006:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3088:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3099:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3084:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3084:18:30"
                      },
                      {
                        "hexValue": "20616c726561647920616c6c6f776564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3104:18:30",
                        "type": "",
                        "value": " already allowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3077:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3077:46:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3077:46:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3132:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3144:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3155:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3140:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3140:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3132:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f098a9291f0a697ff57d1514eeeac79edade7dc88d74b3d00f20a8a2791889e1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2904:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2918:4:30",
                "type": ""
              }
            ],
            "src": "2753:412:30"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let _1 := 32\n        let offset := mload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_address_fromMemory(src))\n            dst := add(dst, _1)\n        }\n        value1 := memPtr\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_b753c4b03d4dd0510cd5df5e091e23a0360aa94654e3a2acf61424f3ca3ad485__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"NFTMarketplace: Only admins can \")\n        mstore(add(headStart, 96), \"add allowed tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_047838e034479d979cd1cbaad729b6c197e347371857b0a9abb194247d90b575__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"NFTMarketplace: Token address is\")\n        mstore(add(headStart, 96), \" the zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f098a9291f0a697ff57d1514eeeac79edade7dc88d74b3d00f20a8a2791889e1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"NFTMarketplace: Token address is\")\n        mstore(add(headStart, 96), \" already allowed\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 30,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:23760:30",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:30",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:217:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "129:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "138:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "141:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "131:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "131:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "131:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "104:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "113:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "100:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "100:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "125:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "96:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "93:52:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "154:36:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "180:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "167:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "167:23:30"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "158:5:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "212:5:30"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "223:5:30"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "234:3:30",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "239:10:30",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "230:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "230:20:30"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "219:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "219:32:30"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "209:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "209:43:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "202:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "202:51:30"
                  },
                  "nodeType": "YulIf",
                  "src": "199:71:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "49:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "60:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "72:6:30",
                "type": ""
              }
            ],
            "src": "14:286:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "400:92:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "410:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "433:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "410:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "452:9:30"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "477:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "470:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "470:14:30"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "463:6:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "463:22:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "445:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "445:41:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "445:41:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "369:9:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "380:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "391:4:30",
                "type": ""
              }
            ],
            "src": "305:187:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "542:86:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "606:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "615:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "618:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "608:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "608:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "608:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "565:5:30"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "576:5:30"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "591:3:30",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "596:1:30",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "587:3:30"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "587:11:30"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "600:1:30",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "583:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "583:19:30"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "572:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "572:31:30"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "562:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:42:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "555:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "555:50:30"
                  },
                  "nodeType": "YulIf",
                  "src": "552:70:30"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "531:5:30",
                "type": ""
              }
            ],
            "src": "497:131:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "705:85:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "744:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "753:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "756:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "746:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "746:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "746:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "726:3:30"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "731:6:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "722:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "722:16:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "740:2:30",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "718:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "718:25:30"
                  },
                  "nodeType": "YulIf",
                  "src": "715:45:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "769:15:30",
                  "value": {
                    "name": "offset",
                    "nodeType": "YulIdentifier",
                    "src": "778:6:30"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_struct_Signature_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "679:6:30",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "687:3:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "695:5:30",
                "type": ""
              }
            ],
            "src": "633:157:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "996:666:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1043:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1052:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1055:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1045:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1045:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1045:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1017:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1026:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1013:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1013:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1038:3:30",
                        "type": "",
                        "value": "288"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1009:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1009:33:30"
                  },
                  "nodeType": "YulIf",
                  "src": "1006:53:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1068:36:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1094:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1081:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1081:23:30"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1072:5:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1138:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1113:24:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1113:31:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1113:31:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1153:15:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1163:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1153:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1177:42:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1204:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1215:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1200:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1200:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1187:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1187:32:30"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1177:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1228:42:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1255:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1266:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1251:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1251:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1238:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1238:32:30"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1228:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1279:47:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1311:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1322:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1307:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1307:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1294:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1294:32:30"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1283:7:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1360:7:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1335:24:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1335:33:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1335:33:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1377:17:30",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1387:7:30"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1377:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1403:48:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1435:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1446:3:30",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1431:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1431:19:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1418:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1418:33:30"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "1407:7:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "1485:7:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1460:24:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1460:33:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1460:33:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1502:17:30",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "1512:7:30"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1502:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1528:43:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1555:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1566:3:30",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1551:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1551:19:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1538:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1538:33:30"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "1528:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1580:76:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1631:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1642:3:30",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1627:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1627:19:30"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1648:7:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_struct_Signature_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "1590:36:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1590:66:30"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "1580:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256t_addresst_addresst_uint256t_struct$_Signature_$4425_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "914:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "925:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "937:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "945:6:30",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "953:6:30",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "961:6:30",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "969:6:30",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "977:6:30",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "985:6:30",
                "type": ""
              }
            ],
            "src": "795:867:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1737:110:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1783:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1792:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1795:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1785:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1785:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1785:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1758:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1767:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1754:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1754:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1779:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1750:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1750:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "1747:52:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1808:33:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1831:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1818:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1818:23:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1808:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1703:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1714:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1726:6:30",
                "type": ""
              }
            ],
            "src": "1667:180:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1953:76:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1963:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1975:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1986:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1971:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1971:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1963:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2005:9:30"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2016:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1998:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1998:25:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1998:25:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1922:9:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1933:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1944:4:30",
                "type": ""
              }
            ],
            "src": "1852:177:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2131:87:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2141:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2153:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2164:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2149:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2149:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2141:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2183:9:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2198:6:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2206:4:30",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2194:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2194:17:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2176:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2176:36:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2176:36:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2100:9:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2111:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2122:4:30",
                "type": ""
              }
            ],
            "src": "2034:184:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2310:228:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2356:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2365:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2368:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2358:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2358:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2358:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2331:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2340:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2327:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2327:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2352:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2323:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2323:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "2320:52:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2381:33:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2404:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2391:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2391:23:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2381:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2423:45:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2453:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2464:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2449:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2449:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2436:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2436:32:30"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2427:5:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2502:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2477:24:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2477:31:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2477:31:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2517:15:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2527:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2517:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2268:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2279:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2291:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2299:6:30",
                "type": ""
              }
            ],
            "src": "2223:315:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2663:352:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2709:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2718:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2721:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2711:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2711:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2711:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2684:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2693:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2680:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2680:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2705:2:30",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2676:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2676:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "2673:52:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2734:36:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2760:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2747:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2747:23:30"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2738:5:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2804:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2779:24:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2779:31:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2779:31:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2819:15:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2829:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2819:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2843:42:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2870:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2881:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2866:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2866:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2853:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2853:32:30"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2843:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2894:47:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2926:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2937:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2922:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2922:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2909:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2909:32:30"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2898:7:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2975:7:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2950:24:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2950:33:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2950:33:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2992:17:30",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3002:7:30"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2992:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC721_$2231t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2613:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2624:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2636:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2644:6:30",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2652:6:30",
                "type": ""
              }
            ],
            "src": "2543:472:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3107:228:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3153:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3162:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3165:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3155:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3155:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3155:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3128:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3137:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3124:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3124:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3149:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3120:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3120:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "3117:52:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3178:36:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3204:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3191:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3191:23:30"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3182:5:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3248:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3223:24:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3223:31:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3223:31:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3263:15:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3273:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3263:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3287:42:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3314:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3325:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3310:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3310:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3297:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3297:32:30"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3287:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3065:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3076:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3088:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3096:6:30",
                "type": ""
              }
            ],
            "src": "3020:315:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3441:76:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3451:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3463:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3474:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3459:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3459:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3451:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3493:9:30"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3504:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3486:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3486:25:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3486:25:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3410:9:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3421:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3432:4:30",
                "type": ""
              }
            ],
            "src": "3340:177:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3592:177:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3638:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3647:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3650:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3640:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3640:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3640:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3613:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3622:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3609:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3609:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3634:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3605:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3605:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "3602:52:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3663:36:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3689:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3676:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3676:23:30"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3667:5:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3733:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3708:24:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3708:31:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3708:31:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3748:15:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3758:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3748:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3558:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3569:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3581:6:30",
                "type": ""
              }
            ],
            "src": "3522:247:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3875:102:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3885:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3897:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3908:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3893:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3893:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3885:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3927:9:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3942:6:30"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3958:3:30",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3963:1:30",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3954:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3954:11:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3967:1:30",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3950:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3950:19:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3938:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3938:32:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3920:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3920:51:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3920:51:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3844:9:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3855:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3866:4:30",
                "type": ""
              }
            ],
            "src": "3774:203:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4052:110:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4098:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4107:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4110:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4100:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4100:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4100:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4073:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4082:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4069:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4069:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4094:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4065:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4065:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "4062:52:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4123:33:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4146:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4133:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4133:23:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4123:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4018:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4029:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4041:6:30",
                "type": ""
              }
            ],
            "src": "3982:180:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4351:541:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4398:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4407:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4410:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4400:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4400:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4400:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4372:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4381:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4368:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4368:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4393:3:30",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4364:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4364:33:30"
                  },
                  "nodeType": "YulIf",
                  "src": "4361:53:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4423:36:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4449:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4436:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4436:23:30"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4427:5:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4493:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4468:24:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4468:31:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4468:31:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4508:15:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4518:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4508:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4532:42:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4559:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4570:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4555:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4555:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4542:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4542:32:30"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4532:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4583:42:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4610:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4621:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4606:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4606:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4593:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4593:32:30"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4583:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4634:47:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4666:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4677:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4662:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4662:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4649:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4649:32:30"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "4638:7:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "4715:7:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4690:24:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4690:33:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4690:33:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4732:17:30",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "4742:7:30"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4732:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4758:43:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4785:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4796:3:30",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4781:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4781:19:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4768:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4768:33:30"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "4758:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4810:76:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4861:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4872:3:30",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4857:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4857:19:30"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4878:7:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_struct_Signature_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "4820:36:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4820:66:30"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "4810:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256t_addresst_uint256t_struct$_Signature_$4425_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4277:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4288:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4300:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4308:6:30",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4316:6:30",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4324:6:30",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4332:6:30",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4340:6:30",
                "type": ""
              }
            ],
            "src": "4167:725:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5071:224:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5088:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5099:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5081:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5081:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5081:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5122:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5133:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5118:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5118:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5138:2:30",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5111:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5111:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5111:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5161:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5172:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5157:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5157:18:30"
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a20436f6e74726163742069732070617573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5177:34:30",
                        "type": "",
                        "value": "NFTMarketplace: Contract is paus"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5150:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5150:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5150:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5232:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5243:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5228:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5228:18:30"
                      },
                      {
                        "hexValue": "6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5248:4:30",
                        "type": "",
                        "value": "ed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5221:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5221:32:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5221:32:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5262:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5274:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5285:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5270:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5270:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5262:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8dcc686c4a6a1a4ebaba9bc6342fea45046a35b0d8e62790c842acb60fd5499__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5048:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5062:4:30",
                "type": ""
              }
            ],
            "src": "4897:398:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5474:223:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5491:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5502:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5484:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5484:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5484:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5525:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5536:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5521:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5521:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5541:2:30",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5514:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5514:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5514:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5564:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5575:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5560:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5560:18:30"
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a20496e76616c6964207369676e61747572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5580:34:30",
                        "type": "",
                        "value": "NFTMarketplace: Invalid signatur"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5553:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5553:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5553:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5635:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5646:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5631:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5631:18:30"
                      },
                      {
                        "hexValue": "65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5651:3:30",
                        "type": "",
                        "value": "e"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5624:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5624:31:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5624:31:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5664:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5676:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5687:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5672:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5672:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5664:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3db3e0e3ece1ec4c6ecd819f5497ad06ad7e6f1407308a89a68b16df3b3d74b4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5451:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5465:4:30",
                "type": ""
              }
            ],
            "src": "5300:397:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5876:237:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5893:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5904:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5886:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5886:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5886:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5927:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5938:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5923:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5923:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5943:2:30",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5916:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5916:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5916:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5966:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5977:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5962:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5962:18:30"
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5982:34:30",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5955:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5955:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5955:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6037:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6048:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6033:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6033:18:30"
                      },
                      {
                        "hexValue": "20726f6c657320666f722073656c66",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6053:17:30",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6026:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6026:45:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6026:45:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6080:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6092:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6103:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6088:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6088:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6080:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5853:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5867:4:30",
                "type": ""
              }
            ],
            "src": "5702:411:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6199:170:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6245:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6254:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6257:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6247:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6247:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6247:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6220:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6229:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6216:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6216:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6241:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6212:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6212:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "6209:52:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6270:29:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6289:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6283:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6283:16:30"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6274:5:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6333:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6308:24:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6308:31:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6308:31:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6348:15:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6358:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6348:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6165:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6176:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6188:6:30",
                "type": ""
              }
            ],
            "src": "6118:251:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6503:175:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6513:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6525:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6536:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6521:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6521:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6513:4:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6548:29:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6566:3:30",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6571:1:30",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6562:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6562:11:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6575:1:30",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6558:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6558:19:30"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6552:2:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6593:9:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6608:6:30"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6616:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6604:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6604:15:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6586:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6586:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6586:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6640:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6651:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6636:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6636:18:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6660:6:30"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6668:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6656:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6656:15:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6629:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6629:43:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6629:43:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6464:9:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6475:6:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6483:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6494:4:30",
                "type": ""
              }
            ],
            "src": "6374:304:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6761:199:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6807:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6816:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6819:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6809:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6809:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6809:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6782:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6791:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6778:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6778:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6803:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6774:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6774:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "6771:52:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6832:29:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6851:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6845:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6845:16:30"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6836:5:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6914:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6923:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6926:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6916:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6916:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6916:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6883:5:30"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6904:5:30"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6897:6:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6897:13:30"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6890:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6890:21:30"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6880:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6880:32:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6873:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6873:40:30"
                  },
                  "nodeType": "YulIf",
                  "src": "6870:60:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6939:15:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6949:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6939:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6727:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6738:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6750:6:30",
                "type": ""
              }
            ],
            "src": "6683:277:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7046:103:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7092:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7101:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7104:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7094:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7094:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7094:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7067:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7076:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7063:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7063:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7088:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7059:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7059:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "7056:52:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7117:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7133:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7127:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7127:16:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7117:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7012:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7023:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7035:6:30",
                "type": ""
              }
            ],
            "src": "6965:184:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7328:229:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7345:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7356:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7338:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7338:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7338:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7379:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7390:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7375:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7375:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7395:2:30",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7368:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7368:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7368:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7418:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7429:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7414:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7414:18:30"
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a204f6e6c792061646d696e732063616e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7434:34:30",
                        "type": "",
                        "value": "NFTMarketplace: Only admins can "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7407:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7407:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7407:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7489:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7500:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7485:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7485:18:30"
                      },
                      {
                        "hexValue": "756e7061757365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7505:9:30",
                        "type": "",
                        "value": "unpause"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7478:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7478:37:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7478:37:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7524:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7536:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7547:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7532:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7532:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7524:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a49411e75e33a28db4e4a642068002ede44980cb8ff19c1c1c6795425ecff472__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7305:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7319:4:30",
                "type": ""
              }
            ],
            "src": "7154:403:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7736:240:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7753:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7764:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7746:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7746:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7746:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7787:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7798:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7783:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7783:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7803:2:30",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7776:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7776:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7776:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7826:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7837:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7822:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7822:18:30"
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a204f6e6c792061646d696e732063616e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7842:34:30",
                        "type": "",
                        "value": "NFTMarketplace: Only admins can "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7815:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7815:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7815:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7897:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7908:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7893:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7893:18:30"
                      },
                      {
                        "hexValue": "61646420616c6c6f77656420746f6b656e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7913:20:30",
                        "type": "",
                        "value": "add allowed tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7886:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7886:48:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7886:48:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7943:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7955:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7966:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7951:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7951:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7943:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b753c4b03d4dd0510cd5df5e091e23a0360aa94654e3a2acf61424f3ca3ad485__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7713:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7727:4:30",
                "type": ""
              }
            ],
            "src": "7562:414:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8155:239:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8172:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8183:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8165:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8165:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8165:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8206:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8217:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8202:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8202:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8222:2:30",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8195:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8195:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8195:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8245:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8256:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8241:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8241:18:30"
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a20546f6b656e2061646472657373206973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8261:34:30",
                        "type": "",
                        "value": "NFTMarketplace: Token address is"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8234:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8234:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8234:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8316:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8327:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8312:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8312:18:30"
                      },
                      {
                        "hexValue": "20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8332:19:30",
                        "type": "",
                        "value": " the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8305:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8305:47:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8305:47:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8361:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8373:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8384:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8369:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8369:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8361:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_047838e034479d979cd1cbaad729b6c197e347371857b0a9abb194247d90b575__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8132:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8146:4:30",
                "type": ""
              }
            ],
            "src": "7981:413:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8573:238:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8590:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8601:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8583:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8583:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8583:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8624:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8635:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8620:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8620:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8640:2:30",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8613:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8613:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8613:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8663:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8674:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8659:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8659:18:30"
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a20546f6b656e2061646472657373206973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8679:34:30",
                        "type": "",
                        "value": "NFTMarketplace: Token address is"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8652:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8652:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8652:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8734:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8745:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8730:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8730:18:30"
                      },
                      {
                        "hexValue": "20616c726561647920616c6c6f776564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8750:18:30",
                        "type": "",
                        "value": " already allowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8723:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8723:46:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8723:46:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8778:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8790:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8801:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8786:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8786:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8778:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f098a9291f0a697ff57d1514eeeac79edade7dc88d74b3d00f20a8a2791889e1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8550:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8564:4:30",
                "type": ""
              }
            ],
            "src": "8399:412:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8990:181:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9007:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9018:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9000:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9000:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9000:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9041:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9052:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9037:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9037:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9057:2:30",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9030:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9030:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9030:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9080:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9091:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9076:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9076:18:30"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9096:33:30",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9069:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9069:61:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9069:61:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9139:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9151:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9162:2:30",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9147:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9147:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9139:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8967:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8981:4:30",
                "type": ""
              }
            ],
            "src": "8816:355:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9350:223:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9367:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9378:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9360:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9360:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9360:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9401:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9412:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9397:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9397:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9417:2:30",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9390:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9390:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9390:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9440:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9451:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9436:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9436:18:30"
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a20546f6b656e206e6f7420616c6c6f7765",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9456:34:30",
                        "type": "",
                        "value": "NFTMarketplace: Token not allowe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9429:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9429:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9429:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9511:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9522:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9507:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9507:18:30"
                      },
                      {
                        "hexValue": "64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9527:3:30",
                        "type": "",
                        "value": "d"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9500:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9500:31:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9500:31:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9540:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9552:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9563:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9548:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9548:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9540:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_792b9729a68843bb2c7d2eb5892b6655642f5e882d2cd54d202538a750b246be__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9327:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9341:4:30",
                "type": ""
              }
            ],
            "src": "9176:397:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9735:218:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9745:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9757:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9768:2:30",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9753:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9753:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9745:4:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9780:29:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9798:3:30",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9803:1:30",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "9794:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9794:11:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9807:1:30",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "9790:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9790:19:30"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9784:2:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9825:9:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9840:6:30"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "9848:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9836:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9836:15:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9818:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9818:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9818:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9872:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9883:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9868:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9868:18:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "9892:6:30"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "9900:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9888:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9888:15:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9861:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9861:43:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9861:43:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9924:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9935:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9920:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9920:18:30"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9940:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9913:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9913:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9913:34:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9688:9:30",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9699:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9707:6:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9715:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9726:4:30",
                "type": ""
              }
            ],
            "src": "9578:375:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10199:350:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10209:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10221:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10232:3:30",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10217:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10217:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10209:4:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10245:29:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10263:3:30",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10268:1:30",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10259:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10259:11:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10272:1:30",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10255:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10255:19:30"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "10249:2:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10290:9:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10305:6:30"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10313:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10301:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10301:15:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10283:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10283:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10283:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10337:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10348:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10333:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10333:18:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "10357:6:30"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10365:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10353:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10353:15:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10326:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10326:43:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10326:43:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10389:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10400:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10385:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10385:18:30"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10405:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10378:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10378:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10378:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10432:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10443:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10428:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10428:18:30"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "10448:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10421:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10421:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10421:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10475:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10486:3:30",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10471:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10471:19:30"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "10492:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10464:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10464:35:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10464:35:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10519:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10530:3:30",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10515:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10515:19:30"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "10536:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10508:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10508:35:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10508:35:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10128:9:30",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "10139:6:30",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "10147:6:30",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "10155:6:30",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10163:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10171:6:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10179:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10190:4:30",
                "type": ""
              }
            ],
            "src": "9958:591:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10728:233:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10745:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10756:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10738:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10738:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10738:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10779:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10790:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10775:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10775:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10795:2:30",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10768:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10768:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10768:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10818:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10829:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10814:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10814:18:30"
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a204f6e6c792061646d696e732063616e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10834:34:30",
                        "type": "",
                        "value": "NFTMarketplace: Only admins can "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10807:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10807:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10807:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10889:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10900:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10885:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10885:18:30"
                      },
                      {
                        "hexValue": "6368616e67652074686973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10905:13:30",
                        "type": "",
                        "value": "change this"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10878:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10878:41:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10878:41:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10928:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10940:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10951:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10936:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10936:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10928:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1f10fd82e80ac2b4c4e4d06d0116e45eeebc7221a9f074b47c415d6e7232ae44__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10705:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10719:4:30",
                "type": ""
              }
            ],
            "src": "10554:407:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11140:225:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11157:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11168:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11150:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11150:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11150:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11191:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11202:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11187:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11187:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11207:2:30",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11180:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11180:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11180:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11230:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11241:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11226:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11226:18:30"
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a20496e646578206f7574206f6620626f75",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11246:34:30",
                        "type": "",
                        "value": "NFTMarketplace: Index out of bou"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11219:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11219:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11219:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11301:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11312:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11297:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11297:18:30"
                      },
                      {
                        "hexValue": "6e6473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11317:5:30",
                        "type": "",
                        "value": "nds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11290:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11290:33:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11290:33:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11332:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11344:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11355:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11340:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11340:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11332:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2e833b13d92f08686bf1ad72901e53682aa14bea99689417a31257b3398720__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11117:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11131:4:30",
                "type": ""
              }
            ],
            "src": "10966:399:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11402:95:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11419:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11426:3:30",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11431:10:30",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "11422:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11422:20:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11412:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11412:31:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11412:31:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11459:1:30",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11462:4:30",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11452:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11452:15:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11452:15:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11483:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11486:4:30",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11476:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11476:15:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11476:15:30"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "11370:127:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11534:95:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11551:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11558:3:30",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11563:10:30",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "11554:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11554:20:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11544:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11544:31:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11544:31:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11591:1:30",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11594:4:30",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11584:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11584:15:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11584:15:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11615:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11618:4:30",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11608:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11608:15:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11608:15:30"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "11502:127:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11698:358:30",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11708:16:30",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11723:1:30",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "11712:7:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11733:16:30",
                  "value": {
                    "name": "power_1",
                    "nodeType": "YulIdentifier",
                    "src": "11742:7:30"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "11733:5:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11758:13:30",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "11766:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "11758:4:30"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11822:228:30",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11867:22:30",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "11869:16:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11869:18:30"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11869:18:30"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11842:4:30"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "11856:1:30",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "11852:3:30"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11852:6:30"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "11860:4:30"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "11848:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11848:17:30"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "11839:2:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11839:27:30"
                        },
                        "nodeType": "YulIf",
                        "src": "11836:53:30"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11928:29:30",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11930:25:30",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "11943:5:30"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "11950:4:30"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "11939:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11939:16:30"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "11930:5:30"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "11909:8:30"
                            },
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "11919:7:30"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "11905:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11905:22:30"
                        },
                        "nodeType": "YulIf",
                        "src": "11902:55:30"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11970:23:30",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11982:4:30"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11988:4:30"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "11978:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11978:15:30"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "11970:4:30"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "12006:34:30",
                        "value": {
                          "arguments": [
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "12022:7:30"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "12031:8:30"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "12018:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12018:22:30"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "12006:8:30"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "11791:8:30"
                      },
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "11801:7:30"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11788:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11788:21:30"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "11810:3:30",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "11784:3:30",
                    "statements": []
                  },
                  "src": "11780:270:30"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "11662:5:30",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "11669:8:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "11682:5:30",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "11689:4:30",
                "type": ""
              }
            ],
            "src": "11634:422:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12120:747:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12158:52:30",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12172:10:30",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "12181:1:30",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "12172:5:30"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "12195:5:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "12140:8:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12133:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12133:16:30"
                  },
                  "nodeType": "YulIf",
                  "src": "12130:80:30"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12243:52:30",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12257:10:30",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "12266:1:30",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "12257:5:30"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "12280:5:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "12229:4:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12222:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12222:12:30"
                  },
                  "nodeType": "YulIf",
                  "src": "12219:76:30"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12331:52:30",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "12345:10:30",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12354:1:30",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "12345:5:30"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "12368:5:30"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "12324:59:30",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12329:1:30",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12399:123:30",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "12434:22:30",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "12436:16:30"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12436:18:30"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "12436:18:30"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "12419:8:30"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12429:3:30",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "12416:2:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12416:17:30"
                            },
                            "nodeType": "YulIf",
                            "src": "12413:43:30"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "12469:25:30",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "12482:8:30"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12492:1:30",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "12478:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12478:16:30"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "12469:5:30"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "12507:5:30"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "12392:130:30",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12397:1:30",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "12311:4:30"
                  },
                  "nodeType": "YulSwitch",
                  "src": "12304:218:30"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12620:70:30",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12634:28:30",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "12647:4:30"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "12653:8:30"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "12643:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12643:19:30"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "12634:5:30"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "12675:5:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "12544:4:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12550:2:30",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12541:2:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12541:12:30"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "12558:8:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12568:2:30",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12555:2:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12555:16:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12537:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12537:35:30"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "12581:4:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12587:3:30",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12578:2:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12578:13:30"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "12596:8:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12606:2:30",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12593:2:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12593:16:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12574:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12574:36:30"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "12534:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12534:77:30"
                  },
                  "nodeType": "YulIf",
                  "src": "12531:159:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12699:57:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "12741:4:30"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "12747:8:30"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "12722:18:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12722:34:30"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "12703:7:30",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "12712:6:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12801:22:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12803:16:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12803:18:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12803:18:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "12771:7:30"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12788:1:30",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "12784:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12784:6:30"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "12792:6:30"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "12780:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12780:19:30"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12768:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12768:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "12765:58:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12832:29:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "12845:7:30"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "12854:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12841:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12841:20:30"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "12832:5:30"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "12091:4:30",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "12097:8:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "12110:5:30",
                "type": ""
              }
            ],
            "src": "12061:806:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12940:72:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12950:56:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "12980:4:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "12990:8:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13000:4:30",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12986:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12986:19:30"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "12959:20:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12959:47:30"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "12950:5:30"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "12911:4:30",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "12917:8:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "12930:5:30",
                "type": ""
              }
            ],
            "src": "12872:140:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13069:116:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13128:22:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13130:16:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13130:18:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13130:18:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13100:1:30"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "13093:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13093:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "13086:6:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13086:17:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13108:1:30"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13119:1:30",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "13115:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13115:6:30"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13123:1:30"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "13111:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13111:14:30"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "13105:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13105:21:30"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13082:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13082:45:30"
                  },
                  "nodeType": "YulIf",
                  "src": "13079:71:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13159:20:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13174:1:30"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13177:1:30"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "13170:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13170:9:30"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "13159:7:30"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13048:1:30",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13051:1:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "13057:7:30",
                "type": ""
              }
            ],
            "src": "13017:168:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13319:119:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13329:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13341:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13352:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13337:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13337:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13329:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13371:9:30"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13382:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13364:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13364:25:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13364:25:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13409:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13420:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13405:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13405:18:30"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13425:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13398:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13398:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13398:34:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13280:9:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13291:6:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13299:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13310:4:30",
                "type": ""
              }
            ],
            "src": "13190:248:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13541:214:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13587:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13596:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13599:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13589:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13589:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13589:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13562:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13571:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13558:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13558:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13583:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13554:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13554:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "13551:52:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13612:29:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13631:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13625:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13625:16:30"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "13616:5:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13675:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "13650:24:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13650:31:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13650:31:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13690:15:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13700:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13690:6:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13714:35:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13734:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13745:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13730:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13730:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13724:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13724:25:30"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "13714:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13499:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13510:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13522:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13530:6:30",
                "type": ""
              }
            ],
            "src": "13443:312:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13934:227:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13951:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13962:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13944:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13944:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13944:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13985:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13996:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13981:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13981:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14001:2:30",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13974:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13974:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13974:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14024:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14035:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14020:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14020:18:30"
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a204f6e6c792061646d696e732063616e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14040:34:30",
                        "type": "",
                        "value": "NFTMarketplace: Only admins can "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14013:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14013:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14013:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14095:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14106:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14091:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14091:18:30"
                      },
                      {
                        "hexValue": "7061757365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14111:7:30",
                        "type": "",
                        "value": "pause"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14084:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14084:35:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14084:35:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14128:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14140:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14151:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14136:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14136:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14128:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_65d05023034d5ad3965dbc642500322e4a5740fb929d24551689e5d27ee8af33__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13911:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13925:4:30",
                "type": ""
              }
            ],
            "src": "13760:401:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14340:227:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14357:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14368:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14350:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14350:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14350:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14391:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14402:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14387:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14387:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14407:2:30",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14380:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14380:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14380:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14430:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14441:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14426:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14426:18:30"
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a204e6f7420656e6f75676820636f696e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14446:34:30",
                        "type": "",
                        "value": "NFTMarketplace: Not enough coins"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14419:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14419:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14419:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14501:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14512:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14497:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14497:18:30"
                      },
                      {
                        "hexValue": "2073656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14517:7:30",
                        "type": "",
                        "value": " sent"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14490:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14490:35:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14490:35:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14534:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14546:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14557:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14542:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14542:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14534:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f49defd93e25dcb8aff7dea3aa14baa99cd91bc653cd2c30066318c6ccc17c16__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14317:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14331:4:30",
                "type": ""
              }
            ],
            "src": "14166:401:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14785:276:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14795:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14807:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14818:3:30",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14803:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14803:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14795:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14838:9:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14853:6:30"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14869:3:30",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14874:1:30",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "14865:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14865:11:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14878:1:30",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "14861:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14861:19:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14849:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14849:32:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14831:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14831:51:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14831:51:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14902:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14913:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14898:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14898:18:30"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14918:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14891:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14891:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14891:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14945:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14956:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14941:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14941:18:30"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "14961:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14934:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14934:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14934:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14988:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14999:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14984:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14984:18:30"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "15004:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14977:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14977:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14977:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15031:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15042:3:30",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15027:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15027:19:30"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "15048:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15020:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15020:35:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15020:35:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14722:9:30",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "14733:6:30",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "14741:6:30",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "14749:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14757:6:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14765:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14776:4:30",
                "type": ""
              }
            ],
            "src": "14572:489:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15240:243:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15257:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15268:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15250:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15250:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15250:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15291:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15302:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15287:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15287:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15307:2:30",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15280:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15280:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15280:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15330:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15341:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15326:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15326:18:30"
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a204f6e6c792061646d696e732063616e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15346:34:30",
                        "type": "",
                        "value": "NFTMarketplace: Only admins can "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15319:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15319:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15319:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15401:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15412:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15397:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15397:18:30"
                      },
                      {
                        "hexValue": "72656d6f766520616c6c6f77656420746f6b656e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15417:23:30",
                        "type": "",
                        "value": "remove allowed tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15390:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15390:51:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15390:51:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15450:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15462:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15473:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15458:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15458:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15450:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a02cebdba35a3aa5f0aad515eddc0c033fc9a42b21553cd1e1ddfdc81f2a0974__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15217:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15231:4:30",
                "type": ""
              }
            ],
            "src": "15066:417:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15520:95:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15537:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15544:3:30",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15549:10:30",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "15540:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15540:20:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15530:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15530:31:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15530:31:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15577:1:30",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15580:4:30",
                        "type": "",
                        "value": "0x31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15570:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15570:15:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15570:15:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15601:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15604:4:30",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15594:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15594:15:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15594:15:30"
                }
              ]
            },
            "name": "panic_error_0x31",
            "nodeType": "YulFunctionDefinition",
            "src": "15488:127:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15669:76:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15691:22:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15693:16:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15693:18:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15693:18:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15685:1:30"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15688:1:30"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "15682:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15682:8:30"
                  },
                  "nodeType": "YulIf",
                  "src": "15679:34:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15722:17:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15734:1:30"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15737:1:30"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "15730:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15730:9:30"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "15722:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15651:1:30",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15654:1:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "15660:4:30",
                "type": ""
              }
            ],
            "src": "15620:125:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15797:88:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15828:22:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15830:16:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15830:18:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15830:18:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15813:5:30"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15824:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "15820:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15820:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "15810:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15810:17:30"
                  },
                  "nodeType": "YulIf",
                  "src": "15807:43:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15859:20:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15870:5:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15877:1:30",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15866:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15866:13:30"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "15859:3:30"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15779:5:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "15789:3:30",
                "type": ""
              }
            ],
            "src": "15750:135:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16064:295:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16081:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16092:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16074:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16074:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16074:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16115:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16126:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16111:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16111:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16131:2:30",
                        "type": "",
                        "value": "65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16104:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16104:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16104:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16154:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16165:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16150:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16150:18:30"
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a20436f6c6c656374696f6e20646f657320",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16170:34:30",
                        "type": "",
                        "value": "NFTMarketplace: Collection does "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16143:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16143:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16143:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16225:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16236:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16221:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16221:18:30"
                      },
                      {
                        "hexValue": "6e6f7420737570706f727420746865204552432d37323120696e746572666163",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16241:34:30",
                        "type": "",
                        "value": "not support the ERC-721 interfac"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16214:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16214:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16214:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16296:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16307:3:30",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16292:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16292:19:30"
                      },
                      {
                        "hexValue": "65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16313:3:30",
                        "type": "",
                        "value": "e"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16285:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16285:32:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16285:32:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16326:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16338:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16349:3:30",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16334:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16334:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16326:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_20c0ec4c03263819457c6b7a74dbc8485f93f2bd6f37a73f909e2f730406ea0e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16041:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16055:4:30",
                "type": ""
              }
            ],
            "src": "15890:469:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16538:253:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16555:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16566:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16548:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16548:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16548:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16589:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16600:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16585:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16585:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16605:2:30",
                        "type": "",
                        "value": "63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16578:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16578:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16578:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16628:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16639:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16624:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16624:18:30"
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a204f776e657220686173206e6f74206170",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16644:34:30",
                        "type": "",
                        "value": "NFTMarketplace: Owner has not ap"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16617:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16617:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16617:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16699:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16710:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16695:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16695:18:30"
                      },
                      {
                        "hexValue": "70726f76656420757320666f72206d616e6167696e6720697473204e465473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16715:33:30",
                        "type": "",
                        "value": "proved us for managing its NFTs"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16688:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16688:61:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16688:61:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16758:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16770:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16781:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16766:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16766:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16758:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c7899767309aa7951a37e89e913c6e7d7909ed17525c5fb28a3b9e8746df3cea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16515:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16529:4:30",
                "type": ""
              }
            ],
            "src": "16364:427:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16844:80:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16871:22:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "16873:16:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16873:18:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16873:18:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16860:1:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "16867:1:30"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "16863:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16863:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "16857:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16857:13:30"
                  },
                  "nodeType": "YulIf",
                  "src": "16854:39:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16902:16:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16913:1:30"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16916:1:30"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16909:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16909:9:30"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "16902:3:30"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16827:1:30",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16830:1:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "16836:3:30",
                "type": ""
              }
            ],
            "src": "16796:128:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17103:244:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17120:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17131:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17113:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17113:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17113:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17154:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17165:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17150:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17150:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17170:2:30",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17143:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17143:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17143:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17193:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17204:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17189:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17189:18:30"
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a20546f74616c20666565732063616e6e6f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17209:34:30",
                        "type": "",
                        "value": "NFTMarketplace: Total fees canno"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17182:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17182:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17182:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17264:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17275:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17260:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17260:18:30"
                      },
                      {
                        "hexValue": "742062652067726561746572207468616e2031303025",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17280:24:30",
                        "type": "",
                        "value": "t be greater than 100%"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17253:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17253:52:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17253:52:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17314:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17326:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17337:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17322:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17322:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17314:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a351190521245917ddc60bb333b6be3878906749ead0b92a5512bc886e95d097__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17080:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17094:4:30",
                "type": ""
              }
            ],
            "src": "16929:418:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17705:553:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17715:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17727:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17738:3:30",
                        "type": "",
                        "value": "320"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17723:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17723:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17715:4:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17751:29:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17769:3:30",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17774:1:30",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "17765:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17765:11:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17778:1:30",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "17761:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17761:19:30"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "17755:2:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17796:9:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "17811:6:30"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "17819:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17807:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17807:15:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17789:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17789:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17789:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17843:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17854:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17839:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17839:18:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "17863:6:30"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "17871:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17859:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17859:15:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17832:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17832:43:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17832:43:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17895:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17906:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17891:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17891:18:30"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "17911:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17884:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17884:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17884:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17938:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17949:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17934:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17934:18:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "17958:6:30"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "17966:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17954:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17954:15:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17927:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17927:43:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17927:43:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17990:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18001:3:30",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17986:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17986:19:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "18011:6:30"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "18019:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18007:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18007:15:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17979:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17979:44:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17979:44:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18043:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18054:3:30",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18039:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18039:19:30"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "18060:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18032:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18032:35:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18032:35:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18087:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18098:3:30",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18083:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18083:19:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value6",
                            "nodeType": "YulIdentifier",
                            "src": "18108:6:30"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "18116:2:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18104:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18104:15:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18076:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18076:44:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18076:44:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18140:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18151:3:30",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18136:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18136:19:30"
                      },
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "18157:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18129:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18129:35:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18129:35:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18184:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18195:3:30",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18180:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18180:19:30"
                      },
                      {
                        "name": "value8",
                        "nodeType": "YulIdentifier",
                        "src": "18201:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18173:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18173:35:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18173:35:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18228:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18239:3:30",
                            "type": "",
                            "value": "288"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18224:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18224:19:30"
                      },
                      {
                        "name": "value9",
                        "nodeType": "YulIdentifier",
                        "src": "18245:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18217:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18217:35:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18217:35:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17602:9:30",
                "type": ""
              },
              {
                "name": "value9",
                "nodeType": "YulTypedName",
                "src": "17613:6:30",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "17621:6:30",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "17629:6:30",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "17637:6:30",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "17645:6:30",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "17653:6:30",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "17661:6:30",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "17669:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "17677:6:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17685:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17696:4:30",
                "type": ""
              }
            ],
            "src": "17352:906:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18483:160:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18500:3:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18505:66:30",
                        "type": "",
                        "value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18493:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18493:79:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18493:79:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "18592:3:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18597:2:30",
                            "type": "",
                            "value": "28"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18588:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18588:12:30"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18602:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18581:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18581:28:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18581:28:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18618:19:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18629:3:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18634:2:30",
                        "type": "",
                        "value": "60"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18625:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18625:12:30"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "18618:3:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "18459:3:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18464:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "18475:3:30",
                "type": ""
              }
            ],
            "src": "18263:380:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18691:71:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18740:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18749:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18752:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "18742:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18742:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18742:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "18714:5:30"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "18725:5:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18732:4:30",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "18721:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18721:16:30"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "18711:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18711:27:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "18704:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18704:35:30"
                  },
                  "nodeType": "YulIf",
                  "src": "18701:55:30"
                }
              ]
            },
            "name": "validator_revert_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18680:5:30",
                "type": ""
              }
            ],
            "src": "18648:114:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18835:175:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18881:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18890:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18893:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "18883:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18883:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18883:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "18856:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18865:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18852:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18852:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18877:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "18848:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18848:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "18845:52:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18906:36:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18932:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "18919:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18919:23:30"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "18910:5:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18974:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "18951:22:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18951:29:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18951:29:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18989:15:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "18999:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "18989:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18801:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "18812:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18824:6:30",
                "type": ""
              }
            ],
            "src": "18767:243:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19196:217:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19206:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19218:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19229:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19214:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19214:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19206:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19249:9:30"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19260:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19242:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19242:25:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19242:25:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19287:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19298:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19283:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19283:18:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "19307:6:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19315:4:30",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "19303:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19303:17:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19276:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19276:45:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19276:45:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19341:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19352:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19337:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19337:18:30"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "19357:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19330:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19330:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19330:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19384:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19395:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19380:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19380:18:30"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "19400:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19373:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19373:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19373:34:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19141:9:30",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "19152:6:30",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "19160:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19168:6:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19176:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19187:4:30",
                "type": ""
              }
            ],
            "src": "19015:398:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19497:168:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19543:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19552:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19555:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19545:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19545:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19545:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "19518:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19527:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19514:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19514:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19539:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "19510:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19510:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "19507:52:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19568:29:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19587:9:30"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19581:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19581:16:30"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "19572:5:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "19629:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "19606:22:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19606:29:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19606:29:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19644:15:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "19654:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "19644:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19463:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "19474:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19486:6:30",
                "type": ""
              }
            ],
            "src": "19418:247:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19716:171:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19747:111:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19768:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "19775:3:30",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "19780:10:30",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "19771:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "19771:20:30"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "19761:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19761:31:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19761:31:30"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19812:1:30",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19815:4:30",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "19805:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19805:15:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19805:15:30"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19840:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19843:4:30",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19833:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19833:15:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19833:15:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19736:1:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19729:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19729:9:30"
                  },
                  "nodeType": "YulIf",
                  "src": "19726:132:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19867:14:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19876:1:30"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19879:1:30"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "19872:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19872:9:30"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "19867:1:30"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "19701:1:30",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "19704:1:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "19710:1:30",
                "type": ""
              }
            ],
            "src": "19670:217:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20083:14:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20085:10:30",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "20092:3:30"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "20085:3:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "20067:3:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "20075:3:30",
                "type": ""
              }
            ],
            "src": "19892:205:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20276:226:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20293:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20304:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20286:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20286:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20286:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20327:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20338:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20323:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20323:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20343:2:30",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20316:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20316:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20316:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20366:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20377:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20362:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20362:18:30"
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a204661696c656420746f2073656e642063",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20382:34:30",
                        "type": "",
                        "value": "NFTMarketplace: Failed to send c"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20355:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20355:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20355:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20437:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20448:2:30",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20433:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20433:18:30"
                      },
                      {
                        "hexValue": "6f696e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20453:6:30",
                        "type": "",
                        "value": "oins"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20426:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20426:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20426:34:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20469:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20481:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20492:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20477:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20477:19:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20469:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bbd52b8f06a285e4591b858bda2b5202014db9e0952fb4e3932c82ce3767d8fb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20253:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20267:4:30",
                "type": ""
              }
            ],
            "src": "20102:400:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20560:205:30",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20570:10:30",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "20579:1:30",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "20574:1:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20639:63:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "20664:3:30"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "20669:1:30"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "20660:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "20660:11:30"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "20683:3:30"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "20688:1:30"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "20679:3:30"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "20679:11:30"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "20673:5:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "20673:18:30"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "20653:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20653:39:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20653:39:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "20600:1:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20603:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "20597:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20597:13:30"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "20611:19:30",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "20613:15:30",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "20622:1:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20625:2:30",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "20618:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20618:10:30"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "20613:1:30"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "20593:3:30",
                    "statements": []
                  },
                  "src": "20589:113:30"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20728:31:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "20741:3:30"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "20746:6:30"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "20737:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "20737:16:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20755:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "20730:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20730:27:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20730:27:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "20717:1:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20720:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "20714:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20714:13:30"
                  },
                  "nodeType": "YulIf",
                  "src": "20711:48:30"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "20538:3:30",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "20543:3:30",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "20548:6:30",
                "type": ""
              }
            ],
            "src": "20507:258:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21159:397:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21176:3:30"
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21181:25:30",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21169:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21169:38:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21169:38:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21216:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21236:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21230:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21230:13:30"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "21220:6:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "21278:6:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21286:4:30",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21274:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21274:17:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "21297:3:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21302:2:30",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21293:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21293:12:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21307:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "21252:21:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21252:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21252:62:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21323:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21337:3:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21342:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21333:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21333:16:30"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "21327:2:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21369:2:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21373:2:30",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21365:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21365:11:30"
                      },
                      {
                        "hexValue": "206973206d697373696e6720726f6c6520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21378:19:30",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21358:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21358:40:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21358:40:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21407:29:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "21429:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21423:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21423:13:30"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "21411:8:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "21471:6:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21479:4:30",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21467:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21467:17:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21490:2:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21494:2:30",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21486:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21486:11:30"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "21499:8:30"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "21445:21:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21445:63:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21445:63:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21517:33:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21532:2:30"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "21536:8:30"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21528:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21528:17:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21547:2:30",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21524:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21524:26:30"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "21517:3:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21127:3:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "21132:6:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21140:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21151:3:30",
                "type": ""
              }
            ],
            "src": "20770:786:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21682:262:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21699:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21710:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21692:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21692:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21692:21:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21722:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21742:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21736:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21736:13:30"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "21726:6:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21769:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21780:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21765:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21765:18:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21785:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21758:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21758:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21758:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "21827:6:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21835:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21823:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21823:15:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21844:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21855:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21840:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21840:18:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21860:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "21801:21:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21801:66:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21801:66:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21876:62:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21892:9:30"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "21911:6:30"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21919:2:30",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21907:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21907:15:30"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21928:2:30",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "21924:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21924:7:30"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "21903:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21903:29:30"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21888:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21888:45:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21935:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21884:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21884:54:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21876:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21651:9:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21662:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21673:4:30",
                "type": ""
              }
            ],
            "src": "21561:383:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22048:103:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22058:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22070:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22081:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22066:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22066:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22058:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22100:9:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "22115:6:30"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22127:3:30",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22132:10:30",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "22123:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22123:20:30"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "22111:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22111:33:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22093:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22093:52:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22093:52:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22017:9:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22028:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22039:4:30",
                "type": ""
              }
            ],
            "src": "21949:202:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22293:137:30",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "22303:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "22323:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "22317:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22317:13:30"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "22307:6:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "22365:6:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22373:4:30",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22361:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22361:17:30"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22380:3:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22385:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "22339:21:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22339:53:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22339:53:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22401:23:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22412:3:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22417:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22408:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22408:16:30"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "22401:3:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "22269:3:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22274:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "22285:3:30",
                "type": ""
              }
            ],
            "src": "22156:274:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22609:170:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22626:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22637:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22619:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22619:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22619:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22660:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22671:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22656:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22656:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22676:2:30",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22649:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22649:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22649:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22699:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22710:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22695:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22695:18:30"
                      },
                      {
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22715:22:30",
                        "type": "",
                        "value": "Pausable: not paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22688:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22688:50:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22688:50:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22747:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22759:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22770:2:30",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22755:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22755:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22747:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22586:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22600:4:30",
                "type": ""
              }
            ],
            "src": "22435:344:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22958:166:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22975:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22986:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22968:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22968:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22968:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23009:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23020:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23005:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23005:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23025:2:30",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22998:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22998:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22998:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23048:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23059:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23044:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23044:18:30"
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23064:18:30",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23037:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23037:46:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23037:46:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23092:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23104:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23115:2:30",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23100:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23100:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23092:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22935:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22949:4:30",
                "type": ""
              }
            ],
            "src": "22784:340:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23161:95:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23178:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23185:3:30",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23190:10:30",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "23181:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23181:20:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23171:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23171:31:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23171:31:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23218:1:30",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23221:4:30",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23211:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23211:15:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23211:15:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23242:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23245:4:30",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "23235:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23235:15:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23235:15:30"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "23129:127:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23308:89:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23335:22:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "23337:16:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23337:18:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23337:18:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "23328:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "23321:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23321:13:30"
                  },
                  "nodeType": "YulIf",
                  "src": "23318:39:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23366:25:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "23377:5:30"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23388:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "23384:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23384:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23373:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23373:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "23366:3:30"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "23290:5:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "23300:3:30",
                "type": ""
              }
            ],
            "src": "23261:136:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23576:182:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23593:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23604:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23586:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23586:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23586:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23627:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23638:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23623:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23623:18:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23643:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23616:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23616:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23616:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23666:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23677:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23662:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23662:18:30"
                      },
                      {
                        "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23682:34:30",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23655:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23655:62:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23655:62:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23726:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23738:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23749:2:30",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23734:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23734:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23726:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23553:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23567:4:30",
                "type": ""
              }
            ],
            "src": "23402:356:30"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_struct_Signature_calldata(offset, end) -> value\n    {\n        if slt(sub(end, offset), 96) { revert(0, 0) }\n        value := offset\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_addresst_addresst_uint256t_struct$_Signature_$4425_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n        let value_2 := calldataload(add(headStart, 128))\n        validator_revert_address(value_2)\n        value4 := value_2\n        value5 := calldataload(add(headStart, 160))\n        value6 := abi_decode_struct_Signature_calldata(add(headStart, 192), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC721_$2231t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_addresst_uint256t_struct$_Signature_$4425_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n        value4 := calldataload(add(headStart, 128))\n        value5 := abi_decode_struct_Signature_calldata(add(headStart, 160), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_f8dcc686c4a6a1a4ebaba9bc6342fea45046a35b0d8e62790c842acb60fd5499__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"NFTMarketplace: Contract is paus\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3db3e0e3ece1ec4c6ecd819f5497ad06ad7e6f1407308a89a68b16df3b3d74b4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"NFTMarketplace: Invalid signatur\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_a49411e75e33a28db4e4a642068002ede44980cb8ff19c1c1c6795425ecff472__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"NFTMarketplace: Only admins can \")\n        mstore(add(headStart, 96), \"unpause\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b753c4b03d4dd0510cd5df5e091e23a0360aa94654e3a2acf61424f3ca3ad485__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"NFTMarketplace: Only admins can \")\n        mstore(add(headStart, 96), \"add allowed tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_047838e034479d979cd1cbaad729b6c197e347371857b0a9abb194247d90b575__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"NFTMarketplace: Token address is\")\n        mstore(add(headStart, 96), \" the zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f098a9291f0a697ff57d1514eeeac79edade7dc88d74b3d00f20a8a2791889e1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"NFTMarketplace: Token address is\")\n        mstore(add(headStart, 96), \" already allowed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_792b9729a68843bb2c7d2eb5892b6655642f5e882d2cd54d202538a750b246be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"NFTMarketplace: Token not allowe\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_stringliteral_1f10fd82e80ac2b4c4e4d06d0116e45eeebc7221a9f074b47c415d6e7232ae44__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"NFTMarketplace: Only admins can \")\n        mstore(add(headStart, 96), \"change this\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2e833b13d92f08686bf1ad72901e53682aa14bea99689417a31257b3398720__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"NFTMarketplace: Index out of bou\")\n        mstore(add(headStart, 96), \"nds\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_65d05023034d5ad3965dbc642500322e4a5740fb929d24551689e5d27ee8af33__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"NFTMarketplace: Only admins can \")\n        mstore(add(headStart, 96), \"pause\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f49defd93e25dcb8aff7dea3aa14baa99cd91bc653cd2c30066318c6ccc17c16__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"NFTMarketplace: Not enough coins\")\n        mstore(add(headStart, 96), \" sent\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_a02cebdba35a3aa5f0aad515eddc0c033fc9a42b21553cd1e1ddfdc81f2a0974__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"NFTMarketplace: Only admins can \")\n        mstore(add(headStart, 96), \"remove allowed tokens\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_20c0ec4c03263819457c6b7a74dbc8485f93f2bd6f37a73f909e2f730406ea0e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"NFTMarketplace: Collection does \")\n        mstore(add(headStart, 96), \"not support the ERC-721 interfac\")\n        mstore(add(headStart, 128), \"e\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_c7899767309aa7951a37e89e913c6e7d7909ed17525c5fb28a3b9e8746df3cea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"NFTMarketplace: Owner has not ap\")\n        mstore(add(headStart, 96), \"proved us for managing its NFTs\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_a351190521245917ddc60bb333b6be3878906749ead0b92a5512bc886e95d097__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"NFTMarketplace: Total fees canno\")\n        mstore(add(headStart, 96), \"t be greater than 100%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 320)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), and(value6, _1))\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), value9)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function validator_revert_uint8(value)\n    {\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint8(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_uint8(value)\n        value0 := value\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_bbd52b8f06a285e4591b858bda2b5202014db9e0952fb4e3932c82ce3767d8fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"NFTMarketplace: Failed to send c\")\n        mstore(add(headStart, 96), \"oins\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 30,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "525:27563:26:-:0;;;3475:494;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:4;1806:22;;996:7:3;:15;;-1:-1:-1;;996:15:3;;;3590:44:26;-1:-1:-1;719:10:17;3590::26;:44::i;:::-;3692:39;792:26;719:10:17;3590::26;:44::i;3692:39::-;3790:10;:19;;-1:-1:-1;;;;;;3790:19:26;;-1:-1:-1;;;;;3790:19:26;;;;;;-1:-1:-1;3854:109:26;3878:13;:20;3874:1;:24;3854:109;;;3919:33;3935:13;3949:1;3935:16;;;;;;;;:::i;:::-;;;;;;;3919:15;;;:33;;:::i;:::-;3900:3;;;;:::i;:::-;;;;3854:109;;;;3475:494;;525:27563;;6824:110:0;6902:25;6913:4;6919:7;6902:10;:25::i;:::-;6824:110;;:::o;6047:731:26:-;719:10:17;2072:4:0;3004:29;;;:12;;:29;:12;:29;;;;;6111:138:26;;;;-1:-1:-1;;;6111:138:26;;2118:2:30;6111:138:26;;;2100:21:30;2157:2;2137:18;;;2130:30;2196:34;2176:18;;;2169:62;-1:-1:-1;;;2247:18:30;;;2240:48;2305:19;;6111:138:26;;;;;;;;;-1:-1:-1;;;;;6328:26:26;;6307:122;;;;-1:-1:-1;;;6307:122:26;;2537:2:30;6307:122:26;;;2519:21:30;2576:2;2556:18;;;2549:30;-1:-1:-1;;;;;;;;;;;2595:18:30;;;2588:62;-1:-1:-1;;;2666:18:30;;;2659:47;2723:19;;6307:122:26;2335:413:30;6307:122:26;6519:28;6534:12;6519:14;:28::i;:::-;6518:29;6497:124;;;;-1:-1:-1;;;6497:124:26;;2955:2:30;6497:124:26;;;2937:21:30;2994:2;2974:18;;;2967:30;-1:-1:-1;;;;;;;;;;;3013:18:30;;;3006:62;-1:-1:-1;;;3084:18:30;;;3077:46;3140:19;;6497:124:26;2753:412:30;6497:124:26;6665:14;:33;;;;;;;-1:-1:-1;6665:33:26;;;;;;;-1:-1:-1;;;;;;6665:33:26;-1:-1:-1;;;;;6665:33:26;;;;;;;;6740:31;;6665:33;;6740:31;;;6047:731;:::o;7474:233:0:-;2981:4;3004:12;;;;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;7552:149;;7595:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7595:29:0;;;;;;;;;:36;;-1:-1:-1;;7595:36:0;7627:4;7595:36;;;7677:12;719:10:17;;640:96;7677:12:0;-1:-1:-1;;;;;7650:40:0;7668:7;-1:-1:-1;;;;;7650:40:0;7662:4;7650:40;;;;;;;;;;7474:233;;:::o;5561:273:26:-;5628:4;;5644:161;5052:14;:21;5664:1;:27;5644:161;;;5737:12;-1:-1:-1;;;;;5716:33:26;:14;5731:1;5716:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5716:17:26;:33;5712:83;;-1:-1:-1;5776:4:26;;5561:273;-1:-1:-1;;5561:273:26:o;5712:83::-;5693:3;;;;:::i;:::-;;;;5644:161;;;-1:-1:-1;5822:5:26;;5561:273;-1:-1:-1;;5561:273:26:o;14:177:30:-;93:13;;-1:-1:-1;;;;;135:31:30;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:1214;432:6;440;493:2;481:9;472:7;468:23;464:32;461:52;;;509:1;506;499:12;461:52;532:40;562:9;532:40;:::i;:::-;591:2;622:18;;;616:25;522:50;;-1:-1:-1;591:2:30;-1:-1:-1;;;;;690:14:30;;;687:34;;;717:1;714;707:12;687:34;755:6;744:9;740:22;730:32;;800:7;793:4;789:2;785:13;781:27;771:55;;822:1;819;812:12;771:55;851:2;845:9;873:2;869;866:10;863:36;;;879:18;;:::i;:::-;925:2;922:1;918:10;957:2;951:9;1020:2;1016:7;1011:2;1007;1003:11;999:25;991:6;987:38;1075:6;1063:10;1060:22;1055:2;1043:10;1040:18;1037:46;1034:72;;;1086:18;;:::i;:::-;1122:2;1115:22;1172:18;;;1206:15;;;;-1:-1:-1;1248:11:30;;;1244:20;;;1276:19;;;1273:39;;;1308:1;1305;1298:12;1273:39;1332:11;;;;1352:159;1368:6;1363:3;1360:15;1352:159;;;1434:34;1464:3;1434:34;:::i;:::-;1422:47;;1385:12;;;;1489;;;;1352:159;;;1530:6;1520:16;;;;;;;;328:1214;;;;;:::o;1547:127::-;1608:10;1603:3;1599:20;1596:1;1589:31;1639:4;1636:1;1629:15;1663:4;1660:1;1653:15;1679:232;1718:3;1739:17;;;1736:140;;1798:10;1793:3;1789:20;1786:1;1779:31;1833:4;1830:1;1823:15;1861:4;1858:1;1851:15;1736:140;-1:-1:-1;1903:1:30;1892:13;;1679:232::o;2753:412::-;525:27563:26;;;;;;",
  "deployedSourceMap": "525:27563:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:202:0;;;;;;;;;;-1:-1:-1;2606:202:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:30;;463:22;445:41;;433:2;418:18;2606:202:0;;;;;;;;15010:1539:26;;;;;;;;;;-1:-1:-1;15010:1539:26;;;;;:::i;:::-;;:::i;4391:129:0:-;;;;;;;;;;-1:-1:-1;4391:129:0;;;;;:::i;:::-;4465:7;4491:12;;;;;;;;;;:22;;;;4391:129;;;;1998:25:30;;;1986:2;1971:18;4391:129:0;1852:177:30;652:34:26;;;;;;;;;;;;685:1;652:34;;;;;2206:4:30;2194:17;;;2176:36;;2164:2;2149:18;652:34:26;2034:184:30;4816:145:0;;;;;;;;;;-1:-1:-1;4816:145:0;;;;;:::i;:::-;;:::i;:::-;;4818:82:26;;;;;;;;;;-1:-1:-1;685:1:26;4818:82;;5925:214:0;;;;;;;;;;-1:-1:-1;5925:214:0;;;;;:::i;:::-;;:::i;19159:299:26:-;;;;;;;;;;-1:-1:-1;19159:299:26;;;;;:::i;:::-;;:::i;18276:536::-;;;;;;;;;;-1:-1:-1;18276:536:26;;;;;:::i;:::-;;:::i;19977:271::-;;;;;;;;;;;;;:::i;6047:731::-;;;;;;;;;;-1:-1:-1;6047:731:26;;;;;:::i;:::-;;:::i;12127:2401::-;;;;;;;;;;-1:-1:-1;12127:2401:26;;;;;:::i;:::-;;:::i;4262:476::-;;;;;;;;;;-1:-1:-1;4262:476:26;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3938:32:30;;;3920:51;;3908:2;3893:18;4262:476:26;3774:203:30;1615:84:3;;;;;;;;;;-1:-1:-1;1685:7:3;;;;1615:84;;4036:87:26;;;;;;;;;;-1:-1:-1;4106:10:26;;;;;-1:-1:-1;;;;;4106:10:26;4036:87;;5231:242;;;;;;;;;;-1:-1:-1;5231:242:26;;;;;:::i;:::-;;:::i;16939:960::-;;;;;;;;;;-1:-1:-1;16939:960:26;;;;;:::i;:::-;;:::i;19585:263::-;;;;;;;;;;;;;:::i;9029:2172::-;;;;;;:::i;:::-;;:::i;2895:145:0:-;;;;;;;;;;-1:-1:-1;2895:145:0;;;;;:::i;:::-;;:::i;2027:49::-;;;;;;;;;;-1:-1:-1;2027:49:0;2072:4;2027:49;;4972:108:26;;;;;;;;;;-1:-1:-1;5052:14:26;:21;4972:108;;6983:1095;;;;;;;;;;-1:-1:-1;6983:1095:26;;;;;:::i;:::-;;:::i;5241:147:0:-;;;;;;;;;;-1:-1:-1;5241:147:0;;;;;:::i;:::-;;:::i;752:66:26:-;;;;;;;;;;;;792:26;752:66;;5561:273;;;;;;;;;;-1:-1:-1;5561:273:26;;;;;:::i;:::-;;:::i;2606:202:0:-;2691:4;-1:-1:-1;;;;;;2714:47:0;;-1:-1:-1;;;2714:47:0;;:87;;-1:-1:-1;;;;;;;;;;937:40:19;;;2765:36:0;2707:94;2606:202;-1:-1:-1;;2606:202:0:o;15010:1539:26:-;15257:4;15325:8;1685:7:3;;;;;1615:84;15325:8:26;15324:9;15316:56;;;;-1:-1:-1;;;15316:56:26;;5099:2:30;15316:56:26;;;5081:21:30;5138:2;5118:18;;;5111:30;5177:34;5157:18;;;5150:62;-1:-1:-1;;;5228:18:30;;;5221:32;5270:19;;15316:56:26;;;;;;;;;15447:27;15463:10;15447:15;:27::i;:::-;15521:14;15538:32;15550:10;15562:7;15538:11;:32::i;:::-;15521:49;;15614:46;15635:10;15647:7;15656:3;15614:20;:46::i;:::-;15687:18;15708:34;15722:10;15734:7;15708:13;:34::i;:::-;15687:55;;15752:19;15774:35;15789:10;15801:7;15774:14;:35::i;:::-;15752:57;;16047:41;16061:10;16073:14;16047:13;:41::i;:::-;16166:296;16198:10;16226:7;16251:3;:9;;;16278:5;16301;16324:8;16350:10;16378:11;16407:14;16439:9;16166:14;:296::i;:::-;16145:376;;;;-1:-1:-1;;;16145:376:26;;5502:2:30;16145:376:26;;;5484:21:30;5541:2;5521:18;;;5514:30;5580:34;5560:18;;;5553:62;-1:-1:-1;;;5631:18:30;;;5624:31;5672:19;;16145:376:26;5300:397:30;16145:376:26;-1:-1:-1;16538:4:26;;15010:1539;-1:-1:-1;;;;;;;;;;15010:1539:26:o;4816:145:0:-;4465:7;4491:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;4929:25:::1;4940:4;4946:7;4929:10;:25::i;:::-;4816:145:::0;;;:::o;5925:214::-;-1:-1:-1;;;;;6020:23:0;;719:10:17;6020:23:0;6012:83;;;;-1:-1:-1;;;6012:83:0;;5904:2:30;6012:83:0;;;5886:21:30;5943:2;5923:18;;;5916:30;5982:34;5962:18;;;5955:62;-1:-1:-1;;;6033:18:30;;;6026:45;6088:19;;6012:83:0;5702:411:30;6012:83:0;6106:26;6118:4;6124:7;6106:11;:26::i;:::-;5925:214;;:::o;19159:299:26:-;19333:31;;-1:-1:-1;;;19333:31:26;;;;;1998:25:30;;;19298:4:26;;19376;;-1:-1:-1;;;;;19333:22:26;;;;;1971:18:30;;19333:31:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;19333:48:26;;:118;;;-1:-1:-1;19397:54:26;;-1:-1:-1;;;19397:54:26;;-1:-1:-1;;;;;6604:15:30;;;19397:54:26;;;6586:34:30;19445:4:26;6636:18:30;;;6629:43;19397:27:26;;;;;6521:18:30;;19397:54:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19314:137;19159:299;-1:-1:-1;;;;19159:299:26:o;18276:536::-;18382:7;;18442:79;18474:10;-1:-1:-1;;;18442:31:26;:79::i;:::-;18438:340;;;18701:52;;-1:-1:-1;;;18701:52:26;;;;;1998:25:30;;;18623:144:26;;18672:10;;-1:-1:-1;;;;;18701:43:26;;;;;1971:18:30;;18701:52:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18623:14;:144::i;:::-;18609:158;;18438:340;18794:11;18276:536;-1:-1:-1;;;18276:536:26:o;19977:271::-;20097:41;2072:4:0;719:10:17;2895:145:0;:::i;20097:41:26:-;20076:127;;;;-1:-1:-1;;;20076:127:26;;7356:2:30;20076:127:26;;;7338:21:30;7395:2;7375:18;;;7368:30;-1:-1:-1;;;;;;;;;;;7414:18:30;;;7407:62;-1:-1:-1;;;7485:18:30;;;7478:37;7532:19;;20076:127:26;7154:403:30;20076:127:26;20231:10;:8;:10::i;:::-;19977:271::o;6047:731::-;6132:41;2072:4:0;719:10:17;2895:145:0;:::i;6132:41:26:-;6111:138;;;;-1:-1:-1;;;6111:138:26;;7764:2:30;6111:138:26;;;7746:21:30;7803:2;7783:18;;;7776:30;-1:-1:-1;;;;;;;;;;;7822:18:30;;;7815:62;-1:-1:-1;;;7893:18:30;;;7886:48;7951:19;;6111:138:26;7562:414:30;6111:138:26;-1:-1:-1;;;;;6328:26:26;;6307:122;;;;-1:-1:-1;;;6307:122:26;;8183:2:30;6307:122:26;;;8165:21:30;8222:2;8202:18;;;8195:30;8261:34;8241:18;;;8234:62;-1:-1:-1;;;8312:18:30;;;8305:47;8369:19;;6307:122:26;7981:413:30;6307:122:26;6519:28;6534:12;6519:14;:28::i;:::-;6518:29;6497:124;;;;-1:-1:-1;;;6497:124:26;;8601:2:30;6497:124:26;;;8583:21:30;8640:2;8620:18;;;8613:30;8679:34;8659:18;;;8652:62;-1:-1:-1;;;8730:18:30;;;8723:46;8786:19;;6497:124:26;8399:412:30;6497:124:26;6665:14;:33;;;;;;;-1:-1:-1;6665:33:26;;;;;;;-1:-1:-1;;;;;;6665:33:26;-1:-1:-1;;;;;6665:33:26;;;;;;;;6740:31;;6665:33;;6740:31;;;6047:731;:::o;12127:2401::-;1744:1:4;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:4;;9018:2:30;2317:63:4;;;9000:21:30;9057:2;9037:18;;;9030:30;9096:33;9076:18;;;9069:61;9147:18;;2317:63:4;8816:355:30;2317:63:4;1744:1;2455:7;:18;12430:21:26::1;12445:5:::0;12430:14:::1;:21::i;:::-;12422:67;;;::::0;-1:-1:-1;;;12422:67:26;;9378:2:30;12422:67:26::1;::::0;::::1;9360:21:30::0;9417:2;9397:18;;;9390:30;9456:34;9436:18;;;9429:62;-1:-1:-1;;;9507:18:30;;;9500:31;9548:19;;12422:67:26::1;9176:397:30::0;12422:67:26::1;12530:178;12559:10;12583:7;12604:5;12623;12642;12661:14;12689:9;12530:15;:178::i;:::-;;12755:14;12772:32;12784:10;12796:7;12772:11;:32::i;:::-;12755:49;;12851:30;12884:171;12917:3;12934:34;12948:10;12960:7;12934:13;:34::i;:::-;12982:35;12997:10;13009:7;12982:14;:35::i;:::-;13031:14;12884:19;:171::i;:::-;12851:204;;13095:24;13122:246;;;;;;;;13154:52;13179:11;:19;;;13200:5;13154:24;:52::i;:::-;13122:246;;;;13230:53;13255:11;:20;;;13277:5;13230:24;:53::i;:::-;13122:246;;;;13310:47;13335:14;13351:5;13310:24;:47::i;:::-;13122:246:::0;;13095:273;-1:-1:-1;13424:21:26::1;13448:74;13485:5:::0;13095:273;13448:23:::1;:74::i;:::-;13587:9:::0;;13553:59:::1;::::0;-1:-1:-1;;;13553:59:26;;13424:98;;-1:-1:-1;;;;;;13553:26:26;::::1;::::0;::::1;::::0;:59:::1;::::0;13580:5;;13587:9;13424:98;;13553:59:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;13626:17:26::1;::::0;::::1;::::0;:21;13622:180:::1;;13730:12;::::0;;::::1;::::0;13760:17:::1;::::0;::::1;::::0;13663:128;;-1:-1:-1;;;13663:128:26;;-1:-1:-1;;;;;13663:26:26;::::1;::::0;::::1;::::0;:128:::1;::::0;13707:5;;13760:17;13663:128:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13622:180;13815:16:::0;;:20;13811:115:::1;;13885:11;::::0;::::1;::::0;13898:16;;13851:64:::1;::::0;-1:-1:-1;;;13851:64:26;;-1:-1:-1;;;;;13851:26:26;::::1;::::0;::::1;::::0;:64:::1;::::0;13878:5;;13885:11;13898:16;13851:64:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13811:115;13939:20;::::0;::::1;::::0;:24;13935:184:::1;;14046:10;::::0;14074:20:::1;::::0;;::::1;::::0;13979:129;;-1:-1:-1;;;13979:129:26;;-1:-1:-1;;;;;13979:26:26;;::::1;::::0;::::1;::::0;:129:::1;::::0;14023:5;;14046:10:::1;::::0;;::::1;::::0;;::::1;::::0;13979:129:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13935:184;14201:9:::0;;14164:70:::1;::::0;-1:-1:-1;;;14164:70:26;;-1:-1:-1;;;;;14164:36:26;::::1;::::0;::::1;::::0;:70:::1;::::0;14201:9;719:10:17;;14226:7:26;;14164:70:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;14350:3;:9;;;-1:-1:-1::0;;;;;14276:245:26::1;14329:7;14305:10;-1:-1:-1::0;;;;;14276:245:26::1;;14373:12;719:10:17::0;;640:96;14373:12:26::1;14399:5;14418;14437:13;14464:8;:16;;;14494:8;:17;;;14276:245;;;;;;;;;;-1:-1:-1::0;;;;;10301:15:30;;;10283:34;;10353:15;;;;10348:2;10333:18;;10326:43;10400:2;10385:18;;10378:34;;;;10443:2;10428:18;;10421:34;10486:3;10471:19;;10464:35;10263:3;10515:19;;10508:35;;;;10232:3;10217:19;;9958:591;14276:245:26::1;;;;;;;;-1:-1:-1::0;;1701:1:4;2628:22;;-1:-1:-1;;;;;;;;;12127:2401:26:o;4262:476::-;4318:7;4358:41;4318:7;719:10:17;2895:145:0;:::i;4358:41:26:-;4337:131;;;;-1:-1:-1;;;4337:131:26;;10756:2:30;4337:131:26;;;10738:21:30;10795:2;10775:18;;;10768:30;-1:-1:-1;;;;;;;;;;;10814:18:30;;;10807:62;-1:-1:-1;;;10885:18:30;;;10878:41;10936:19;;4337:131:26;10554:407:30;4337:131:26;4549:10;;;-1:-1:-1;;;;;4600:19:26;;;4549:10;4600:19;;;-1:-1:-1;;;;;;4600:19:26;;;;;;;4661:42;;4549:10;;;;;;;4692;;;4549;;4661:42;;4526:20;;4661:42;-1:-1:-1;;4721:10:26;;;;;-1:-1:-1;;;;;4721:10:26;;;-1:-1:-1;4262:476:26:o;5231:242::-;5296:7;5344:23;5052:14;:21;;4972:108;5344:23;5336:5;:31;5315:113;;;;-1:-1:-1;;;5315:113:26;;;;;;;:::i;:::-;5445:14;5460:5;5445:21;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5445:21:26;;5231:242;-1:-1:-1;;5231:242:26:o;16939:960::-;17044:7;;17104:79;17136:10;-1:-1:-1;;;17104:31:26;:79::i;:::-;17100:766;;;17362:51;;-1:-1:-1;;;17362:51:26;;;;;1998:25:30;;;17284:143:26;;17333:10;;-1:-1:-1;;;;;17362:42:26;;;;;1971:18:30;;17362:51:26;1852:177:30;17284:143:26;17271:156;;17100:766;;;17448:71;17480:10;-1:-1:-1;;;17448:31:26;:71::i;:::-;17444:422;;;-1:-1:-1;;;;;17616:32:26;;;17649:7;17665:14;685:1;17665:2;:14;:::i;:::-;17658:22;;:3;:22;:::i;:::-;17616:65;;-1:-1:-1;;;;;;17616:65:26;;;;;;;;;;13364:25:30;;;;13405:18;;;13398:34;13337:18;;17616:65:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17599:82;16939:960;-1:-1:-1;;;;;16939:960:26:o;19585:263::-;19701:41;2072:4:0;719:10:17;2895:145:0;:::i;19701:41:26:-;19680:125;;;;-1:-1:-1;;;19680:125:26;;13962:2:30;19680:125:26;;;13944:21:30;14001:2;13981:18;;;13974:30;-1:-1:-1;;;;;;;;;;;14020:18:30;;;14013:62;-1:-1:-1;;;14091:18:30;;;14084:35;14136:19;;19680:125:26;13760:401:30;19680:125:26;19833:8;:6;:8::i;9029:2172::-;1744:1:4;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:4;;9018:2:30;2317:63:4;;;9000:21:30;9057:2;9037:18;;;9030:30;9096:33;9076:18;;;9069:61;9147:18;;2317:63:4;8816:355:30;2317:63:4;1744:1;2455:7;:18;9322:9:26::1;:18:::0;::::1;9314:68;;;::::0;-1:-1:-1;;;9314:68:26;;14368:2:30;9314:68:26::1;::::0;::::1;14350:21:30::0;14407:2;14387:18;;;14380:30;14446:34;14426:18;;;14419:62;-1:-1:-1;;;14497:18:30;;;14490:35;14542:19;;9314:68:26::1;14166:401:30::0;9314:68:26::1;9423:185;9452:10;9476:7;9497:5;9524:3;9542:5;9561:14;9589:9;9423:15;:185::i;:::-;;9619:14;9636:32;9648:10;9660:7;9636:11;:32::i;:::-;9619:49;;9715:30;9748:171;9781:3;9798:34;9812:10;9824:7;9798:13;:34::i;:::-;9846:35;9861:10;9873:7;9846:14;:35::i;9748:171::-;9715:204;;9959:24;9986:246;;;;;;;;10018:52;10043:11;:19;;;10064:5;10018:24;:52::i;:::-;9986:246;;;;10094:53;10119:11;:20;;;10141:5;10094:24;:53::i;:::-;9986:246;;;;10174:47;10199:14;10215:5;10174:24;:47::i;:::-;9986:246:::0;;9959:273;-1:-1:-1;10288:21:26::1;10312:74;10349:5:::0;9959:273;10312:23:::1;:74::i;:::-;10288:98;;10417:47;10438:3;:9;;;10450:13;10417:12;:47::i;:::-;10478:17;::::0;::::1;::::0;:21;10474:106:::1;;10515:54;10536:3;:12;;;10551:8;:17;;;10515:12;:54::i;:::-;10593:16:::0;;:20;10589:103:::1;;10629:52;10650:3;:11;;;10664:8;:16;;;10629:12;:52::i;:::-;10705:20;::::0;::::1;::::0;:24;10701:110:::1;;10766:10;::::0;10779:20:::1;::::0;::::1;::::0;10745:55:::1;::::0;10766:10:::1;::::0;::::1;-1:-1:-1::0;;;;;10766:10:26::1;::::0;10745:12:::1;:55::i;:::-;10894:9:::0;;10857:70:::1;::::0;-1:-1:-1;;;10857:70:26;;-1:-1:-1;;;;;10857:36:26;::::1;::::0;::::1;::::0;:70:::1;::::0;10894:9;719:10:17;;10919:7:26;;10857:70:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11042:3;:9;;;-1:-1:-1::0;;;;;10969:225:26::1;11021:7;10997:10;-1:-1:-1::0;;;;;10969:225:26::1;;11065:12;719:10:17::0;;640:96;11065:12:26::1;11091:5;11110:13;11137:8;:16;;;11167:8;:17;;;10969:225;;;;;;;;;-1:-1:-1::0;;;;;14849:32:30;;;;14831:51;;14913:2;14898:18;;14891:34;;;;14956:2;14941:18;;14934:34;;;;14999:2;14984:18;;14977:34;15042:3;15027:19;;15020:35;14818:3;14803:19;;14572:489;10969:225:26::1;;;;;;;;-1:-1:-1::0;;1701:1:4;2628:22;;-1:-1:-1;;;;;;;;9029:2172:26:o;2895:145:0:-;2981:4;3004:12;;;;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;;;;2895:145::o;6983:1095:26:-;7071:41;2072:4:0;719:10:17;2895:145:0;:::i;7071:41:26:-;7050:141;;;;-1:-1:-1;;;7050:141:26;;15268:2:30;7050:141:26;;;15250:21:30;15307:2;15287:18;;;15280:30;-1:-1:-1;;;;;;;;;;;15326:18:30;;;15319:62;-1:-1:-1;;;15397:18:30;;;15390:51;15458:19;;7050:141:26;15066:417:30;7050:141:26;5052:14;:21;7262:5;:31;7241:113;;;;-1:-1:-1;;;7241:113:26;;;;;;;:::i;:::-;7412:20;7435:14;7450:5;7435:21;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;7435:21:26;;-1:-1:-1;7588:23:26;5052:14;:21;;4972:108;7588:23;7615:1;7588:28;7584:413;;7632:14;:20;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;7632:20:26;;;;;-1:-1:-1;;;;;;7632:20:26;;;;;;7584:413;;;7870:14;7911:1;7885:23;5052:14;:21;;4972:108;7885:23;:27;;;;:::i;:::-;7870:43;;;;;;;;:::i;:::-;;;;;;;;;;;7846:14;:21;;-1:-1:-1;;;;;7870:43:26;;;;7861:5;;7846:21;;;;;;:::i;:::-;;;;;;;;;:67;;;;;-1:-1:-1;;;;;7846:67:26;;;;;-1:-1:-1;;;;;7846:67:26;;;;;;7966:14;:20;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;7966:20:26;;;;;-1:-1:-1;;;;;;7966:20:26;;;;;;7584:413;8038:33;;-1:-1:-1;;;;;8038:33:26;;;;;;;;7040:1038;6983:1095;:::o;5241:147:0:-;4465:7;4491:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;5355:26:::1;5367:4;5373:7;5355:11;:26::i;5561:273:26:-:0;5628:4;;5644:161;5052:14;:21;5664:1;:27;5644:161;;;5737:12;-1:-1:-1;;;;;5716:33:26;:14;5731:1;5716:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5716:17:26;:33;5712:83;;-1:-1:-1;5776:4:26;;5561:273;-1:-1:-1;;5561:273:26:o;5712:83::-;5693:3;;;;:::i;:::-;;;;5644:161;;;-1:-1:-1;5822:5:26;;5561:273;-1:-1:-1;;5561:273:26:o;23718:303::-;23807:116;23856:10;-1:-1:-1;;;23807:31:26;:116::i;:::-;23786:228;;;;-1:-1:-1;;;23786:228:26;;16092:2:30;23786:228:26;;;16074:21:30;16131:2;16111:18;;;16104:30;16170:34;16150:18;;;16143:62;16241:34;16221:18;;;16214:62;-1:-1:-1;;;16292:19:30;;;16285:32;16334:19;;23786:228:26;15890:469:30;23786:228:26;23718:303;:::o;25024:1388::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;25207:283:26;;;;;;;;;;-1:-1:-1;;;25232:36:26;;;;;;1998:25:30;;;-1:-1:-1;;25207:283:26;-1:-1:-1;;;;;25232:27:26;;;1971:18:30;;;25232:36:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;25207:283:26;;;25299:3;25207:283;;;;;;;;;;;25190:300;-1:-1:-1;25570:79:26;25602:10;-1:-1:-1;;;25570:31:26;:79::i;:::-;25566:819;;;25751:48;;-1:-1:-1;;;25751:48:26;;;;;1998:25:30;;;-1:-1:-1;;;;;25751:39:26;;;;;1971:18:30;;25751:48:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;25737:62:26;;;:11;;;:62;25828:49;;-1:-1:-1;;;25828:49:26;;;;;1998:25:30;;;25828:40:26;;;;;;1971:18:30;;25828:49:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;25813:64:26;:12;;;:64;25566:819;;;25898:71;25930:10;-1:-1:-1;;;25898:31:26;:71::i;:::-;25894:491;;;-1:-1:-1;;;;;26067:32:26;;;26100:7;26116:14;685:1;26116:2;:14;:::i;:::-;26109:22;;:3;:22;:::i;:::-;26067:65;;-1:-1:-1;;;;;;26067:65:26;;;;;;;;;;13364:25:30;;;;13405:18;;;13398:34;13337:18;;26067:65:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;26049:83:26;26050:11;;;26049:83;26050:11;25024:1388;-1:-1:-1;;;25024:1388:26:o;24125:315::-;24282:62;24312:10;24325:7;24334:3;:9;;;24282:21;:62::i;:::-;24261:172;;;;-1:-1:-1;;;24261:172:26;;16566:2:30;24261:172:26;;;16548:21:30;16605:2;16585:18;;;16578:30;16644:34;16624:18;;;16617:62;16715:33;16695:18;;;16688:61;16766:19;;24261:172:26;16364:427:30;24531:269:26;24701:12;685:1;24701:2;:12;:::i;:::-;24695:18;;:3;:18;:::i;:::-;24664:27;24677:14;24664:10;:27;:::i;:::-;:49;;24643:150;;;;-1:-1:-1;;;24643:150:26;;17131:2:30;24643:150:26;;;17113:21:30;17170:2;17150:18;;;17143:30;17209:34;17189:18;;;17182:62;-1:-1:-1;;;17260:18:30;;;17253:52;17322:19;;24643:150:26;16929:418:30;21330:1032:26;21709:290;;;21745:4;21709:290;;;;17789:34:30;;;;-1:-1:-1;;;;;17859:15:30;;;17839:18;;;17832:43;17891:18;;;17884:34;;;17954:15;;;17934:18;;;17927:43;18007:15;;;17986:19;;;17979:44;18039:19;;;18032:35;;;18104:15;;18083:19;;;18076:44;18136:19;;;18129:35;;;18180:19;;;18173:35;;;18224:19;;;;18217:35;;;21709:290:26;;;;;;;;;;17723:19:30;;;21709:290:26;;;21686:323;;;;;;;;18505:66:30;22087:58:26;;;18493:79:30;18588:12;;;18581:28;;;-1:-1:-1;;;;22037:207:26;;18625:12:30;;22087:58:26;;;-1:-1:-1;;22087:58:26;;;;;;;;;22060:99;;22087:58;22060:99;;;;;22173:11;;;;:9;:11;:::i;:::-;22223;22037:207;;;;;22198:11;22037:207;;;;;;19242:25:30;;;;19315:4;19303:17;;;19283:18;;;19276:45;22198:11:26;;;;19337:18:30;;;19330:34;22223:11:26;;;;19380:18:30;;;19373:34;19214:19;;22037:207:26;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22037:207:26;;-1:-1:-1;;22037:207:26;;;-1:-1:-1;22274:35:26;;-1:-1:-1;2072:4:0;22037:207:26;22274:7;:35::i;:::-;:81;;;;22325:30;792:26;22348:6;22325:7;:30::i;:::-;22255:100;21330:1032;-1:-1:-1;;;;;;;;;;;;;21330:1032:26:o;3334:103:0:-;3400:30;3411:4;719:10:17;3400::0;:30::i;7474:233::-;7557:22;7565:4;7571:7;7557;:22::i;:::-;7552:149;;7595:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7595:29:0;;;;;;;;;:36;;-1:-1:-1;;7595:36:0;7627:4;7595:36;;;7677:12;719:10:17;;640:96;7677:12:0;-1:-1:-1;;;;;7650:40:0;7668:7;-1:-1:-1;;;;;7650:40:0;7662:4;7650:40;;;;;;;;;;7474:233;;:::o;7878:234::-;7961:22;7969:4;7975:7;7961;:22::i;:::-;7957:149;;;8031:5;7999:12;;;;;;;;;;;-1:-1:-1;;;;;7999:29:0;;;;;;;;;;:37;;-1:-1:-1;;7999:37:0;;;8055:40;719:10:17;;7999:12:0;;8055:40;;8031:5;8055:40;7878:234;;:::o;1318:274:20:-;1405:4;1512:23;1527:7;1512:14;:23::i;:::-;:73;;;;;1539:46;1564:7;1573:11;1539:24;:46::i;22654:201:26:-;22766:7;22826:10;-1:-1:-1;;;;;22826:19:26;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22822:25;;:2;:25;:::i;:::-;22804:12;685:1;22804:2;:12;:::i;:::-;22797:20;;:3;:20;:::i;:::-;22796:52;;;;:::i;2433:117:3:-;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:3::1;::::0;;2521:22:::1;719:10:17::0;2530:12:3::1;2521:22;::::0;-1:-1:-1;;;;;3938:32:30;;;3920:51;;3908:2;3893:18;2521:22:3::1;;;;;;;2433:117::o:0;26641:1445:26:-;-1:-1:-1;;;;;;;;;;;;;;;;;26841:30:26;26874:38;;;;;;;;26896:1;26874:38;;;;26909:1;26874:38;;;26841:71;;26940:3;:11;;;-1:-1:-1;;;;;26927:24:26;:3;:9;;;-1:-1:-1;;;;;26927:24:26;;26923:1128;;27027:12;;;;-1:-1:-1;;;;;27027:28:26;;;;;:47;;;27073:1;27059:11;:15;27027:47;27023:274;;;27269:12;685:1;27269:2;:12;:::i;:::-;27263:18;;:3;:18;:::i;:::-;27243:14;27227:12;685:1;27227:2;:12;:::i;:::-;27221:18;;:3;:18;:::i;:::-;27220:37;;;;:::i;:::-;27205:53;;:11;:53;:::i;:::-;27204:78;;;;:::i;:::-;27181:20;;;:101;27023:274;26923:1128;;;27388:11;;;;-1:-1:-1;;;;;27388:27:26;;;;;:45;;;27432:1;27419:10;:14;27388:45;27384:657;;;27513:32;;;27568:12;;;;-1:-1:-1;;;;;27568:28:26;;;;;:47;;;27614:1;27600:11;:15;27568:47;27564:463;;;27863:12;685:1;27863:2;:12;:::i;:::-;27857:18;;:3;:18;:::i;:::-;27833:19;;27819:33;;:11;:33;:::i;:::-;27818:58;;;;:::i;:::-;27795:20;;;:81;;;27966:19;;:42;;27795:81;27966:42;:::i;:::-;27944:64;;28068:11;26641:1445;-1:-1:-1;;;;;26641:1445:26:o;22952:341::-;23060:7;23087:3;23094:1;23087:8;23083:47;;-1:-1:-1;23118:1:26;23111:8;;23083:47;23273:12;685:1;23273:2;:12;:::i;:::-;23267:18;;:3;:18;:::i;:::-;23251:11;23259:3;23251:5;:11;:::i;23350:266::-;23468:7;23592:8;:17;;;23561:8;:16;;;23526:8;:20;;;23506:5;:40;;;;:::i;:::-;:71;;;;:::i;:::-;:103;;;;:::i;2186:115:3:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:3::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:17::0;;640:96;20525:188:26;20602:9;20617:2;-1:-1:-1;;;;;20617:7:26;20632:6;20617:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20601:42;;;20661:4;20653:53;;;;-1:-1:-1;;;20653:53:26;;20304:2:30;20653:53:26;;;20286:21:30;20343:2;20323:18;;;20316:30;20382:34;20362:18;;;20355:62;-1:-1:-1;;;20433:18:30;;;20426:34;20477:19;;20653:53:26;20102:400:30;3718:492:0;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:403;;3989:41;4017:7;-1:-1:-1;;;;;3989:41:0;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3896:265:0;;;;;;;;;;-1:-1:-1;;;3844:349:0;;;;;;;:::i;689:411:20:-;753:4;960:60;985:7;-1:-1:-1;;;960:24:20;:60::i;:::-;:133;;;;-1:-1:-1;1037:56:20;1062:7;-1:-1:-1;;;;;;1037:24:20;:56::i;:::-;1036:57;941:152;689:411;-1:-1:-1;;689:411:20:o;4208:409::-;4346:71;;;-1:-1:-1;;;;;;22111:33:30;;4346:71:20;;;;22093:52:30;;;;4346:71:20;;;;;;;;;;22066:18:30;;;;4346:71:20;;;;;;;-1:-1:-1;;;;;4346:71:20;-1:-1:-1;;;4346:71:20;;;4465:45;;4301:4;;4346:71;4301:4;;;;-1:-1:-1;;;;;4465:18:20;;;4489:5;;4465:45;;4346:71;;4465:45;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4427:83;;;;4540:2;4524:6;:13;:18;4520:36;;;4551:5;4544:12;;;;;;;4520:36;4573:7;:37;;;;;4595:6;4584:26;;;;;;;;;;;;:::i;:::-;4566:44;4208:409;-1:-1:-1;;;;;;4208:409:20:o;1945:106:3:-;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:3;;22637:2:30;2003:41:3;;;22619:21:30;22676:2;22656:18;;;22649:30;-1:-1:-1;;;22695:18:30;;;22688:50;22755:18;;2003:41:3;22435:344:30;1767:106:3;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:3;;22986:2:30;1828:38:3;;;22968:21:30;23025:2;23005:18;;;22998:30;-1:-1:-1;;;23044:18:30;;;23037:46;23100:18;;1828:38:3;22784:340:30;1652:441:18;1727:13;1752:19;1784:10;1788:6;1784:1;:10;:::i;:::-;:14;;1797:1;1784:14;:::i;:::-;1774:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1774:25:18;;1752:47;;-1:-1:-1;;;1809:6:18;1816:1;1809:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1809:15:18;;;;;;;;;-1:-1:-1;;;1834:6:18;1841:1;1834:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1834:15:18;;;;;;;;-1:-1:-1;1864:9:18;1876:10;1880:6;1876:1;:10;:::i;:::-;:14;;1889:1;1876:14;:::i;:::-;1864:26;;1859:132;1896:1;1892;:5;1859:132;;;-1:-1:-1;;;1943:5:18;1951:3;1943:11;1930:25;;;;;;;:::i;:::-;;;;1918:6;1925:1;1918:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1918:37:18;;;;;;;;-1:-1:-1;1979:1:18;1969:11;;;;;1899:3;;;:::i;:::-;;;1859:132;;;-1:-1:-1;2008:10:18;;2000:55;;;;-1:-1:-1;;;2000:55:18;;23604:2:30;2000:55:18;;;23586:21:30;;;23623:18;;;23616:30;23682:34;23662:18;;;23655:62;23734:18;;2000:55:18;23402:356:30;14:286;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:30;;209:43;;199:71;;266:1;263;256:12;497:131;-1:-1:-1;;;;;572:31:30;;562:42;;552:70;;618:1;615;608:12;633:157;695:5;740:2;731:6;726:3;722:16;718:25;715:45;;;756:1;753;746:12;715:45;-1:-1:-1;778:6:30;633:157;-1:-1:-1;633:157:30:o;795:867::-;937:6;945;953;961;969;977;985;1038:3;1026:9;1017:7;1013:23;1009:33;1006:53;;;1055:1;1052;1045:12;1006:53;1094:9;1081:23;1113:31;1138:5;1113:31;:::i;:::-;1163:5;-1:-1:-1;1215:2:30;1200:18;;1187:32;;-1:-1:-1;1266:2:30;1251:18;;1238:32;;-1:-1:-1;1322:2:30;1307:18;;1294:32;1335:33;1294:32;1335:33;:::i;:::-;1387:7;-1:-1:-1;1446:3:30;1431:19;;1418:33;1460;1418;1460;:::i;:::-;1512:7;-1:-1:-1;1566:3:30;1551:19;;1538:33;;-1:-1:-1;1590:66:30;1648:7;1642:3;1627:19;;1590:66;:::i;:::-;1580:76;;795:867;;;;;;;;;;:::o;1667:180::-;1726:6;1779:2;1767:9;1758:7;1754:23;1750:32;1747:52;;;1795:1;1792;1785:12;1747:52;-1:-1:-1;1818:23:30;;1667:180;-1:-1:-1;1667:180:30:o;2223:315::-;2291:6;2299;2352:2;2340:9;2331:7;2327:23;2323:32;2320:52;;;2368:1;2365;2358:12;2320:52;2404:9;2391:23;2381:33;;2464:2;2453:9;2449:18;2436:32;2477:31;2502:5;2477:31;:::i;:::-;2527:5;2517:15;;;2223:315;;;;;:::o;2543:472::-;2636:6;2644;2652;2705:2;2693:9;2684:7;2680:23;2676:32;2673:52;;;2721:1;2718;2711:12;2673:52;2760:9;2747:23;2779:31;2804:5;2779:31;:::i;:::-;2829:5;-1:-1:-1;2881:2:30;2866:18;;2853:32;;-1:-1:-1;2937:2:30;2922:18;;2909:32;2950:33;2909:32;2950:33;:::i;:::-;3002:7;2992:17;;;2543:472;;;;;:::o;3020:315::-;3088:6;3096;3149:2;3137:9;3128:7;3124:23;3120:32;3117:52;;;3165:1;3162;3155:12;3117:52;3204:9;3191:23;3223:31;3248:5;3223:31;:::i;:::-;3273:5;3325:2;3310:18;;;;3297:32;;-1:-1:-1;;;3020:315:30:o;3522:247::-;3581:6;3634:2;3622:9;3613:7;3609:23;3605:32;3602:52;;;3650:1;3647;3640:12;3602:52;3689:9;3676:23;3708:31;3733:5;3708:31;:::i;4167:725::-;4300:6;4308;4316;4324;4332;4340;4393:3;4381:9;4372:7;4368:23;4364:33;4361:53;;;4410:1;4407;4400:12;4361:53;4449:9;4436:23;4468:31;4493:5;4468:31;:::i;:::-;4518:5;-1:-1:-1;4570:2:30;4555:18;;4542:32;;-1:-1:-1;4621:2:30;4606:18;;4593:32;;-1:-1:-1;4677:2:30;4662:18;;4649:32;4690:33;4649:32;4690:33;:::i;:::-;4742:7;-1:-1:-1;4796:3:30;4781:19;;4768:33;;-1:-1:-1;4820:66:30;4878:7;4872:3;4857:19;;4820:66;:::i;:::-;4810:76;;4167:725;;;;;;;;:::o;6118:251::-;6188:6;6241:2;6229:9;6220:7;6216:23;6212:32;6209:52;;;6257:1;6254;6247:12;6209:52;6289:9;6283:16;6308:31;6333:5;6308:31;:::i;6683:277::-;6750:6;6803:2;6791:9;6782:7;6778:23;6774:32;6771:52;;;6819:1;6816;6809:12;6771:52;6851:9;6845:16;6904:5;6897:13;6890:21;6883:5;6880:32;6870:60;;6926:1;6923;6916:12;6965:184;7035:6;7088:2;7076:9;7067:7;7063:23;7059:32;7056:52;;;7104:1;7101;7094:12;7056:52;-1:-1:-1;7127:16:30;;6965:184;-1:-1:-1;6965:184:30:o;9578:375::-;-1:-1:-1;;;;;9836:15:30;;;9818:34;;9888:15;;;;9883:2;9868:18;;9861:43;9935:2;9920:18;;9913:34;;;;9768:2;9753:18;;9578:375::o;10966:399::-;11168:2;11150:21;;;11207:2;11187:18;;;11180:30;11246:34;11241:2;11226:18;;11219:62;-1:-1:-1;;;11312:2:30;11297:18;;11290:33;11355:3;11340:19;;10966:399::o;11370:127::-;11431:10;11426:3;11422:20;11419:1;11412:31;11462:4;11459:1;11452:15;11486:4;11483:1;11476:15;11502:127;11563:10;11558:3;11554:20;11551:1;11544:31;11594:4;11591:1;11584:15;11618:4;11615:1;11608:15;11634:422;11723:1;11766:5;11723:1;11780:270;11801:7;11791:8;11788:21;11780:270;;;11860:4;11856:1;11852:6;11848:17;11842:4;11839:27;11836:53;;;11869:18;;:::i;:::-;11919:7;11909:8;11905:22;11902:55;;;11939:16;;;;11902:55;12018:22;;;;11978:15;;;;11780:270;;;11784:3;11634:422;;;;;:::o;12061:806::-;12110:5;12140:8;12130:80;;-1:-1:-1;12181:1:30;12195:5;;12130:80;12229:4;12219:76;;-1:-1:-1;12266:1:30;12280:5;;12219:76;12311:4;12329:1;12324:59;;;;12397:1;12392:130;;;;12304:218;;12324:59;12354:1;12345:10;;12368:5;;;12392:130;12429:3;12419:8;12416:17;12413:43;;;12436:18;;:::i;:::-;-1:-1:-1;;12492:1:30;12478:16;;12507:5;;12304:218;;12606:2;12596:8;12593:16;12587:3;12581:4;12578:13;12574:36;12568:2;12558:8;12555:16;12550:2;12544:4;12541:12;12537:35;12534:77;12531:159;;;-1:-1:-1;12643:19:30;;;12675:5;;12531:159;12722:34;12747:8;12741:4;12722:34;:::i;:::-;12792:6;12788:1;12784:6;12780:19;12771:7;12768:32;12765:58;;;12803:18;;:::i;:::-;12841:20;;12061:806;-1:-1:-1;;;12061:806:30:o;12872:140::-;12930:5;12959:47;13000:4;12990:8;12986:19;12980:4;12959:47;:::i;13017:168::-;13057:7;13123:1;13119;13115:6;13111:14;13108:1;13105:21;13100:1;13093:9;13086:17;13082:45;13079:71;;;13130:18;;:::i;:::-;-1:-1:-1;13170:9:30;;13017:168::o;13443:312::-;13522:6;13530;13583:2;13571:9;13562:7;13558:23;13554:32;13551:52;;;13599:1;13596;13589:12;13551:52;13631:9;13625:16;13650:31;13675:5;13650:31;:::i;:::-;13745:2;13730:18;;;;13724:25;13700:5;;13724:25;;-1:-1:-1;;;13443:312:30:o;15488:127::-;15549:10;15544:3;15540:20;15537:1;15530:31;15580:4;15577:1;15570:15;15604:4;15601:1;15594:15;15620:125;15660:4;15688:1;15685;15682:8;15679:34;;;15693:18;;:::i;:::-;-1:-1:-1;15730:9:30;;15620:125::o;15750:135::-;15789:3;15810:17;;;15807:43;;15830:18;;:::i;:::-;-1:-1:-1;15877:1:30;15866:13;;15750:135::o;16796:128::-;16836:3;16867:1;16863:6;16860:1;16857:13;16854:39;;;16873:18;;:::i;:::-;-1:-1:-1;16909:9:30;;16796:128::o;18648:114::-;18732:4;18725:5;18721:16;18714:5;18711:27;18701:55;;18752:1;18749;18742:12;18767:243;18824:6;18877:2;18865:9;18856:7;18852:23;18848:32;18845:52;;;18893:1;18890;18883:12;18845:52;18932:9;18919:23;18951:29;18974:5;18951:29;:::i;19418:247::-;19486:6;19539:2;19527:9;19518:7;19514:23;19510:32;19507:52;;;19555:1;19552;19545:12;19507:52;19587:9;19581:16;19606:29;19629:5;19606:29;:::i;19670:217::-;19710:1;19736;19726:132;;19780:10;19775:3;19771:20;19768:1;19761:31;19815:4;19812:1;19805:15;19843:4;19840:1;19833:15;19726:132;-1:-1:-1;19872:9:30;;19670:217::o;20507:258::-;20579:1;20589:113;20603:6;20600:1;20597:13;20589:113;;;20679:11;;;20673:18;20660:11;;;20653:39;20625:2;20618:10;20589:113;;;20720:6;20717:1;20714:13;20711:48;;;20755:1;20746:6;20741:3;20737:16;20730:27;20711:48;;20507:258;;;:::o;20770:786::-;21181:25;21176:3;21169:38;21151:3;21236:6;21230:13;21252:62;21307:6;21302:2;21297:3;21293:12;21286:4;21278:6;21274:17;21252:62;:::i;:::-;-1:-1:-1;;;21373:2:30;21333:16;;;21365:11;;;21358:40;21423:13;;21445:63;21423:13;21494:2;21486:11;;21479:4;21467:17;;21445:63;:::i;:::-;21528:17;21547:2;21524:26;;20770:786;-1:-1:-1;;;;20770:786:30:o;21561:383::-;21710:2;21699:9;21692:21;21673:4;21742:6;21736:13;21785:6;21780:2;21769:9;21765:18;21758:34;21801:66;21860:6;21855:2;21844:9;21840:18;21835:2;21827:6;21823:15;21801:66;:::i;:::-;21928:2;21907:15;-1:-1:-1;;21903:29:30;21888:45;;;;21935:2;21884:54;;21561:383;-1:-1:-1;;21561:383:30:o;22156:274::-;22285:3;22323:6;22317:13;22339:53;22385:6;22380:3;22373:4;22365:6;22361:17;22339:53;:::i;:::-;22408:16;;;;;22156:274;-1:-1:-1;;22156:274:30:o;23129:127::-;23190:10;23185:3;23181:20;23178:1;23171:31;23221:4;23218:1;23211:15;23245:4;23242:1;23235:15;23261:136;23300:3;23328:5;23318:39;;23337:18;;:::i;:::-;-1:-1:-1;;;23373:18:30;;23261:136::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.15 <0.9.0;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC2981.sol\";\n\nimport \"./IERC721Autentica.sol\";\n\ncontract NFTMarketplace is\n    AccessControl,\n    ReentrancyGuard,\n    Pausable\n{\n    // Number of decimals used for fees.\n    uint8 public constant DECIMALS = 2;\n\n    // Create a new role identifier for the operator role.\n    bytes32 public constant OPERATOR_ROLE = keccak256(\"OPERATOR_ROLE\");\n\n    // Autentica wallet address.\n    address private _autentica;\n\n    // Allowed token addresses to be used with `tradeForTokens`.\n    address[] private _allowedTokens;\n\n    // NFT details.\n    struct NFT {\n        address owner;\n        address creator;\n        address investor;\n    }\n\n    // Percentages for each party that needs to be payed.\n    struct Percentages {\n        uint256 creator;\n        uint256 investor;\n    }\n\n    // Proceeds for each party that needs to be payed amounts expressed in coins or tokens, not in percentages\n    struct Proceeds {\n        uint256 creator;\n        uint256 investor;\n        uint256 marketplace;\n    }\n\n    // ECDSA signature.\n    struct Signature {\n        uint8 v;\n        bytes32 r;\n        bytes32 s;\n    }\n\n    /**\n     * @dev Emitted when the Autentica wallet address has been updated.\n     */\n    event ChangedAutentica(\n        address indexed oldAddress,\n        address indexed newAddress\n    );\n    /**\n     * @dev Emitted when a trade occured between the `seller` (the owner of the ERC-721 token\n     * represented by `tokenId` within the `collection` smart contract) and `buyer` which\n     * payed the specified `price` in coins (the native cryptocurrency of the platform, i.e.: ETH).\n     */\n    event TradedForCoins(\n        address indexed collection,\n        uint256 indexed tokenId,\n        address indexed seller,\n        address buyer,\n        uint256 price,\n        uint256 ownerProceeds,\n        uint256 creatorProceeds,\n        uint256 investorProceeds\n    );\n    /**\n     * @dev Emitted when a trade occured between the `seller` (the owner of the ERC-721 token\n     * represented by `tokenId` within the `collection` smart contract) and `buyer` which\n     * payed the specified `price` in tokens that are represented by the `token`\n     * ERC-20 smart contract address.\n     */\n    event TradedForTokens(\n        address indexed collection,\n        uint256 indexed tokenId,\n        address indexed seller,\n        address buyer,\n        address token,\n        uint256 price,\n        uint256 ownerProceeds,\n        uint256 creatorProceeds,\n        uint256 investorProceeds\n    );\n\n    /**\n     * @dev Emitted when a new token is allowed to be used for trading.\n     */\n    event AllowedTokenAdded(address indexed tokenAddress);\n    /**\n     * @dev Emitted when a token is not longer allowed to be used for trading.\n     */\n    event AllowedTokenRemoved(address indexed tokenAddress);\n\n    /**\n     * The constructor sets the creator of the contract as the admin\n     * and operator of this smart contract, sets the wallet address for Autentica and sets the allowed tokens.\n     */\n    constructor(address wallet, address[] memory allowedTokens) {\n        // Grant the admin role to the owner\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n        // Grant the operator role to the owner\n        _setupRole(OPERATOR_ROLE, _msgSender());\n\n        // Set the wallet address for Autentica\n        _autentica = wallet;\n\n        // Set the allowed tokens\n        for (uint256 i = 0; i < allowedTokens.length; i++) {\n            addAllowedToken(allowedTokens[i]);\n        }\n    }\n\n    /**\n     * Returns the Autentica wallet address.\n     */\n    function autentica() external view returns (address) {\n        return _autentica;\n    }\n\n    /**\n     * @dev Sets the Autentica wallet address.\n     *\n     * Requirements:\n     *\n     * - the caller must be admin.\n     */\n    function setAutentica(address wallet) external returns (address) {\n        require(\n            hasRole(DEFAULT_ADMIN_ROLE, _msgSender()),\n            \"NFTMarketplace: Only admins can change this\"\n        );\n\n        // Keep a reference to the old address\n        address oldAutentica = _autentica;\n\n        // Change the address\n        _autentica = wallet;\n\n        // Emit the event\n        emit ChangedAutentica(oldAutentica, _autentica);\n\n        return _autentica;\n    }\n\n    /**\n     * @dev Returns the number of decimals used for fees.\n     */\n    function decimals() external pure returns (uint8) {\n        return DECIMALS;\n    }\n\n    /**\n     * @dev Returns the number of allowed tokens.\n     */\n    function numberOfAllowedTokens() public view returns (uint256) {\n        return _allowedTokens.length;\n    }\n\n    /**\n     * @dev Returns the address of the allowed token at the specified index.\n     * @param index The index of the allowed token.\n     */\n    function allowedTokenAtIndex(uint256 index) public view returns (address) {\n        require(\n            index < numberOfAllowedTokens(),\n            \"NFTMarketplace: Index out of bounds\"\n        );\n        return _allowedTokens[index];\n    }\n\n    /**\n     * @dev Verifies if a token address has been allowed already.\n     */\n    function isTokenAllowed(address tokenAddress) public view returns (bool) {\n        for (uint256 i = 0; i < numberOfAllowedTokens(); i++) {\n            if (_allowedTokens[i] == tokenAddress) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @dev Add a new allowed token to the contract.\n     * @param tokenAddress The address of the allowed token to add.\n     *\n     * Requirements:\n     *\n     * - the caller must be admin.\n     */\n    function addAllowedToken(address tokenAddress) public {\n        require(\n            hasRole(DEFAULT_ADMIN_ROLE, _msgSender()),\n            \"NFTMarketplace: Only admins can add allowed tokens\"\n        );\n\n        // Check if the token address is valid\n        require(\n            tokenAddress != address(0),\n            \"NFTMarketplace: Token address is the zero address\"\n        );\n\n        // Check if the token address is already allowed\n        require(\n            !isTokenAllowed(tokenAddress),\n            \"NFTMarketplace: Token address is already allowed\"\n        );\n\n        // Add the token address\n        _allowedTokens.push(tokenAddress);\n\n        // Emit the event\n        emit AllowedTokenAdded(tokenAddress);\n    }\n\n    /**\n     * @dev Remove the allowed token at the specified index.\n     * @param index The index of the allowed token.\n     *\n     * Requirements:\n     *\n     * - the caller must be admin.\n     */\n    function removeAllowedTokenAtIndex(uint256 index) public {\n        require(\n            hasRole(DEFAULT_ADMIN_ROLE, _msgSender()),\n            \"NFTMarketplace: Only admins can remove allowed tokens\"\n        );\n\n        // Check if the index is valid\n        require(\n            index < numberOfAllowedTokens(),\n            \"NFTMarketplace: Index out of bounds\"\n        );\n\n        // Keep a reference to the old address\n        address tokenAddress = _allowedTokens[index];\n\n        // Deleting an element from the array does not affect the array length, so we need to use the `pop()` method\n        if (numberOfAllowedTokens() == 1) {\n            _allowedTokens.pop();\n        } else {\n            // Instead of shifting all the elements from the right, we will just move the last element in place of the\n            // element that will be removed\n            _allowedTokens[index] = _allowedTokens[numberOfAllowedTokens() - 1];\n            // Remove the last element\n            _allowedTokens.pop();\n        }\n\n        // Emit the event\n        emit AllowedTokenRemoved(tokenAddress);\n    }\n\n    /**\n     * @notice Trades an NFT for a given amount of coins (the native cryptocurrency of the platform, i.e.: ETH).\n     *\n     * @param collection The ERC-721 smart contract.\n     * @param tokenId The unique identifier of the ERC-721 token within the `collection` smart contract.\n     * @param price The price of the NFT in coins.\n     * @param buyer Buyer address.\n     * @param marketplaceFee Marketplace fee.\n     * @param signature ECDSA signature.\n     *\n     * @dev Requirements\n     *\n     * - The `collection` smart contract must be an ERC-721 smart contract.\n     * - The owner of the NFT identified by `tokenId` within the `collection` smart contract must have approved\n     *   this smart contract to manage its NFTs.\n     * - The `price` and `msg.value` must be equal.\n     * - The sum of all the fees cannot be greater than 100%.\n     * - The ECDSA signature must be signed by someone with the admin or operator role.\n     */\n    function tradeForCoins(\n        address collection,\n        uint256 tokenId,\n        uint256 price,\n        address buyer,\n        uint256 marketplaceFee,\n        Signature calldata signature\n    ) external payable nonReentrant {\n        // Check if the user sent enough coins\n        require(msg.value == price, \"NFTMarketplace: Not enough coins sent\");\n\n        // Validate the trade\n        canPerformTrade(\n            collection,\n            tokenId,\n            price,\n            address(0x0),\n            buyer,\n            marketplaceFee,\n            signature\n        );\n\n        NFT memory nft = _nftDetails(collection, tokenId);\n\n        // Assemble the percentages\n        Percentages memory percentages = _percentagesDetails(\n            nft,\n            getRoyaltyFee(collection, tokenId),\n            getInvestorFee(collection, tokenId),\n            marketplaceFee\n        );\n\n        // Assemble the fees\n        Proceeds memory proceeds = Proceeds({\n            creator: _calculateProceedsForFee(percentages.creator, price),\n            investor: _calculateProceedsForFee(percentages.investor, price),\n            marketplace: _calculateProceedsForFee(marketplaceFee, price)\n        });\n\n        // Calculate the base owner proceeds\n        uint256 ownerProceeds = _calculateOwnerProceeds(\n            price,\n            proceeds\n        );\n\n        // Payments\n        _sendViaCall(payable(nft.owner), ownerProceeds);\n        if (proceeds.investor > 0) {\n            _sendViaCall(payable(nft.investor), proceeds.investor);\n        }\n        if (proceeds.creator > 0) {\n            _sendViaCall(payable(nft.creator), proceeds.creator);\n        }\n        if (proceeds.marketplace > 0) {\n            _sendViaCall(payable(_autentica), proceeds.marketplace);\n        }\n\n        // Finally transfer the NFT\n        IERC721(collection).safeTransferFrom(nft.owner, _msgSender(), tokenId);\n\n        // Emit the event\n        emit TradedForCoins(\n            collection,\n            tokenId,\n            nft.owner,\n            _msgSender(),\n            price,\n            ownerProceeds,\n            proceeds.creator,\n            proceeds.investor\n        );\n    }\n\n    /**\n     * @notice Trades an NFT for a given amount of ERC-20 tokens (i.e.: AUT/USDT/USDC).\n     *\n     * @param collection The ERC-721 smart contract.\n     * @param tokenId The unique identifier of the ERC-721 token within the `collection` smart contract.\n     * @param price The price of the NFT in `token` tokens.\n     * @param token The ERC-20 smart contract.\n     * @param buyer Buyer address.\n     * @param marketplaceFee Marketplace fee.\n     * @param signature ECDSA signature.\n     *\n     * Requirements:\n     *\n     * - The `collection` smart contract must be an ERC-721 smart contract.\n     * - The owner of the NFT identified by `tokenId` within the `collection` smart contract must have approved\n     *   this smart contract to manage its NFTs.\n     * - The sum of all the fees cannot be greater than 100%.\n     * - The ECDSA signature must be signed by someone with the admin or operator role.\n     */\n    function tradeForTokens(\n        address collection,\n        uint256 tokenId,\n        uint256 price,\n        address token,\n        address buyer,\n        uint256 marketplaceFee,\n        Signature calldata signature\n    ) external nonReentrant {\n        // Check if the token is allowed\n        require(isTokenAllowed(token), \"NFTMarketplace: Token not allowed\");\n\n        // Validate the trade\n        canPerformTrade(\n            collection,\n            tokenId,\n            price,\n            token,\n            buyer,\n            marketplaceFee,\n            signature\n        );\n\n        // Assemble the NFT details\n        NFT memory nft = _nftDetails(collection, tokenId);\n\n        // Assemble the percentages\n        Percentages memory percentages = _percentagesDetails(\n            nft,\n            getRoyaltyFee(collection, tokenId),\n            getInvestorFee(collection, tokenId),\n            marketplaceFee\n        );\n\n        // Assemble the fees\n        Proceeds memory proceeds = Proceeds({\n            creator: _calculateProceedsForFee(percentages.creator, price),\n            investor: _calculateProceedsForFee(percentages.investor, price),\n            marketplace: _calculateProceedsForFee(marketplaceFee, price)\n        });\n\n        // Calculate the base owner proceeds\n        uint256 ownerProceeds = _calculateOwnerProceeds(\n            price,\n            proceeds\n        );\n\n        // Payments\n        IERC20(token).transferFrom(buyer, nft.owner, ownerProceeds);\n        if (proceeds.investor > 0) {\n            IERC20(token).transferFrom(\n                buyer,\n                nft.investor,\n                proceeds.investor\n            );\n        }\n        if (proceeds.creator > 0) {\n            IERC20(token).transferFrom(buyer, nft.creator, proceeds.creator);\n        }\n        if (proceeds.marketplace > 0) {\n            IERC20(token).transferFrom(\n                buyer,\n                _autentica,\n                proceeds.marketplace\n            );\n        }\n        // Finally transfer the NFT\n        IERC721(collection).safeTransferFrom(nft.owner, _msgSender(), tokenId);\n\n        // Emit the event\n        emit TradedForTokens(\n            collection,\n            tokenId,\n            nft.owner,\n            _msgSender(),\n            token,\n            price,\n            ownerProceeds,\n            proceeds.creator,\n            proceeds.investor\n        );\n    }\n\n    /**\n     * @notice Validate the trade.\n     *\n     * @param collection The ERC-721 smart contract.\n     * @param tokenId The unique identifier of the ERC-721 token within the `collection` smart contract.\n     * @param price The price of the NFT in `token` tokens.\n     * @param currency The type of currency (erc20 or native currency)\n     * @param buyer Buyer address.\n     * @param marketplaceFee Marketplace fee.\n     * @param signature ECDSA signature.\n     *\n     */\n    function canPerformTrade(\n        address collection,\n        uint256 tokenId,\n        uint256 price,\n        address currency,\n        address buyer,\n        uint256 marketplaceFee,\n        Signature calldata signature\n    ) public view returns (bool) {\n        // Check if the contract is paused\n        require(!paused(), \"NFTMarketplace: Contract is paused\");\n\n        // Check if the collection is an ERC-721 smart contract\n        _validateERC721(collection);\n\n        // Assemble the NFT details\n        NFT memory nft = _nftDetails(collection, tokenId);\n\n        // Validate the approval\n        _validateNFTApproval(collection, tokenId, nft);\n\n        // Fees\n        uint256 royaltyFee = getRoyaltyFee(collection, tokenId);\n        uint256 investorFee = getInvestorFee(collection, tokenId);\n\n        // Make sure that all the fees sumed up do not exceed 100%\n        // \n        // Note: The investor fee is ignored from the validation\n        // because that fee represents a percetange of the\n        // royalty fee.\n        _validateFees(royaltyFee, marketplaceFee);\n\n        // Make sure the parameters are valid\n        require(\n            _validateTrade(\n                collection,\n                tokenId,\n                nft.owner,\n                buyer,\n                price,\n                currency,\n                royaltyFee,\n                investorFee,\n                marketplaceFee,\n                signature\n            ),\n            \"NFTMarketplace: Invalid signature\"\n        );\n        return true;\n    }\n\n    /**\n     * @notice If the collection smart contract implements `IERC721Autentica` or `IERC2981` then \n     * the function returns the royalty fee from that smart contract, otherwise it will return 0.\n     *\n     * @param collection The ERC-721 smart contract.\n     * @param tokenId The unique identifier of the ERC-721 token within the `collection` smart contract.\n     *\n     */\n    function getRoyaltyFee(address collection, uint256 tokenId)\n        public\n        view\n        returns (uint256)\n    {\n        uint256 royaltyFee = 0;\n\n        if (ERC165Checker.supportsInterface(collection, type(IERC721Autentica).interfaceId)) {\n            // This is a smart contract implementing `IERC721Autentica`\n            royaltyFee = _normalizedFee(\n                IERC721Autentica(collection),\n                IERC721Autentica(collection).getRoyaltyFee(tokenId)\n            );\n        } else if (ERC165Checker.supportsInterface(collection, type(IERC2981).interfaceId)) {\n            // This is a smart contract implementing `IERC2981`\n            (, royaltyFee) = IERC2981(collection).royaltyInfo(tokenId, 100 * (10 ** DECIMALS));\n            // The reason for why we use `100 * (10 ** DECIMALS)` as the sale price is because other\n            // we don't want to lose precision when calculating the fee.\n        }\n        return royaltyFee;\n    }\n\n    /**\n     * @notice If the collection smart contract implements `IERC721Autentica` then the function \n     * returns the investor fee from that smart contract, otherwise it will return 0.\n     *\n     * @param collection The ERC-721 smart contract.\n     * @param tokenId The unique identifier of the ERC-721 token within the `collection` smart contract.\n     *\n     */\n    function getInvestorFee(address collection, uint256 tokenId)\n        public\n        view\n        returns (uint256)\n    {\n        uint256 investorFee = 0;\n        if (ERC165Checker.supportsInterface(collection, type(IERC721Autentica).interfaceId)) {\n            // This is a smart contract implementing `IERC721Autentica`\n            investorFee = _normalizedFee(\n                IERC721Autentica(collection),\n                IERC721Autentica(collection).getInvestorFee(tokenId)\n            );\n        }\n        return investorFee;\n    }\n\n    /**\n     * @dev Verifies if the token owner has approved this smart contract to manage its \n     * NFTs from the specified collection.\n     * @return Returns `true` if this smart contract is approved by the `tokenOwner` in \n     * the `collection` smart contract or only if that specific NFT is approved for this smart contract.\n     */\n    function isMarketplaceApproved(\n        IERC721 collection,\n        uint256 tokenId,\n        address tokenOwner\n    ) public view returns (bool) {\n        return\n            collection.getApproved(tokenId) == address(this) ||\n            collection.isApprovedForAll(tokenOwner, address(this));\n    }\n\n    /**\n     * @notice Pause the contract.\n     *\n     * Requirements:\n     *\n     * - the caller must be admin.\n     */\n    function pause() public {\n        // Make sure that only admins can pause the contract\n        require(\n            hasRole(DEFAULT_ADMIN_ROLE, _msgSender()),\n            \"NFTMarketplace: Only admins can pause\"\n        );\n\n        // Do it\n        _pause();\n    }\n\n    /**\n     * @notice Unpause the contract.\n     *\n     * Requirements:\n     *\n     * - the caller must be admin.\n     */\n    function unpause() public {\n        // Make sure that only admins can unpause the contract\n        require(\n            hasRole(DEFAULT_ADMIN_ROLE, _msgSender()),\n            \"NFTMarketplace: Only admins can unpause\"\n        );\n\n        // Do it\n        _unpause();\n    }\n\n    /**\n     * @dev Function to transfer coins (the native cryptocurrency of the \n     * platform, i.e.: ETH) from this contract to the specified address.\n     *\n     * @param to - Address where to transfer the coins\n     * @param amount - Amount (in wei)\n     *\n     */\n    function _sendViaCall(address payable to, uint256 amount) private {\n        (bool sent, ) = to.call{value: amount}(\"\");\n        require(sent, \"NFTMarketplace: Failed to send coins\");\n    }\n\n    /**\n     * Returns `true` if the signer has the admin or the operator role.\n     *\n     * @param collection The ERC-721 smart contract.\n     * @param tokenId The unique identifier of the ERC-721 token within the `collection` smart contract.\n     * @param buyer Seller address.\n     * @param buyer Buyer address.\n     * @param price Price of the NFT expressed in coins or tokens.\n     * @param token The ERC-20 smart contract address.\n     * @param royaltyFee Royalty fee.\n     * @param investorFee Investor fee.\n     * @param marketplaceFee Marketplace fee.\n     * @param signature ECDSA signature.\n     */\n    function _validateTrade(\n        address collection,\n        uint256 tokenId,\n        address seller,\n        address buyer,\n        uint256 price,\n        address token,\n        uint256 royaltyFee,\n        uint256 investorFee,\n        uint256 marketplaceFee,\n        Signature calldata signature\n    ) private view returns (bool) {\n        bytes32 hash = keccak256(\n            abi.encode(\n                address(this),\n                collection,\n                tokenId,\n                seller,\n                buyer,\n                price,\n                token,\n                royaltyFee,\n                investorFee,\n                marketplaceFee\n            )\n        );\n\n        address signer = ecrecover(\n            keccak256(\n                abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash)\n            ),\n            signature.v,\n            signature.r,\n            signature.s\n        );\n\n        return\n            hasRole(DEFAULT_ADMIN_ROLE, signer) ||\n            hasRole(OPERATOR_ROLE, signer);\n    }\n\n    /**\n     * @dev Returns the fee normalized to the number of decimals used in this smart contract.\n     *\n     * @param collection The Autentica ERC-721 smart contract.\n     * @param fee Value represented using the number of decimals used by the `collection` smart contract.\n     */\n    function _normalizedFee(IERC721Autentica collection, uint256 fee)\n        private\n        view\n        returns (uint256)\n    {\n        return (fee * (10**DECIMALS)) / (10**collection.decimals());\n    }\n\n    /**\n     * @dev Returns the number of coins/tokens for a given fee percentage.\n     */\n    function _calculateProceedsForFee(uint256 fee, uint256 price)\n        private\n        pure\n        returns (uint256)\n    {\n        if (fee == 0) {\n            return 0;\n        }\n\n        // Price * Fee (which is already multiplied by 10**DECIMALS) / 100% multiplied by 10**DECIMALS\n        return (price * fee) / (100 * 10**DECIMALS);\n    }\n\n    /**\n     * Returns the owner proceeds.\n     */\n    function _calculateOwnerProceeds(\n        uint256 price,\n        Proceeds memory proceeds\n    ) private pure returns (uint256) {\n        return\n            price -\n            proceeds.marketplace -\n            proceeds.creator -\n            proceeds.investor;\n    }\n\n    /**\n     * @dev Makes sure that the `collection` is a valid ERC-721 smart contract.\n     */\n    function _validateERC721(address collection) private view {\n        require(\n            ERC165Checker.supportsInterface(\n                collection,\n                type(IERC721).interfaceId\n            ),\n            \"NFTMarketplace: Collection does not support the ERC-721 interface\"\n        );\n    }\n\n    /**\n     * @dev Makes sure that the owner approved this smart contract for the token.\n     */\n    function _validateNFTApproval(\n        address collection,\n        uint256 tokenId,\n        NFT memory nft\n    ) private view {\n        require(\n            isMarketplaceApproved(IERC721(collection), tokenId, nft.owner),\n            \"NFTMarketplace: Owner has not approved us for managing its NFTs\"\n        );\n    }\n\n    /**\n     * @dev Make sure that all the fees sumed up do not exceed 100%.\n     */\n    function _validateFees(\n        uint256 royaltyFee,\n        uint256 marketplaceFee\n    ) private pure {\n        require(\n            royaltyFee + marketplaceFee <= 100 * 10**DECIMALS,\n            \"NFTMarketplace: Total fees cannot be greater than 100%\"\n        );\n    }\n\n    /**\n     * @dev Returns the NFT details.\n     *\n     * @param collection The ERC-721 smart contract.\n     * @param tokenId The unique identifier of the ERC-721 token within the `collection` smart contract.\n     */\n    function _nftDetails(address collection, uint256 tokenId)\n        private\n        view\n        returns (NFT memory)\n    {\n        // Assemble the NFT details\n        NFT memory nft = NFT({\n            owner: IERC721(collection).ownerOf(tokenId),\n            creator: address(0x0), // Will get overriden below if this is a Autentica ERC-721 collection\n            investor: address(0x0) // Will get overriden below if this is a Autentica ERC-721 collection\n        });\n\n        // Update the information about the creator and investor\n        if (ERC165Checker.supportsInterface(collection, type(IERC721Autentica).interfaceId)) {\n            // This is a smart contract implementing `IERC721Autentica`\n            nft.creator = IERC721Autentica(collection).getCreator(tokenId);\n            nft.investor = IERC721Autentica(collection).getInvestor(tokenId);\n        } else if (ERC165Checker.supportsInterface(collection, type(IERC2981).interfaceId)) {\n            // This is a smart contract implementing `IERC2981`\n            (nft.creator, ) = IERC2981(collection).royaltyInfo(tokenId, 100 * (10 ** DECIMALS));\n            // The reason for why we use `100 * (10 ** DECIMALS)` as the sale price is because other\n            // implementations of `ERC-2981` may return `address(0x0)` for the \n            // `receiver` if the values are too low or zero.\n        }\n\n        return nft;\n    }\n\n    /**\n     * @dev Returns the Percentages details.\n     *\n     * @param nft NFT details.\n     * @param royaltyFee Royalty fee.\n     * @param investorFee Investor fee.\n     * @param marketplaceFee Marketplace fee.\n     */\n    function _percentagesDetails(\n        NFT memory nft,\n        uint256 royaltyFee,\n        uint256 investorFee,\n        uint256 marketplaceFee\n    ) private pure returns (Percentages memory) {\n        Percentages memory percentages = Percentages({creator: 0, investor: 0});\n\n        if (nft.owner == nft.creator) {\n            // CASE 1: The NFT is owned by the creator\n\n            if (nft.investor != address(0x0) && investorFee > 0) {\n                // CASE 1.1: The investor will receive X% from the creator/owner's end\n                percentages.investor = (investorFee * ((100 * 10**DECIMALS) - marketplaceFee)) / (100 * 10**DECIMALS);\n            }\n        } else {\n            // CASE 2: The NFT is owned by someone else\n\n            if (nft.creator != address(0x0) && royaltyFee > 0) {\n                // CASE 2.1: The creator will get payed too\n                percentages.creator = royaltyFee;\n\n                if (nft.investor != address(0x0) && investorFee > 0) {\n                    // CASE 1.1: The investor will receive X% from the creator's end\n                    \n                    // Calculate the investor fee\n                    percentages.investor = (investorFee * percentages.creator) / (100 * 10**DECIMALS);\n                    // Shrink the creator fee\n                    percentages.creator = percentages.creator - percentages.investor;\n                }\n            }\n        }\n\n        return percentages;\n    }\n}\n",
  "sourcePath": "/Volumes/Storage/Workspace/Projects/Autentica/smart-contracts/contracts/NFTMarketplace.sol",
  "ast": {
    "absolutePath": "project:/contracts/NFTMarketplace.sol",
    "exportedSymbols": {
      "AccessControl": [
        319
      ],
      "Context": [
        3117
      ],
      "ERC165": [
        3367
      ],
      "ERC165Checker": [
        3569
      ],
      "IAccessControl": [
        392
      ],
      "IERC165": [
        3581
      ],
      "IERC20": [
        1223
      ],
      "IERC2981": [
        411
      ],
      "IERC721": [
        2231
      ],
      "IERC721Autentica": [
        4337
      ],
      "NFTMarketplace": [
        5830
      ],
      "Pausable": [
        519
      ],
      "ReentrancyGuard": [
        559
      ],
      "Strings": [
        3343
      ]
    },
    "id": 5831,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4372,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".15",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:26"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 4373,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5831,
        "sourceUnit": 320,
        "src": "66:58:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 4374,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5831,
        "sourceUnit": 560,
        "src": "125:62:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 4375,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5831,
        "sourceUnit": 520,
        "src": "188:55:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 4376,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5831,
        "sourceUnit": 2232,
        "src": "244:58:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4377,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5831,
        "sourceUnit": 1224,
        "src": "303:56:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol",
        "id": 4378,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5831,
        "sourceUnit": 3570,
        "src": "360:71:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/interfaces/IERC2981.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC2981.sol",
        "id": 4379,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5831,
        "sourceUnit": 412,
        "src": "432:57:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IERC721Autentica.sol",
        "file": "./IERC721Autentica.sol",
        "id": 4380,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5831,
        "sourceUnit": 4338,
        "src": "491:32:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4381,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 319,
              "src": "556:13:26"
            },
            "id": 4382,
            "nodeType": "InheritanceSpecifier",
            "src": "556:13:26"
          },
          {
            "baseName": {
              "id": 4383,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 559,
              "src": "575:15:26"
            },
            "id": 4384,
            "nodeType": "InheritanceSpecifier",
            "src": "575:15:26"
          },
          {
            "baseName": {
              "id": 4385,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 519,
              "src": "596:8:26"
            },
            "id": 4386,
            "nodeType": "InheritanceSpecifier",
            "src": "596:8:26"
          }
        ],
        "canonicalName": "NFTMarketplace",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5830,
        "linearizedBaseContracts": [
          5830,
          519,
          559,
          319,
          3367,
          3581,
          392,
          3117
        ],
        "name": "NFTMarketplace",
        "nameLocation": "534:14:26",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "2e0f2625",
            "id": 4389,
            "mutability": "constant",
            "name": "DECIMALS",
            "nameLocation": "674:8:26",
            "nodeType": "VariableDeclaration",
            "scope": 5830,
            "src": "652:34:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 4387,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "652:5:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 4388,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "685:1:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "f5b541a6",
            "id": 4394,
            "mutability": "constant",
            "name": "OPERATOR_ROLE",
            "nameLocation": "776:13:26",
            "nodeType": "VariableDeclaration",
            "scope": 5830,
            "src": "752:66:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 4390,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "752:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4f50455241544f525f524f4c45",
                  "id": 4392,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "802:15:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
                    "typeString": "literal_string \"OPERATOR_ROLE\""
                  },
                  "value": "OPERATOR_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
                    "typeString": "literal_string \"OPERATOR_ROLE\""
                  }
                ],
                "id": 4391,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "792:9:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 4393,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "792:26:26",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4396,
            "mutability": "mutable",
            "name": "_autentica",
            "nameLocation": "874:10:26",
            "nodeType": "VariableDeclaration",
            "scope": 5830,
            "src": "858:26:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4395,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "858:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4399,
            "mutability": "mutable",
            "name": "_allowedTokens",
            "nameLocation": "974:14:26",
            "nodeType": "VariableDeclaration",
            "scope": 5830,
            "src": "956:32:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 4397,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "956:7:26",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 4398,
              "nodeType": "ArrayTypeName",
              "src": "956:9:26",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "NFTMarketplace.NFT",
            "id": 4406,
            "members": [
              {
                "constant": false,
                "id": 4401,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "1044:5:26",
                "nodeType": "VariableDeclaration",
                "scope": 4406,
                "src": "1036:13:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4400,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1036:7:26",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4403,
                "mutability": "mutable",
                "name": "creator",
                "nameLocation": "1067:7:26",
                "nodeType": "VariableDeclaration",
                "scope": 4406,
                "src": "1059:15:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4402,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1059:7:26",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4405,
                "mutability": "mutable",
                "name": "investor",
                "nameLocation": "1092:8:26",
                "nodeType": "VariableDeclaration",
                "scope": 4406,
                "src": "1084:16:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4404,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1084:7:26",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "NFT",
            "nameLocation": "1022:3:26",
            "nodeType": "StructDefinition",
            "scope": 5830,
            "src": "1015:92:26",
            "visibility": "public"
          },
          {
            "canonicalName": "NFTMarketplace.Percentages",
            "id": 4411,
            "members": [
              {
                "constant": false,
                "id": 4408,
                "mutability": "mutable",
                "name": "creator",
                "nameLocation": "1208:7:26",
                "nodeType": "VariableDeclaration",
                "scope": 4411,
                "src": "1200:15:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4407,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1200:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4410,
                "mutability": "mutable",
                "name": "investor",
                "nameLocation": "1233:8:26",
                "nodeType": "VariableDeclaration",
                "scope": 4411,
                "src": "1225:16:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4409,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1225:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Percentages",
            "nameLocation": "1178:11:26",
            "nodeType": "StructDefinition",
            "scope": 5830,
            "src": "1171:77:26",
            "visibility": "public"
          },
          {
            "canonicalName": "NFTMarketplace.Proceeds",
            "id": 4418,
            "members": [
              {
                "constant": false,
                "id": 4413,
                "mutability": "mutable",
                "name": "creator",
                "nameLocation": "1399:7:26",
                "nodeType": "VariableDeclaration",
                "scope": 4418,
                "src": "1391:15:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4412,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1391:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4415,
                "mutability": "mutable",
                "name": "investor",
                "nameLocation": "1424:8:26",
                "nodeType": "VariableDeclaration",
                "scope": 4418,
                "src": "1416:16:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4414,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1416:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4417,
                "mutability": "mutable",
                "name": "marketplace",
                "nameLocation": "1450:11:26",
                "nodeType": "VariableDeclaration",
                "scope": 4418,
                "src": "1442:19:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4416,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1442:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proceeds",
            "nameLocation": "1372:8:26",
            "nodeType": "StructDefinition",
            "scope": 5830,
            "src": "1365:103:26",
            "visibility": "public"
          },
          {
            "canonicalName": "NFTMarketplace.Signature",
            "id": 4425,
            "members": [
              {
                "constant": false,
                "id": 4420,
                "mutability": "mutable",
                "name": "v",
                "nameLocation": "1531:1:26",
                "nodeType": "VariableDeclaration",
                "scope": 4425,
                "src": "1525:7:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 4419,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1525:5:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4422,
                "mutability": "mutable",
                "name": "r",
                "nameLocation": "1550:1:26",
                "nodeType": "VariableDeclaration",
                "scope": 4425,
                "src": "1542:9:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 4421,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1542:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4424,
                "mutability": "mutable",
                "name": "s",
                "nameLocation": "1569:1:26",
                "nodeType": "VariableDeclaration",
                "scope": 4425,
                "src": "1561:9:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 4423,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1561:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Signature",
            "nameLocation": "1505:9:26",
            "nodeType": "StructDefinition",
            "scope": 5830,
            "src": "1498:79:26",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4426,
              "nodeType": "StructuredDocumentation",
              "src": "1583:83:26",
              "text": " @dev Emitted when the Autentica wallet address has been updated."
            },
            "eventSelector": "a2c04199617341beb18c0052b61ae8aa35006743d43ca44891ca000f56e90655",
            "id": 4432,
            "name": "ChangedAutentica",
            "nameLocation": "1677:16:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4428,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "oldAddress",
                  "nameLocation": "1719:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4432,
                  "src": "1703:26:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1703:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4430,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "1755:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4432,
                  "src": "1739:26:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1739:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1693:78:26"
            },
            "src": "1671:101:26"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4433,
              "nodeType": "StructuredDocumentation",
              "src": "1777:295:26",
              "text": " @dev Emitted when a trade occured between the `seller` (the owner of the ERC-721 token\n represented by `tokenId` within the `collection` smart contract) and `buyer` which\n payed the specified `price` in coins (the native cryptocurrency of the platform, i.e.: ETH)."
            },
            "eventSelector": "0208fc5be027d6de8ccfba986c6e00e8fe20decd43de203db40d4024616c2333",
            "id": 4451,
            "name": "TradedForCoins",
            "nameLocation": "2083:14:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4435,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "2123:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4451,
                  "src": "2107:26:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2107:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4437,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2159:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4451,
                  "src": "2143:23:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2143:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4439,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2192:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4451,
                  "src": "2176:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2176:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4441,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2216:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4451,
                  "src": "2208:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2208:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4443,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2239:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4451,
                  "src": "2231:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2231:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4445,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ownerProceeds",
                  "nameLocation": "2262:13:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4451,
                  "src": "2254:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4447,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creatorProceeds",
                  "nameLocation": "2293:15:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4451,
                  "src": "2285:23:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2285:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4449,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "investorProceeds",
                  "nameLocation": "2326:16:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4451,
                  "src": "2318:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4448,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2318:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2097:251:26"
            },
            "src": "2077:272:26"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4452,
              "nodeType": "StructuredDocumentation",
              "src": "2354:314:26",
              "text": " @dev Emitted when a trade occured between the `seller` (the owner of the ERC-721 token\n represented by `tokenId` within the `collection` smart contract) and `buyer` which\n payed the specified `price` in tokens that are represented by the `token`\n ERC-20 smart contract address."
            },
            "eventSelector": "69d820f7af9ba1109e1ff47df37b0819b3ed419d6e5361abcd8574d4f836be1b",
            "id": 4472,
            "name": "TradedForTokens",
            "nameLocation": "2679:15:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4454,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "2720:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4472,
                  "src": "2704:26:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2704:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4456,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2756:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4472,
                  "src": "2740:23:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2740:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4458,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2789:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4472,
                  "src": "2773:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2773:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4460,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2813:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4472,
                  "src": "2805:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2805:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4462,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2836:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4472,
                  "src": "2828:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2828:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4464,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2859:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4472,
                  "src": "2851:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2851:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4466,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ownerProceeds",
                  "nameLocation": "2882:13:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4472,
                  "src": "2874:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2874:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4468,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creatorProceeds",
                  "nameLocation": "2913:15:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4472,
                  "src": "2905:23:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2905:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4470,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "investorProceeds",
                  "nameLocation": "2946:16:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4472,
                  "src": "2938:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2938:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2694:274:26"
            },
            "src": "2673:296:26"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4473,
              "nodeType": "StructuredDocumentation",
              "src": "2975:83:26",
              "text": " @dev Emitted when a new token is allowed to be used for trading."
            },
            "eventSelector": "f849d00bc67e9e4bf072df9680646c59b8c5380160834c2e1d4896ce5ec81f75",
            "id": 4477,
            "name": "AllowedTokenAdded",
            "nameLocation": "3069:17:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4475,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "3103:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4477,
                  "src": "3087:28:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3087:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3086:30:26"
            },
            "src": "3063:54:26"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4478,
              "nodeType": "StructuredDocumentation",
              "src": "3122:90:26",
              "text": " @dev Emitted when a token is not longer allowed to be used for trading."
            },
            "eventSelector": "bf996b4fd74f0c7159bb017b1db415b0d9a6f13129f46d0b93309d170b78df31",
            "id": 4482,
            "name": "AllowedTokenRemoved",
            "nameLocation": "3223:19:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4480,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "3259:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4482,
                  "src": "3243:28:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3243:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3242:30:26"
            },
            "src": "3217:56:26"
          },
          {
            "body": {
              "id": 4526,
              "nodeType": "Block",
              "src": "3535:434:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4492,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "3601:18:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4493,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3107,
                          "src": "3621:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3621:12:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4491,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "3590:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3590:44:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4496,
                  "nodeType": "ExpressionStatement",
                  "src": "3590:44:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4498,
                        "name": "OPERATOR_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4394,
                        "src": "3703:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4499,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3107,
                          "src": "3718:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3718:12:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4497,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "3692:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3692:39:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4502,
                  "nodeType": "ExpressionStatement",
                  "src": "3692:39:26"
                },
                {
                  "expression": {
                    "id": 4505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4503,
                      "name": "_autentica",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4396,
                      "src": "3790:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4504,
                      "name": "wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4485,
                      "src": "3803:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3790:19:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4506,
                  "nodeType": "ExpressionStatement",
                  "src": "3790:19:26"
                },
                {
                  "body": {
                    "id": 4524,
                    "nodeType": "Block",
                    "src": "3905:58:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 4519,
                                "name": "allowedTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4488,
                                "src": "3935:13:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 4521,
                              "indexExpression": {
                                "id": 4520,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4508,
                                "src": "3949:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3935:16:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4518,
                            "name": "addAllowedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4686,
                            "src": "3919:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 4522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3919:33:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4523,
                        "nodeType": "ExpressionStatement",
                        "src": "3919:33:26"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4511,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4508,
                      "src": "3874:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 4512,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4488,
                        "src": "3878:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 4513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3878:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3874:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4525,
                  "initializationExpression": {
                    "assignments": [
                      4508
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4508,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3867:1:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 4525,
                        "src": "3859:9:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4507,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3859:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 4510,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 4509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3871:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3859:13:26"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 4516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3900:3:26",
                      "subExpression": {
                        "id": 4515,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4508,
                        "src": "3900:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4517,
                    "nodeType": "ExpressionStatement",
                    "src": "3900:3:26"
                  },
                  "nodeType": "ForStatement",
                  "src": "3854:109:26"
                }
              ]
            },
            "documentation": {
              "id": 4483,
              "nodeType": "StructuredDocumentation",
              "src": "3279:191:26",
              "text": " The constructor sets the creator of the contract as the admin\n and operator of this smart contract, sets the wallet address for Autentica and sets the allowed tokens."
            },
            "id": 4527,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4485,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nameLocation": "3495:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4527,
                  "src": "3487:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3487:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4488,
                  "mutability": "mutable",
                  "name": "allowedTokens",
                  "nameLocation": "3520:13:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4527,
                  "src": "3503:30:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4486,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3503:7:26",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4487,
                    "nodeType": "ArrayTypeName",
                    "src": "3503:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3486:48:26"
            },
            "returnParameters": {
              "id": 4490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3535:0:26"
            },
            "scope": 5830,
            "src": "3475:494:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4535,
              "nodeType": "Block",
              "src": "4089:34:26",
              "statements": [
                {
                  "expression": {
                    "id": 4533,
                    "name": "_autentica",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4396,
                    "src": "4106:10:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4532,
                  "id": 4534,
                  "nodeType": "Return",
                  "src": "4099:17:26"
                }
              ]
            },
            "documentation": {
              "id": 4528,
              "nodeType": "StructuredDocumentation",
              "src": "3975:56:26",
              "text": " Returns the Autentica wallet address."
            },
            "functionSelector": "6aaa9057",
            "id": 4536,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "autentica",
            "nameLocation": "4045:9:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4054:2:26"
            },
            "returnParameters": {
              "id": 4532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4531,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4536,
                  "src": "4080:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4080:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4079:9:26"
            },
            "scope": 5830,
            "src": "4036:87:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4568,
              "nodeType": "Block",
              "src": "4327:411:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4546,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "4366:18:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4547,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3107,
                              "src": "4386:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4386:12:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4545,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "4358:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 4549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4358:41:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a204f6e6c792061646d696e732063616e206368616e67652074686973",
                        "id": 4550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4413:45:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f10fd82e80ac2b4c4e4d06d0116e45eeebc7221a9f074b47c415d6e7232ae44",
                          "typeString": "literal_string \"NFTMarketplace: Only admins can change this\""
                        },
                        "value": "NFTMarketplace: Only admins can change this"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f10fd82e80ac2b4c4e4d06d0116e45eeebc7221a9f074b47c415d6e7232ae44",
                          "typeString": "literal_string \"NFTMarketplace: Only admins can change this\""
                        }
                      ],
                      "id": 4544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4337:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4337:131:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4552,
                  "nodeType": "ExpressionStatement",
                  "src": "4337:131:26"
                },
                {
                  "assignments": [
                    4554
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4554,
                      "mutability": "mutable",
                      "name": "oldAutentica",
                      "nameLocation": "4534:12:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 4568,
                      "src": "4526:20:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4553,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4526:7:26",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4556,
                  "initialValue": {
                    "id": 4555,
                    "name": "_autentica",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4396,
                    "src": "4549:10:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4526:33:26"
                },
                {
                  "expression": {
                    "id": 4559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4557,
                      "name": "_autentica",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4396,
                      "src": "4600:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4558,
                      "name": "wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4539,
                      "src": "4613:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4600:19:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4560,
                  "nodeType": "ExpressionStatement",
                  "src": "4600:19:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4562,
                        "name": "oldAutentica",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4554,
                        "src": "4678:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4563,
                        "name": "_autentica",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4396,
                        "src": "4692:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4561,
                      "name": "ChangedAutentica",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4432,
                      "src": "4661:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 4564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4661:42:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4565,
                  "nodeType": "EmitStatement",
                  "src": "4656:47:26"
                },
                {
                  "expression": {
                    "id": 4566,
                    "name": "_autentica",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4396,
                    "src": "4721:10:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4543,
                  "id": 4567,
                  "nodeType": "Return",
                  "src": "4714:17:26"
                }
              ]
            },
            "documentation": {
              "id": 4537,
              "nodeType": "StructuredDocumentation",
              "src": "4129:128:26",
              "text": " @dev Sets the Autentica wallet address.\n Requirements:\n - the caller must be admin."
            },
            "functionSelector": "59d7a486",
            "id": 4569,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAutentica",
            "nameLocation": "4271:12:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4539,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nameLocation": "4292:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4569,
                  "src": "4284:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4284:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4283:16:26"
            },
            "returnParameters": {
              "id": 4543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4542,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4569,
                  "src": "4318:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4318:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4317:9:26"
            },
            "scope": 5830,
            "src": "4262:476:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4577,
              "nodeType": "Block",
              "src": "4868:32:26",
              "statements": [
                {
                  "expression": {
                    "id": 4575,
                    "name": "DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4389,
                    "src": "4885:8:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 4574,
                  "id": 4576,
                  "nodeType": "Return",
                  "src": "4878:15:26"
                }
              ]
            },
            "documentation": {
              "id": 4570,
              "nodeType": "StructuredDocumentation",
              "src": "4744:69:26",
              "text": " @dev Returns the number of decimals used for fees."
            },
            "functionSelector": "313ce567",
            "id": 4578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "4827:8:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4835:2:26"
            },
            "returnParameters": {
              "id": 4574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4573,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4578,
                  "src": "4861:5:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4572,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4861:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4860:7:26"
            },
            "scope": 5830,
            "src": "4818:82:26",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4587,
              "nodeType": "Block",
              "src": "5035:45:26",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 4584,
                      "name": "_allowedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4399,
                      "src": "5052:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 4585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "5052:21:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4583,
                  "id": 4586,
                  "nodeType": "Return",
                  "src": "5045:28:26"
                }
              ]
            },
            "documentation": {
              "id": 4579,
              "nodeType": "StructuredDocumentation",
              "src": "4906:61:26",
              "text": " @dev Returns the number of allowed tokens."
            },
            "functionSelector": "b4c43869",
            "id": 4588,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numberOfAllowedTokens",
            "nameLocation": "4981:21:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5002:2:26"
            },
            "returnParameters": {
              "id": 4583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4582,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4588,
                  "src": "5026:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4581,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5026:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5025:9:26"
            },
            "scope": 5830,
            "src": "4972:108:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4608,
              "nodeType": "Block",
              "src": "5305:168:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4597,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4591,
                          "src": "5336:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4598,
                            "name": "numberOfAllowedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4588,
                            "src": "5344:21:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 4599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5344:23:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5336:31:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a20496e646578206f7574206f6620626f756e6473",
                        "id": 4601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5381:37:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a2e833b13d92f08686bf1ad72901e53682aa14bea99689417a31257b3398720",
                          "typeString": "literal_string \"NFTMarketplace: Index out of bounds\""
                        },
                        "value": "NFTMarketplace: Index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a2e833b13d92f08686bf1ad72901e53682aa14bea99689417a31257b3398720",
                          "typeString": "literal_string \"NFTMarketplace: Index out of bounds\""
                        }
                      ],
                      "id": 4596,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5315:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5315:113:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4603,
                  "nodeType": "ExpressionStatement",
                  "src": "5315:113:26"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4604,
                      "name": "_allowedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4399,
                      "src": "5445:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 4606,
                    "indexExpression": {
                      "id": 4605,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4591,
                      "src": "5460:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5445:21:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4595,
                  "id": 4607,
                  "nodeType": "Return",
                  "src": "5438:28:26"
                }
              ]
            },
            "documentation": {
              "id": 4589,
              "nodeType": "StructuredDocumentation",
              "src": "5086:140:26",
              "text": " @dev Returns the address of the allowed token at the specified index.\n @param index The index of the allowed token."
            },
            "functionSelector": "6bc79a67",
            "id": 4609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowedTokenAtIndex",
            "nameLocation": "5240:19:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4591,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "5268:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4609,
                  "src": "5260:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5260:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5259:15:26"
            },
            "returnParameters": {
              "id": 4595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4594,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4609,
                  "src": "5296:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5296:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5295:9:26"
            },
            "scope": 5830,
            "src": "5231:242:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4641,
              "nodeType": "Block",
              "src": "5634:200:26",
              "statements": [
                {
                  "body": {
                    "id": 4637,
                    "nodeType": "Block",
                    "src": "5698:107:26",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 4628,
                              "name": "_allowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4399,
                              "src": "5716:14:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 4630,
                            "indexExpression": {
                              "id": 4629,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4618,
                              "src": "5731:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5716:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 4631,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4612,
                            "src": "5737:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5716:33:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4636,
                        "nodeType": "IfStatement",
                        "src": "5712:83:26",
                        "trueBody": {
                          "id": 4635,
                          "nodeType": "Block",
                          "src": "5751:44:26",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 4633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5776:4:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 4616,
                              "id": 4634,
                              "nodeType": "Return",
                              "src": "5769:11:26"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4621,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4618,
                      "src": "5664:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4622,
                        "name": "numberOfAllowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4588,
                        "src": "5668:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 4623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5668:23:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5664:27:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4638,
                  "initializationExpression": {
                    "assignments": [
                      4618
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4618,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5657:1:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 4638,
                        "src": "5649:9:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4617,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5649:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 4620,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 4619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5661:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5649:13:26"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 4626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5693:3:26",
                      "subExpression": {
                        "id": 4625,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4618,
                        "src": "5693:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4627,
                    "nodeType": "ExpressionStatement",
                    "src": "5693:3:26"
                  },
                  "nodeType": "ForStatement",
                  "src": "5644:161:26"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 4639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5822:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 4616,
                  "id": 4640,
                  "nodeType": "Return",
                  "src": "5815:12:26"
                }
              ]
            },
            "documentation": {
              "id": 4610,
              "nodeType": "StructuredDocumentation",
              "src": "5479:77:26",
              "text": " @dev Verifies if a token address has been allowed already."
            },
            "functionSelector": "f9eaee0d",
            "id": 4642,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTokenAllowed",
            "nameLocation": "5570:14:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4612,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "5593:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4642,
                  "src": "5585:20:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5585:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5584:22:26"
            },
            "returnParameters": {
              "id": 4616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4615,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4642,
                  "src": "5628:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4614,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5628:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5627:6:26"
            },
            "scope": 5830,
            "src": "5561:273:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4685,
              "nodeType": "Block",
              "src": "6101:677:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4650,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "6140:18:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4651,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3107,
                              "src": "6160:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6160:12:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4649,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "6132:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 4653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6132:41:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a204f6e6c792061646d696e732063616e2061646420616c6c6f77656420746f6b656e73",
                        "id": 4654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6187:52:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b753c4b03d4dd0510cd5df5e091e23a0360aa94654e3a2acf61424f3ca3ad485",
                          "typeString": "literal_string \"NFTMarketplace: Only admins can add allowed tokens\""
                        },
                        "value": "NFTMarketplace: Only admins can add allowed tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b753c4b03d4dd0510cd5df5e091e23a0360aa94654e3a2acf61424f3ca3ad485",
                          "typeString": "literal_string \"NFTMarketplace: Only admins can add allowed tokens\""
                        }
                      ],
                      "id": 4648,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6111:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6111:138:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4656,
                  "nodeType": "ExpressionStatement",
                  "src": "6111:138:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4658,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4645,
                          "src": "6328:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6352:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6344:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4659,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6344:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6344:10:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6328:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a20546f6b656e206164647265737320697320746865207a65726f2061646472657373",
                        "id": 4664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6368:51:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_047838e034479d979cd1cbaad729b6c197e347371857b0a9abb194247d90b575",
                          "typeString": "literal_string \"NFTMarketplace: Token address is the zero address\""
                        },
                        "value": "NFTMarketplace: Token address is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_047838e034479d979cd1cbaad729b6c197e347371857b0a9abb194247d90b575",
                          "typeString": "literal_string \"NFTMarketplace: Token address is the zero address\""
                        }
                      ],
                      "id": 4657,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6307:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6307:122:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4666,
                  "nodeType": "ExpressionStatement",
                  "src": "6307:122:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6518:29:26",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 4669,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4645,
                              "src": "6534:12:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4668,
                            "name": "isTokenAllowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4642,
                            "src": "6519:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 4670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6519:28:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a20546f6b656e206164647265737320697320616c726561647920616c6c6f776564",
                        "id": 4672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6561:50:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f098a9291f0a697ff57d1514eeeac79edade7dc88d74b3d00f20a8a2791889e1",
                          "typeString": "literal_string \"NFTMarketplace: Token address is already allowed\""
                        },
                        "value": "NFTMarketplace: Token address is already allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f098a9291f0a697ff57d1514eeeac79edade7dc88d74b3d00f20a8a2791889e1",
                          "typeString": "literal_string \"NFTMarketplace: Token address is already allowed\""
                        }
                      ],
                      "id": 4667,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6497:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6497:124:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4674,
                  "nodeType": "ExpressionStatement",
                  "src": "6497:124:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4678,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "6685:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4675,
                        "name": "_allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4399,
                        "src": "6665:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 4677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6665:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 4679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6665:33:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4680,
                  "nodeType": "ExpressionStatement",
                  "src": "6665:33:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4682,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "6758:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4681,
                      "name": "AllowedTokenAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4477,
                      "src": "6740:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6740:31:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4684,
                  "nodeType": "EmitStatement",
                  "src": "6735:36:26"
                }
              ]
            },
            "documentation": {
              "id": 4643,
              "nodeType": "StructuredDocumentation",
              "src": "5840:202:26",
              "text": " @dev Add a new allowed token to the contract.\n @param tokenAddress The address of the allowed token to add.\n Requirements:\n - the caller must be admin."
            },
            "functionSelector": "4178617f",
            "id": 4686,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAllowedToken",
            "nameLocation": "6056:15:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4645,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "6080:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4686,
                  "src": "6072:20:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6072:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6071:22:26"
            },
            "returnParameters": {
              "id": 4647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6101:0:26"
            },
            "scope": 5830,
            "src": "6047:731:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4747,
              "nodeType": "Block",
              "src": "7040:1038:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4694,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "7079:18:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4695,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3107,
                              "src": "7099:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7099:12:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4693,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "7071:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 4697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7071:41:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a204f6e6c792061646d696e732063616e2072656d6f766520616c6c6f77656420746f6b656e73",
                        "id": 4698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7126:55:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a02cebdba35a3aa5f0aad515eddc0c033fc9a42b21553cd1e1ddfdc81f2a0974",
                          "typeString": "literal_string \"NFTMarketplace: Only admins can remove allowed tokens\""
                        },
                        "value": "NFTMarketplace: Only admins can remove allowed tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a02cebdba35a3aa5f0aad515eddc0c033fc9a42b21553cd1e1ddfdc81f2a0974",
                          "typeString": "literal_string \"NFTMarketplace: Only admins can remove allowed tokens\""
                        }
                      ],
                      "id": 4692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7050:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7050:141:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4700,
                  "nodeType": "ExpressionStatement",
                  "src": "7050:141:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4702,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4689,
                          "src": "7262:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4703,
                            "name": "numberOfAllowedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4588,
                            "src": "7270:21:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 4704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7270:23:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7262:31:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a20496e646578206f7574206f6620626f756e6473",
                        "id": 4706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7307:37:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a2e833b13d92f08686bf1ad72901e53682aa14bea99689417a31257b3398720",
                          "typeString": "literal_string \"NFTMarketplace: Index out of bounds\""
                        },
                        "value": "NFTMarketplace: Index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a2e833b13d92f08686bf1ad72901e53682aa14bea99689417a31257b3398720",
                          "typeString": "literal_string \"NFTMarketplace: Index out of bounds\""
                        }
                      ],
                      "id": 4701,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7241:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7241:113:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4708,
                  "nodeType": "ExpressionStatement",
                  "src": "7241:113:26"
                },
                {
                  "assignments": [
                    4710
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4710,
                      "mutability": "mutable",
                      "name": "tokenAddress",
                      "nameLocation": "7420:12:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 4747,
                      "src": "7412:20:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4709,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7412:7:26",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4714,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4711,
                      "name": "_allowedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4399,
                      "src": "7435:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 4713,
                    "indexExpression": {
                      "id": 4712,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4689,
                      "src": "7450:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7435:21:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7412:44:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4715,
                        "name": "numberOfAllowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4588,
                        "src": "7588:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 4716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7588:23:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 4717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7615:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7588:28:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4741,
                    "nodeType": "Block",
                    "src": "7669:328:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 4734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4725,
                              "name": "_allowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4399,
                              "src": "7846:14:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 4727,
                            "indexExpression": {
                              "id": 4726,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4689,
                              "src": "7861:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7846:21:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 4728,
                              "name": "_allowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4399,
                              "src": "7870:14:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 4733,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 4729,
                                  "name": "numberOfAllowedTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4588,
                                  "src": "7885:21:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 4730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7885:23:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 4731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7911:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "7885:27:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7870:43:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7846:67:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4735,
                        "nodeType": "ExpressionStatement",
                        "src": "7846:67:26"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 4736,
                              "name": "_allowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4399,
                              "src": "7966:14:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 4738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "7966:18:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer)"
                            }
                          },
                          "id": 4739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7966:20:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4740,
                        "nodeType": "ExpressionStatement",
                        "src": "7966:20:26"
                      }
                    ]
                  },
                  "id": 4742,
                  "nodeType": "IfStatement",
                  "src": "7584:413:26",
                  "trueBody": {
                    "id": 4724,
                    "nodeType": "Block",
                    "src": "7618:45:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 4719,
                              "name": "_allowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4399,
                              "src": "7632:14:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 4721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "7632:18:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer)"
                            }
                          },
                          "id": 4722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7632:20:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4723,
                        "nodeType": "ExpressionStatement",
                        "src": "7632:20:26"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4744,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4710,
                        "src": "8058:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4743,
                      "name": "AllowedTokenRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4482,
                      "src": "8038:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8038:33:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4746,
                  "nodeType": "EmitStatement",
                  "src": "8033:38:26"
                }
              ]
            },
            "documentation": {
              "id": 4687,
              "nodeType": "StructuredDocumentation",
              "src": "6784:194:26",
              "text": " @dev Remove the allowed token at the specified index.\n @param index The index of the allowed token.\n Requirements:\n - the caller must be admin."
            },
            "functionSelector": "d0f4adca",
            "id": 4748,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAllowedTokenAtIndex",
            "nameLocation": "6992:25:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4689,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "7026:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4748,
                  "src": "7018:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7018:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7017:15:26"
            },
            "returnParameters": {
              "id": 4691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7040:0:26"
            },
            "scope": 5830,
            "src": "6983:1095:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4921,
              "nodeType": "Block",
              "src": "9257:1944:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4768,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9322:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "9322:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4770,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4755,
                          "src": "9335:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9322:18:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a204e6f7420656e6f75676820636f696e732073656e74",
                        "id": 4772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9342:39:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f49defd93e25dcb8aff7dea3aa14baa99cd91bc653cd2c30066318c6ccc17c16",
                          "typeString": "literal_string \"NFTMarketplace: Not enough coins sent\""
                        },
                        "value": "NFTMarketplace: Not enough coins sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f49defd93e25dcb8aff7dea3aa14baa99cd91bc653cd2c30066318c6ccc17c16",
                          "typeString": "literal_string \"NFTMarketplace: Not enough coins sent\""
                        }
                      ],
                      "id": 4767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9314:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9314:68:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4774,
                  "nodeType": "ExpressionStatement",
                  "src": "9314:68:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4776,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4751,
                        "src": "9452:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4777,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4753,
                        "src": "9476:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4778,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4755,
                        "src": "9497:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "307830",
                            "id": 4781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9524:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9516:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4779,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9516:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9516:12:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4783,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4757,
                        "src": "9542:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4784,
                        "name": "marketplaceFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4759,
                        "src": "9561:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4785,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4762,
                        "src": "9589:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Signature_$4425_calldata_ptr",
                          "typeString": "struct NFTMarketplace.Signature calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Signature_$4425_calldata_ptr",
                          "typeString": "struct NFTMarketplace.Signature calldata"
                        }
                      ],
                      "id": 4775,
                      "name": "canPerformTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5184,
                      "src": "9423:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_struct$_Signature_$4425_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,address,address,uint256,struct NFTMarketplace.Signature calldata) view returns (bool)"
                      }
                    },
                    "id": 4786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9423:185:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4787,
                  "nodeType": "ExpressionStatement",
                  "src": "9423:185:26"
                },
                {
                  "assignments": [
                    4790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4790,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "9630:3:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 4921,
                      "src": "9619:14:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                        "typeString": "struct NFTMarketplace.NFT"
                      },
                      "typeName": {
                        "id": 4789,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4788,
                          "name": "NFT",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4406,
                          "src": "9619:3:26"
                        },
                        "referencedDeclaration": 4406,
                        "src": "9619:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$4406_storage_ptr",
                          "typeString": "struct NFTMarketplace.NFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4795,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4792,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4751,
                        "src": "9648:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4793,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4753,
                        "src": "9660:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4791,
                      "name": "_nftDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5698,
                      "src": "9636:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_struct$_NFT_$4406_memory_ptr_$",
                        "typeString": "function (address,uint256) view returns (struct NFTMarketplace.NFT memory)"
                      }
                    },
                    "id": 4794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9636:32:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                      "typeString": "struct NFTMarketplace.NFT memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9619:49:26"
                },
                {
                  "assignments": [
                    4798
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4798,
                      "mutability": "mutable",
                      "name": "percentages",
                      "nameLocation": "9734:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 4921,
                      "src": "9715:30:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Percentages_$4411_memory_ptr",
                        "typeString": "struct NFTMarketplace.Percentages"
                      },
                      "typeName": {
                        "id": 4797,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4796,
                          "name": "Percentages",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4411,
                          "src": "9715:11:26"
                        },
                        "referencedDeclaration": 4411,
                        "src": "9715:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Percentages_$4411_storage_ptr",
                          "typeString": "struct NFTMarketplace.Percentages"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4811,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4800,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4790,
                        "src": "9781:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                          "typeString": "struct NFTMarketplace.NFT memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4802,
                            "name": "collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4751,
                            "src": "9812:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4803,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4753,
                            "src": "9824:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4801,
                          "name": "getRoyaltyFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5251,
                          "src": "9798:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 4804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9798:34:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4806,
                            "name": "collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4751,
                            "src": "9861:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4807,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4753,
                            "src": "9873:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4805,
                          "name": "getInvestorFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5292,
                          "src": "9846:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 4808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9846:35:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4809,
                        "name": "marketplaceFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4759,
                        "src": "9895:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                          "typeString": "struct NFTMarketplace.NFT memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4799,
                      "name": "_percentagesDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5829,
                      "src": "9748:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_NFT_$4406_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_Percentages_$4411_memory_ptr_$",
                        "typeString": "function (struct NFTMarketplace.NFT memory,uint256,uint256,uint256) pure returns (struct NFTMarketplace.Percentages memory)"
                      }
                    },
                    "id": 4810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9748:171:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Percentages_$4411_memory_ptr",
                      "typeString": "struct NFTMarketplace.Percentages memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9715:204:26"
                },
                {
                  "assignments": [
                    4814
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4814,
                      "mutability": "mutable",
                      "name": "proceeds",
                      "nameLocation": "9975:8:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 4921,
                      "src": "9959:24:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                        "typeString": "struct NFTMarketplace.Proceeds"
                      },
                      "typeName": {
                        "id": 4813,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4812,
                          "name": "Proceeds",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4418,
                          "src": "9959:8:26"
                        },
                        "referencedDeclaration": 4418,
                        "src": "9959:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proceeds_$4418_storage_ptr",
                          "typeString": "struct NFTMarketplace.Proceeds"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4831,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 4817,
                              "name": "percentages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4798,
                              "src": "10043:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Percentages_$4411_memory_ptr",
                                "typeString": "struct NFTMarketplace.Percentages memory"
                              }
                            },
                            "id": 4818,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "creator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4408,
                            "src": "10043:19:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4819,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4755,
                            "src": "10064:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4816,
                          "name": "_calculateProceedsForFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5516,
                          "src": "10018:24:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 4820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10018:52:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 4822,
                              "name": "percentages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4798,
                              "src": "10119:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Percentages_$4411_memory_ptr",
                                "typeString": "struct NFTMarketplace.Percentages memory"
                              }
                            },
                            "id": 4823,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "investor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4410,
                            "src": "10119:20:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4824,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4755,
                            "src": "10141:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4821,
                          "name": "_calculateProceedsForFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5516,
                          "src": "10094:24:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 4825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10094:53:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4827,
                            "name": "marketplaceFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4759,
                            "src": "10199:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4828,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4755,
                            "src": "10215:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4826,
                          "name": "_calculateProceedsForFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5516,
                          "src": "10174:24:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 4829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10174:47:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4815,
                      "name": "Proceeds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4418,
                      "src": "9986:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Proceeds_$4418_storage_ptr_$",
                        "typeString": "type(struct NFTMarketplace.Proceeds storage pointer)"
                      }
                    },
                    "id": 4830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "creator",
                      "investor",
                      "marketplace"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "9986:246:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                      "typeString": "struct NFTMarketplace.Proceeds memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9959:273:26"
                },
                {
                  "assignments": [
                    4833
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4833,
                      "mutability": "mutable",
                      "name": "ownerProceeds",
                      "nameLocation": "10296:13:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 4921,
                      "src": "10288:21:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4832,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10288:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4838,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4835,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4755,
                        "src": "10349:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4836,
                        "name": "proceeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4814,
                        "src": "10368:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                          "typeString": "struct NFTMarketplace.Proceeds memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                          "typeString": "struct NFTMarketplace.Proceeds memory"
                        }
                      ],
                      "id": 4834,
                      "name": "_calculateOwnerProceeds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5539,
                      "src": "10312:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_struct$_Proceeds_$4418_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,struct NFTMarketplace.Proceeds memory) pure returns (uint256)"
                      }
                    },
                    "id": 4837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10312:74:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10288:98:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 4842,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4790,
                              "src": "10438:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                                "typeString": "struct NFTMarketplace.NFT memory"
                              }
                            },
                            "id": 4843,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4401,
                            "src": "10438:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10430:8:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 4840,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10430:8:26",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10430:18:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 4845,
                        "name": "ownerProceeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4833,
                        "src": "10450:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4839,
                      "name": "_sendViaCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5382,
                      "src": "10417:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 4846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10417:47:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4847,
                  "nodeType": "ExpressionStatement",
                  "src": "10417:47:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4848,
                        "name": "proceeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4814,
                        "src": "10478:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                          "typeString": "struct NFTMarketplace.Proceeds memory"
                        }
                      },
                      "id": 4849,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "investor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4415,
                      "src": "10478:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10498:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10478:21:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4863,
                  "nodeType": "IfStatement",
                  "src": "10474:106:26",
                  "trueBody": {
                    "id": 4862,
                    "nodeType": "Block",
                    "src": "10501:79:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 4855,
                                    "name": "nft",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4790,
                                    "src": "10536:3:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                                      "typeString": "struct NFTMarketplace.NFT memory"
                                    }
                                  },
                                  "id": 4856,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "investor",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4405,
                                  "src": "10536:12:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10528:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 4853,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10528:8:26",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10528:21:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "id": 4858,
                                "name": "proceeds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4814,
                                "src": "10551:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                                  "typeString": "struct NFTMarketplace.Proceeds memory"
                                }
                              },
                              "id": 4859,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "investor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4415,
                              "src": "10551:17:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4852,
                            "name": "_sendViaCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5382,
                            "src": "10515:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                              "typeString": "function (address payable,uint256)"
                            }
                          },
                          "id": 4860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10515:54:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4861,
                        "nodeType": "ExpressionStatement",
                        "src": "10515:54:26"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4864,
                        "name": "proceeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4814,
                        "src": "10593:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                          "typeString": "struct NFTMarketplace.Proceeds memory"
                        }
                      },
                      "id": 4865,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "creator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4413,
                      "src": "10593:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10612:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10593:20:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4879,
                  "nodeType": "IfStatement",
                  "src": "10589:103:26",
                  "trueBody": {
                    "id": 4878,
                    "nodeType": "Block",
                    "src": "10615:77:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 4871,
                                    "name": "nft",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4790,
                                    "src": "10650:3:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                                      "typeString": "struct NFTMarketplace.NFT memory"
                                    }
                                  },
                                  "id": 4872,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "creator",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4403,
                                  "src": "10650:11:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4870,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10642:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 4869,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10642:8:26",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10642:20:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "id": 4874,
                                "name": "proceeds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4814,
                                "src": "10664:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                                  "typeString": "struct NFTMarketplace.Proceeds memory"
                                }
                              },
                              "id": 4875,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "creator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4413,
                              "src": "10664:16:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4868,
                            "name": "_sendViaCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5382,
                            "src": "10629:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                              "typeString": "function (address payable,uint256)"
                            }
                          },
                          "id": 4876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10629:52:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4877,
                        "nodeType": "ExpressionStatement",
                        "src": "10629:52:26"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4880,
                        "name": "proceeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4814,
                        "src": "10705:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                          "typeString": "struct NFTMarketplace.Proceeds memory"
                        }
                      },
                      "id": 4881,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketplace",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4417,
                      "src": "10705:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10728:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10705:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4894,
                  "nodeType": "IfStatement",
                  "src": "10701:110:26",
                  "trueBody": {
                    "id": 4893,
                    "nodeType": "Block",
                    "src": "10731:80:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 4887,
                                  "name": "_autentica",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4396,
                                  "src": "10766:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10758:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 4885,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10758:8:26",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10758:19:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "id": 4889,
                                "name": "proceeds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4814,
                                "src": "10779:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                                  "typeString": "struct NFTMarketplace.Proceeds memory"
                                }
                              },
                              "id": 4890,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "marketplace",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4417,
                              "src": "10779:20:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4884,
                            "name": "_sendViaCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5382,
                            "src": "10745:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                              "typeString": "function (address payable,uint256)"
                            }
                          },
                          "id": 4891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10745:55:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4892,
                        "nodeType": "ExpressionStatement",
                        "src": "10745:55:26"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4899,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4790,
                          "src": "10894:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                            "typeString": "struct NFTMarketplace.NFT memory"
                          }
                        },
                        "id": 4900,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4401,
                        "src": "10894:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4901,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3107,
                          "src": "10905:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10905:12:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4903,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4753,
                        "src": "10919:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4896,
                            "name": "collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4751,
                            "src": "10865:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4895,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2231,
                          "src": "10857:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$2231_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 4897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10857:19:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$2231",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 4898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2186,
                      "src": "10857:36:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 4904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10857:70:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4905,
                  "nodeType": "ExpressionStatement",
                  "src": "10857:70:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4907,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4751,
                        "src": "10997:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4908,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4753,
                        "src": "11021:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4909,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4790,
                          "src": "11042:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                            "typeString": "struct NFTMarketplace.NFT memory"
                          }
                        },
                        "id": 4910,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4401,
                        "src": "11042:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4911,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3107,
                          "src": "11065:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11065:12:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4913,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4755,
                        "src": "11091:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4914,
                        "name": "ownerProceeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4833,
                        "src": "11110:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4915,
                          "name": "proceeds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4814,
                          "src": "11137:8:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                            "typeString": "struct NFTMarketplace.Proceeds memory"
                          }
                        },
                        "id": 4916,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "creator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4413,
                        "src": "11137:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4917,
                          "name": "proceeds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4814,
                          "src": "11167:8:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                            "typeString": "struct NFTMarketplace.Proceeds memory"
                          }
                        },
                        "id": 4918,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "investor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4415,
                        "src": "11167:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4906,
                      "name": "TradedForCoins",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4451,
                      "src": "10969:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,address,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 4919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10969:225:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4920,
                  "nodeType": "EmitStatement",
                  "src": "10964:230:26"
                }
              ]
            },
            "documentation": {
              "id": 4749,
              "nodeType": "StructuredDocumentation",
              "src": "8084:940:26",
              "text": " @notice Trades an NFT for a given amount of coins (the native cryptocurrency of the platform, i.e.: ETH).\n @param collection The ERC-721 smart contract.\n @param tokenId The unique identifier of the ERC-721 token within the `collection` smart contract.\n @param price The price of the NFT in coins.\n @param buyer Buyer address.\n @param marketplaceFee Marketplace fee.\n @param signature ECDSA signature.\n @dev Requirements\n - The `collection` smart contract must be an ERC-721 smart contract.\n - The owner of the NFT identified by `tokenId` within the `collection` smart contract must have approved\n   this smart contract to manage its NFTs.\n - The `price` and `msg.value` must be equal.\n - The sum of all the fees cannot be greater than 100%.\n - The ECDSA signature must be signed by someone with the admin or operator role."
            },
            "functionSelector": "862d32e2",
            "id": 4922,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4765,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4764,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 558,
                  "src": "9244:12:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "9244:12:26"
              }
            ],
            "name": "tradeForCoins",
            "nameLocation": "9038:13:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4751,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "9069:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4922,
                  "src": "9061:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9061:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4753,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9097:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4922,
                  "src": "9089:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9089:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4755,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "9122:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4922,
                  "src": "9114:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9114:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4757,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "9145:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4922,
                  "src": "9137:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9137:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4759,
                  "mutability": "mutable",
                  "name": "marketplaceFee",
                  "nameLocation": "9168:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4922,
                  "src": "9160:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4758,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9160:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4762,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "9211:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4922,
                  "src": "9192:28:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Signature_$4425_calldata_ptr",
                    "typeString": "struct NFTMarketplace.Signature"
                  },
                  "typeName": {
                    "id": 4761,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4760,
                      "name": "Signature",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4425,
                      "src": "9192:9:26"
                    },
                    "referencedDeclaration": 4425,
                    "src": "9192:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Signature_$4425_storage_ptr",
                      "typeString": "struct NFTMarketplace.Signature"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9051:175:26"
            },
            "returnParameters": {
              "id": 4766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9257:0:26"
            },
            "scope": 5830,
            "src": "9029:2172:26",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5098,
              "nodeType": "Block",
              "src": "12371:2157:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4945,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4931,
                            "src": "12445:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4944,
                          "name": "isTokenAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4642,
                          "src": "12430:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 4946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12430:21:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a20546f6b656e206e6f7420616c6c6f776564",
                        "id": 4947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12453:35:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_792b9729a68843bb2c7d2eb5892b6655642f5e882d2cd54d202538a750b246be",
                          "typeString": "literal_string \"NFTMarketplace: Token not allowed\""
                        },
                        "value": "NFTMarketplace: Token not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_792b9729a68843bb2c7d2eb5892b6655642f5e882d2cd54d202538a750b246be",
                          "typeString": "literal_string \"NFTMarketplace: Token not allowed\""
                        }
                      ],
                      "id": 4943,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12422:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12422:67:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4949,
                  "nodeType": "ExpressionStatement",
                  "src": "12422:67:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4951,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4925,
                        "src": "12559:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4952,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4927,
                        "src": "12583:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4953,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4929,
                        "src": "12604:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4954,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4931,
                        "src": "12623:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4955,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4933,
                        "src": "12642:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4956,
                        "name": "marketplaceFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4935,
                        "src": "12661:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4957,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4938,
                        "src": "12689:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Signature_$4425_calldata_ptr",
                          "typeString": "struct NFTMarketplace.Signature calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Signature_$4425_calldata_ptr",
                          "typeString": "struct NFTMarketplace.Signature calldata"
                        }
                      ],
                      "id": 4950,
                      "name": "canPerformTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5184,
                      "src": "12530:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_struct$_Signature_$4425_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,address,address,uint256,struct NFTMarketplace.Signature calldata) view returns (bool)"
                      }
                    },
                    "id": 4958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12530:178:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4959,
                  "nodeType": "ExpressionStatement",
                  "src": "12530:178:26"
                },
                {
                  "assignments": [
                    4962
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4962,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "12766:3:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5098,
                      "src": "12755:14:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                        "typeString": "struct NFTMarketplace.NFT"
                      },
                      "typeName": {
                        "id": 4961,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4960,
                          "name": "NFT",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4406,
                          "src": "12755:3:26"
                        },
                        "referencedDeclaration": 4406,
                        "src": "12755:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$4406_storage_ptr",
                          "typeString": "struct NFTMarketplace.NFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4967,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4964,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4925,
                        "src": "12784:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4965,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4927,
                        "src": "12796:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4963,
                      "name": "_nftDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5698,
                      "src": "12772:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_struct$_NFT_$4406_memory_ptr_$",
                        "typeString": "function (address,uint256) view returns (struct NFTMarketplace.NFT memory)"
                      }
                    },
                    "id": 4966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12772:32:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                      "typeString": "struct NFTMarketplace.NFT memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12755:49:26"
                },
                {
                  "assignments": [
                    4970
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4970,
                      "mutability": "mutable",
                      "name": "percentages",
                      "nameLocation": "12870:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5098,
                      "src": "12851:30:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Percentages_$4411_memory_ptr",
                        "typeString": "struct NFTMarketplace.Percentages"
                      },
                      "typeName": {
                        "id": 4969,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4968,
                          "name": "Percentages",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4411,
                          "src": "12851:11:26"
                        },
                        "referencedDeclaration": 4411,
                        "src": "12851:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Percentages_$4411_storage_ptr",
                          "typeString": "struct NFTMarketplace.Percentages"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4983,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4972,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4962,
                        "src": "12917:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                          "typeString": "struct NFTMarketplace.NFT memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4974,
                            "name": "collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4925,
                            "src": "12948:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4975,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4927,
                            "src": "12960:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4973,
                          "name": "getRoyaltyFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5251,
                          "src": "12934:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 4976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12934:34:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4978,
                            "name": "collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4925,
                            "src": "12997:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4979,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4927,
                            "src": "13009:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4977,
                          "name": "getInvestorFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5292,
                          "src": "12982:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 4980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12982:35:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4981,
                        "name": "marketplaceFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4935,
                        "src": "13031:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                          "typeString": "struct NFTMarketplace.NFT memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4971,
                      "name": "_percentagesDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5829,
                      "src": "12884:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_NFT_$4406_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_Percentages_$4411_memory_ptr_$",
                        "typeString": "function (struct NFTMarketplace.NFT memory,uint256,uint256,uint256) pure returns (struct NFTMarketplace.Percentages memory)"
                      }
                    },
                    "id": 4982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12884:171:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Percentages_$4411_memory_ptr",
                      "typeString": "struct NFTMarketplace.Percentages memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12851:204:26"
                },
                {
                  "assignments": [
                    4986
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4986,
                      "mutability": "mutable",
                      "name": "proceeds",
                      "nameLocation": "13111:8:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5098,
                      "src": "13095:24:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                        "typeString": "struct NFTMarketplace.Proceeds"
                      },
                      "typeName": {
                        "id": 4985,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4984,
                          "name": "Proceeds",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4418,
                          "src": "13095:8:26"
                        },
                        "referencedDeclaration": 4418,
                        "src": "13095:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proceeds_$4418_storage_ptr",
                          "typeString": "struct NFTMarketplace.Proceeds"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5003,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 4989,
                              "name": "percentages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4970,
                              "src": "13179:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Percentages_$4411_memory_ptr",
                                "typeString": "struct NFTMarketplace.Percentages memory"
                              }
                            },
                            "id": 4990,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "creator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4408,
                            "src": "13179:19:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4991,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4929,
                            "src": "13200:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4988,
                          "name": "_calculateProceedsForFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5516,
                          "src": "13154:24:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 4992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13154:52:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 4994,
                              "name": "percentages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4970,
                              "src": "13255:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Percentages_$4411_memory_ptr",
                                "typeString": "struct NFTMarketplace.Percentages memory"
                              }
                            },
                            "id": 4995,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "investor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4410,
                            "src": "13255:20:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4996,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4929,
                            "src": "13277:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4993,
                          "name": "_calculateProceedsForFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5516,
                          "src": "13230:24:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 4997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13230:53:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4999,
                            "name": "marketplaceFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4935,
                            "src": "13335:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 5000,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4929,
                            "src": "13351:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4998,
                          "name": "_calculateProceedsForFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5516,
                          "src": "13310:24:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 5001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13310:47:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4987,
                      "name": "Proceeds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4418,
                      "src": "13122:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Proceeds_$4418_storage_ptr_$",
                        "typeString": "type(struct NFTMarketplace.Proceeds storage pointer)"
                      }
                    },
                    "id": 5002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "creator",
                      "investor",
                      "marketplace"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "13122:246:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                      "typeString": "struct NFTMarketplace.Proceeds memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13095:273:26"
                },
                {
                  "assignments": [
                    5005
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5005,
                      "mutability": "mutable",
                      "name": "ownerProceeds",
                      "nameLocation": "13432:13:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5098,
                      "src": "13424:21:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5004,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13424:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5010,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5007,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4929,
                        "src": "13485:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5008,
                        "name": "proceeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4986,
                        "src": "13504:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                          "typeString": "struct NFTMarketplace.Proceeds memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                          "typeString": "struct NFTMarketplace.Proceeds memory"
                        }
                      ],
                      "id": 5006,
                      "name": "_calculateOwnerProceeds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5539,
                      "src": "13448:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_struct$_Proceeds_$4418_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,struct NFTMarketplace.Proceeds memory) pure returns (uint256)"
                      }
                    },
                    "id": 5009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13448:74:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13424:98:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5015,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4933,
                        "src": "13580:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5016,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4962,
                          "src": "13587:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                            "typeString": "struct NFTMarketplace.NFT memory"
                          }
                        },
                        "id": 5017,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4401,
                        "src": "13587:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5018,
                        "name": "ownerProceeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5005,
                        "src": "13598:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 5012,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4931,
                            "src": "13560:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5011,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1223,
                          "src": "13553:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1223_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 5013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13553:13:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1223",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1222,
                      "src": "13553:26:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13553:59:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5020,
                  "nodeType": "ExpressionStatement",
                  "src": "13553:59:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5021,
                        "name": "proceeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4986,
                        "src": "13626:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                          "typeString": "struct NFTMarketplace.Proceeds memory"
                        }
                      },
                      "id": 5022,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "investor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4415,
                      "src": "13626:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13646:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13626:21:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5037,
                  "nodeType": "IfStatement",
                  "src": "13622:180:26",
                  "trueBody": {
                    "id": 5036,
                    "nodeType": "Block",
                    "src": "13649:153:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5029,
                              "name": "buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4933,
                              "src": "13707:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 5030,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4962,
                                "src": "13730:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                                  "typeString": "struct NFTMarketplace.NFT memory"
                                }
                              },
                              "id": 5031,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "investor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4405,
                              "src": "13730:12:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 5032,
                                "name": "proceeds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4986,
                                "src": "13760:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                                  "typeString": "struct NFTMarketplace.Proceeds memory"
                                }
                              },
                              "id": 5033,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "investor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4415,
                              "src": "13760:17:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5026,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4931,
                                  "src": "13670:5:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5025,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1223,
                                "src": "13663:6:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1223_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 5027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13663:13:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1223",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1222,
                            "src": "13663:26:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 5034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13663:128:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5035,
                        "nodeType": "ExpressionStatement",
                        "src": "13663:128:26"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5038,
                        "name": "proceeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4986,
                        "src": "13815:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                          "typeString": "struct NFTMarketplace.Proceeds memory"
                        }
                      },
                      "id": 5039,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "creator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4413,
                      "src": "13815:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13834:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13815:20:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5054,
                  "nodeType": "IfStatement",
                  "src": "13811:115:26",
                  "trueBody": {
                    "id": 5053,
                    "nodeType": "Block",
                    "src": "13837:89:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5046,
                              "name": "buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4933,
                              "src": "13878:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 5047,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4962,
                                "src": "13885:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                                  "typeString": "struct NFTMarketplace.NFT memory"
                                }
                              },
                              "id": 5048,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "creator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4403,
                              "src": "13885:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 5049,
                                "name": "proceeds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4986,
                                "src": "13898:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                                  "typeString": "struct NFTMarketplace.Proceeds memory"
                                }
                              },
                              "id": 5050,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "creator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4413,
                              "src": "13898:16:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5043,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4931,
                                  "src": "13858:5:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5042,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1223,
                                "src": "13851:6:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1223_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 5044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13851:13:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1223",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1222,
                            "src": "13851:26:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 5051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13851:64:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5052,
                        "nodeType": "ExpressionStatement",
                        "src": "13851:64:26"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5055,
                        "name": "proceeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4986,
                        "src": "13939:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                          "typeString": "struct NFTMarketplace.Proceeds memory"
                        }
                      },
                      "id": 5056,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketplace",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4417,
                      "src": "13939:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13962:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13939:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5070,
                  "nodeType": "IfStatement",
                  "src": "13935:184:26",
                  "trueBody": {
                    "id": 5069,
                    "nodeType": "Block",
                    "src": "13965:154:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5063,
                              "name": "buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4933,
                              "src": "14023:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5064,
                              "name": "_autentica",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4396,
                              "src": "14046:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 5065,
                                "name": "proceeds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4986,
                                "src": "14074:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                                  "typeString": "struct NFTMarketplace.Proceeds memory"
                                }
                              },
                              "id": 5066,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "marketplace",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4417,
                              "src": "14074:20:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5060,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4931,
                                  "src": "13986:5:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5059,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1223,
                                "src": "13979:6:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1223_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 5061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13979:13:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1223",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1222,
                            "src": "13979:26:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 5067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13979:129:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5068,
                        "nodeType": "ExpressionStatement",
                        "src": "13979:129:26"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5075,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4962,
                          "src": "14201:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                            "typeString": "struct NFTMarketplace.NFT memory"
                          }
                        },
                        "id": 5076,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4401,
                        "src": "14201:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5077,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3107,
                          "src": "14212:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 5078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14212:12:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5079,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4927,
                        "src": "14226:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 5072,
                            "name": "collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4925,
                            "src": "14172:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5071,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2231,
                          "src": "14164:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$2231_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 5073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14164:19:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$2231",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 5074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2186,
                      "src": "14164:36:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 5080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14164:70:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5081,
                  "nodeType": "ExpressionStatement",
                  "src": "14164:70:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5083,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4925,
                        "src": "14305:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5084,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4927,
                        "src": "14329:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 5085,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4962,
                          "src": "14350:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                            "typeString": "struct NFTMarketplace.NFT memory"
                          }
                        },
                        "id": 5086,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4401,
                        "src": "14350:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5087,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3107,
                          "src": "14373:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 5088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14373:12:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5089,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4931,
                        "src": "14399:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5090,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4929,
                        "src": "14418:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5091,
                        "name": "ownerProceeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5005,
                        "src": "14437:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 5092,
                          "name": "proceeds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4986,
                          "src": "14464:8:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                            "typeString": "struct NFTMarketplace.Proceeds memory"
                          }
                        },
                        "id": 5093,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "creator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4413,
                        "src": "14464:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 5094,
                          "name": "proceeds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4986,
                          "src": "14494:8:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                            "typeString": "struct NFTMarketplace.Proceeds memory"
                          }
                        },
                        "id": 5095,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "investor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4415,
                        "src": "14494:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5082,
                      "name": "TradedForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4472,
                      "src": "14276:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,address,address,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 5096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14276:245:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5097,
                  "nodeType": "EmitStatement",
                  "src": "14271:250:26"
                }
              ]
            },
            "documentation": {
              "id": 4923,
              "nodeType": "StructuredDocumentation",
              "src": "11207:915:26",
              "text": " @notice Trades an NFT for a given amount of ERC-20 tokens (i.e.: AUT/USDT/USDC).\n @param collection The ERC-721 smart contract.\n @param tokenId The unique identifier of the ERC-721 token within the `collection` smart contract.\n @param price The price of the NFT in `token` tokens.\n @param token The ERC-20 smart contract.\n @param buyer Buyer address.\n @param marketplaceFee Marketplace fee.\n @param signature ECDSA signature.\n Requirements:\n - The `collection` smart contract must be an ERC-721 smart contract.\n - The owner of the NFT identified by `tokenId` within the `collection` smart contract must have approved\n   this smart contract to manage its NFTs.\n - The sum of all the fees cannot be greater than 100%.\n - The ECDSA signature must be signed by someone with the admin or operator role."
            },
            "functionSelector": "42f7260e",
            "id": 5099,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4941,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4940,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 558,
                  "src": "12358:12:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "12358:12:26"
              }
            ],
            "name": "tradeForTokens",
            "nameLocation": "12136:14:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4925,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "12168:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5099,
                  "src": "12160:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4924,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12160:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4927,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12196:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5099,
                  "src": "12188:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12188:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4929,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "12221:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5099,
                  "src": "12213:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4928,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12213:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4931,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "12244:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5099,
                  "src": "12236:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12236:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4933,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "12267:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5099,
                  "src": "12259:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12259:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4935,
                  "mutability": "mutable",
                  "name": "marketplaceFee",
                  "nameLocation": "12290:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5099,
                  "src": "12282:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12282:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4938,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "12333:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5099,
                  "src": "12314:28:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Signature_$4425_calldata_ptr",
                    "typeString": "struct NFTMarketplace.Signature"
                  },
                  "typeName": {
                    "id": 4937,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4936,
                      "name": "Signature",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4425,
                      "src": "12314:9:26"
                    },
                    "referencedDeclaration": 4425,
                    "src": "12314:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Signature_$4425_storage_ptr",
                      "typeString": "struct NFTMarketplace.Signature"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12150:198:26"
            },
            "returnParameters": {
              "id": 4942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12371:0:26"
            },
            "scope": 5830,
            "src": "12127:2401:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5183,
              "nodeType": "Block",
              "src": "15263:1286:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "15324:9:26",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 5121,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 463,
                            "src": "15325:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 5122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15325:8:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a20436f6e747261637420697320706175736564",
                        "id": 5124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15335:36:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8dcc686c4a6a1a4ebaba9bc6342fea45046a35b0d8e62790c842acb60fd5499",
                          "typeString": "literal_string \"NFTMarketplace: Contract is paused\""
                        },
                        "value": "NFTMarketplace: Contract is paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8dcc686c4a6a1a4ebaba9bc6342fea45046a35b0d8e62790c842acb60fd5499",
                          "typeString": "literal_string \"NFTMarketplace: Contract is paused\""
                        }
                      ],
                      "id": 5120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15316:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15316:56:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5126,
                  "nodeType": "ExpressionStatement",
                  "src": "15316:56:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5128,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5102,
                        "src": "15463:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5127,
                      "name": "_validateERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5558,
                      "src": "15447:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 5129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15447:27:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5130,
                  "nodeType": "ExpressionStatement",
                  "src": "15447:27:26"
                },
                {
                  "assignments": [
                    5133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5133,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "15532:3:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5183,
                      "src": "15521:14:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                        "typeString": "struct NFTMarketplace.NFT"
                      },
                      "typeName": {
                        "id": 5132,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5131,
                          "name": "NFT",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4406,
                          "src": "15521:3:26"
                        },
                        "referencedDeclaration": 4406,
                        "src": "15521:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$4406_storage_ptr",
                          "typeString": "struct NFTMarketplace.NFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5138,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5135,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5102,
                        "src": "15550:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5136,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5104,
                        "src": "15562:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5134,
                      "name": "_nftDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5698,
                      "src": "15538:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_struct$_NFT_$4406_memory_ptr_$",
                        "typeString": "function (address,uint256) view returns (struct NFTMarketplace.NFT memory)"
                      }
                    },
                    "id": 5137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15538:32:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                      "typeString": "struct NFTMarketplace.NFT memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15521:49:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5140,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5102,
                        "src": "15635:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5141,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5104,
                        "src": "15647:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5142,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5133,
                        "src": "15656:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                          "typeString": "struct NFTMarketplace.NFT memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                          "typeString": "struct NFTMarketplace.NFT memory"
                        }
                      ],
                      "id": 5139,
                      "name": "_validateNFTApproval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5582,
                      "src": "15614:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_struct$_NFT_$4406_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct NFTMarketplace.NFT memory) view"
                      }
                    },
                    "id": 5143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15614:46:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5144,
                  "nodeType": "ExpressionStatement",
                  "src": "15614:46:26"
                },
                {
                  "assignments": [
                    5146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5146,
                      "mutability": "mutable",
                      "name": "royaltyFee",
                      "nameLocation": "15695:10:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5183,
                      "src": "15687:18:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5145,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15687:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5151,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5148,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5102,
                        "src": "15722:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5149,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5104,
                        "src": "15734:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5147,
                      "name": "getRoyaltyFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5251,
                      "src": "15708:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 5150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15708:34:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15687:55:26"
                },
                {
                  "assignments": [
                    5153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5153,
                      "mutability": "mutable",
                      "name": "investorFee",
                      "nameLocation": "15760:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5183,
                      "src": "15752:19:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5152,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15752:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5158,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5155,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5102,
                        "src": "15789:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5156,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5104,
                        "src": "15801:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5154,
                      "name": "getInvestorFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5292,
                      "src": "15774:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 5157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15774:35:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15752:57:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5160,
                        "name": "royaltyFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5146,
                        "src": "16061:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5161,
                        "name": "marketplaceFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5112,
                        "src": "16073:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5159,
                      "name": "_validateFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5604,
                      "src": "16047:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 5162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16047:41:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5163,
                  "nodeType": "ExpressionStatement",
                  "src": "16047:41:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5166,
                            "name": "collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5102,
                            "src": "16198:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5167,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5104,
                            "src": "16226:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 5168,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5133,
                              "src": "16251:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                                "typeString": "struct NFTMarketplace.NFT memory"
                              }
                            },
                            "id": 5169,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4401,
                            "src": "16251:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5170,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5110,
                            "src": "16278:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5171,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5106,
                            "src": "16301:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 5172,
                            "name": "currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5108,
                            "src": "16324:8:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5173,
                            "name": "royaltyFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5146,
                            "src": "16350:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 5174,
                            "name": "investorFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5153,
                            "src": "16378:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 5175,
                            "name": "marketplaceFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5112,
                            "src": "16407:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 5176,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5115,
                            "src": "16439:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Signature_$4425_calldata_ptr",
                              "typeString": "struct NFTMarketplace.Signature calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_struct$_Signature_$4425_calldata_ptr",
                              "typeString": "struct NFTMarketplace.Signature calldata"
                            }
                          ],
                          "id": 5165,
                          "name": "_validateTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5459,
                          "src": "16166:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_Signature_$4425_calldata_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,uint256,address,address,uint256,address,uint256,uint256,uint256,struct NFTMarketplace.Signature calldata) view returns (bool)"
                          }
                        },
                        "id": 5177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16166:296:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a20496e76616c6964207369676e6174757265",
                        "id": 5178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16476:35:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3db3e0e3ece1ec4c6ecd819f5497ad06ad7e6f1407308a89a68b16df3b3d74b4",
                          "typeString": "literal_string \"NFTMarketplace: Invalid signature\""
                        },
                        "value": "NFTMarketplace: Invalid signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3db3e0e3ece1ec4c6ecd819f5497ad06ad7e6f1407308a89a68b16df3b3d74b4",
                          "typeString": "literal_string \"NFTMarketplace: Invalid signature\""
                        }
                      ],
                      "id": 5164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "16145:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16145:376:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5180,
                  "nodeType": "ExpressionStatement",
                  "src": "16145:376:26"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 5181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "16538:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 5119,
                  "id": 5182,
                  "nodeType": "Return",
                  "src": "16531:11:26"
                }
              ]
            },
            "documentation": {
              "id": 5100,
              "nodeType": "StructuredDocumentation",
              "src": "14534:471:26",
              "text": " @notice Validate the trade.\n @param collection The ERC-721 smart contract.\n @param tokenId The unique identifier of the ERC-721 token within the `collection` smart contract.\n @param price The price of the NFT in `token` tokens.\n @param currency The type of currency (erc20 or native currency)\n @param buyer Buyer address.\n @param marketplaceFee Marketplace fee.\n @param signature ECDSA signature."
            },
            "functionSelector": "243f5c87",
            "id": 5184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canPerformTrade",
            "nameLocation": "15019:15:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5102,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "15052:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5184,
                  "src": "15044:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15044:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5104,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "15080:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5184,
                  "src": "15072:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15072:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5106,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "15105:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5184,
                  "src": "15097:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15097:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5108,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "15128:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5184,
                  "src": "15120:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15120:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5110,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "15154:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5184,
                  "src": "15146:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15146:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5112,
                  "mutability": "mutable",
                  "name": "marketplaceFee",
                  "nameLocation": "15177:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5184,
                  "src": "15169:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15169:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5115,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "15220:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5184,
                  "src": "15201:28:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Signature_$4425_calldata_ptr",
                    "typeString": "struct NFTMarketplace.Signature"
                  },
                  "typeName": {
                    "id": 5114,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5113,
                      "name": "Signature",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4425,
                      "src": "15201:9:26"
                    },
                    "referencedDeclaration": 4425,
                    "src": "15201:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Signature_$4425_storage_ptr",
                      "typeString": "struct NFTMarketplace.Signature"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15034:201:26"
            },
            "returnParameters": {
              "id": 5119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5118,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5184,
                  "src": "15257:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5117,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15257:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15256:6:26"
            },
            "scope": 5830,
            "src": "15010:1539:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5250,
              "nodeType": "Block",
              "src": "17057:842:26",
              "statements": [
                {
                  "assignments": [
                    5195
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5195,
                      "mutability": "mutable",
                      "name": "royaltyFee",
                      "nameLocation": "17075:10:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5250,
                      "src": "17067:18:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5194,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17067:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5197,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 5196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "17088:1:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17067:22:26"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 5200,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5187,
                        "src": "17136:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5202,
                              "name": "IERC721Autentica",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4337,
                              "src": "17153:16:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721Autentica_$4337_$",
                                "typeString": "type(contract IERC721Autentica)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC721Autentica_$4337_$",
                                "typeString": "type(contract IERC721Autentica)"
                              }
                            ],
                            "id": 5201,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "17148:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 5203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17148:22:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Autentica_$4337",
                            "typeString": "type(contract IERC721Autentica)"
                          }
                        },
                        "id": 5204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "17148:34:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 5198,
                        "name": "ERC165Checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3569,
                        "src": "17104:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC165Checker_$3569_$",
                          "typeString": "type(library ERC165Checker)"
                        }
                      },
                      "id": 5199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3417,
                      "src": "17104:31:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (address,bytes4) view returns (bool)"
                      }
                    },
                    "id": 5205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17104:79:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "arguments": [
                        {
                          "id": 5223,
                          "name": "collection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5187,
                          "src": "17480:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 5225,
                                "name": "IERC2981",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 411,
                                "src": "17497:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC2981_$411_$",
                                  "typeString": "type(contract IERC2981)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC2981_$411_$",
                                  "typeString": "type(contract IERC2981)"
                                }
                              ],
                              "id": 5224,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967269,
                              "src": "17492:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 5226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17492:14:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$411",
                              "typeString": "type(contract IERC2981)"
                            }
                          },
                          "id": 5227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "17492:26:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 5221,
                          "name": "ERC165Checker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3569,
                          "src": "17448:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC165Checker_$3569_$",
                            "typeString": "type(library ERC165Checker)"
                          }
                        },
                        "id": 5222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3417,
                        "src": "17448:31:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (address,bytes4) view returns (bool)"
                        }
                      },
                      "id": 5228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17448:71:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 5246,
                    "nodeType": "IfStatement",
                    "src": "17444:422:26",
                    "trueBody": {
                      "id": 5245,
                      "nodeType": "Block",
                      "src": "17521:345:26",
                      "statements": [
                        {
                          "expression": {
                            "id": 5243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "components": [
                                null,
                                {
                                  "id": 5229,
                                  "name": "royaltyFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5195,
                                  "src": "17602:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 5230,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "TupleExpression",
                              "src": "17599:14:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$_t_uint256_$",
                                "typeString": "tuple(,uint256)"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 5235,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5189,
                                  "src": "17649:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5241,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "313030",
                                    "id": 5236,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17658:3:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 5239,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "3130",
                                          "id": 5237,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "17665:2:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                          },
                                          "value": "10"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "**",
                                        "rightExpression": {
                                          "id": 5238,
                                          "name": "DECIMALS",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4389,
                                          "src": "17671:8:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "src": "17665:14:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 5240,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "17664:16:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "17658:22:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 5232,
                                      "name": "collection",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5187,
                                      "src": "17625:10:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 5231,
                                    "name": "IERC2981",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 411,
                                    "src": "17616:8:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC2981_$411_$",
                                      "typeString": "type(contract IERC2981)"
                                    }
                                  },
                                  "id": 5233,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17616:20:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC2981_$411",
                                    "typeString": "contract IERC2981"
                                  }
                                },
                                "id": 5234,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "royaltyInfo",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 410,
                                "src": "17616:32:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_address_$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) view external returns (address,uint256)"
                                }
                              },
                              "id": 5242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17616:65:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                "typeString": "tuple(address,uint256)"
                              }
                            },
                            "src": "17599:82:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 5244,
                          "nodeType": "ExpressionStatement",
                          "src": "17599:82:26"
                        }
                      ]
                    }
                  },
                  "id": 5247,
                  "nodeType": "IfStatement",
                  "src": "17100:766:26",
                  "trueBody": {
                    "id": 5220,
                    "nodeType": "Block",
                    "src": "17185:253:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 5218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5206,
                            "name": "royaltyFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5195,
                            "src": "17271:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 5209,
                                    "name": "collection",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5187,
                                    "src": "17333:10:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 5208,
                                  "name": "IERC721Autentica",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4337,
                                  "src": "17316:16:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Autentica_$4337_$",
                                    "typeString": "type(contract IERC721Autentica)"
                                  }
                                },
                                "id": 5210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17316:28:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721Autentica_$4337",
                                  "typeString": "contract IERC721Autentica"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 5215,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5189,
                                    "src": "17405:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 5212,
                                        "name": "collection",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5187,
                                        "src": "17379:10:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 5211,
                                      "name": "IERC721Autentica",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4337,
                                      "src": "17362:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC721Autentica_$4337_$",
                                        "typeString": "type(contract IERC721Autentica)"
                                      }
                                    },
                                    "id": 5213,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17362:28:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC721Autentica_$4337",
                                      "typeString": "contract IERC721Autentica"
                                    }
                                  },
                                  "id": 5214,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getRoyaltyFee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4312,
                                  "src": "17362:42:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view external returns (uint256)"
                                  }
                                },
                                "id": 5216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17362:51:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC721Autentica_$4337",
                                  "typeString": "contract IERC721Autentica"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 5207,
                              "name": "_normalizedFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5486,
                              "src": "17284:14:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_contract$_IERC721Autentica_$4337_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (contract IERC721Autentica,uint256) view returns (uint256)"
                              }
                            },
                            "id": 5217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17284:143:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17271:156:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5219,
                        "nodeType": "ExpressionStatement",
                        "src": "17271:156:26"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 5248,
                    "name": "royaltyFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5195,
                    "src": "17882:10:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5193,
                  "id": 5249,
                  "nodeType": "Return",
                  "src": "17875:17:26"
                }
              ]
            },
            "documentation": {
              "id": 5185,
              "nodeType": "StructuredDocumentation",
              "src": "16555:379:26",
              "text": " @notice If the collection smart contract implements `IERC721Autentica` or `IERC2981` then \n the function returns the royalty fee from that smart contract, otherwise it will return 0.\n @param collection The ERC-721 smart contract.\n @param tokenId The unique identifier of the ERC-721 token within the `collection` smart contract."
            },
            "functionSelector": "76ab4570",
            "id": 5251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRoyaltyFee",
            "nameLocation": "16948:13:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5187,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "16970:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5251,
                  "src": "16962:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16962:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5189,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "16990:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5251,
                  "src": "16982:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16982:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16961:37:26"
            },
            "returnParameters": {
              "id": 5193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5192,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5251,
                  "src": "17044:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17044:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17043:9:26"
            },
            "scope": 5830,
            "src": "16939:960:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5291,
              "nodeType": "Block",
              "src": "18395:417:26",
              "statements": [
                {
                  "assignments": [
                    5262
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5262,
                      "mutability": "mutable",
                      "name": "investorFee",
                      "nameLocation": "18413:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5291,
                      "src": "18405:19:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5261,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18405:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5264,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 5263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "18427:1:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18405:23:26"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 5267,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5254,
                        "src": "18474:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5269,
                              "name": "IERC721Autentica",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4337,
                              "src": "18491:16:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721Autentica_$4337_$",
                                "typeString": "type(contract IERC721Autentica)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC721Autentica_$4337_$",
                                "typeString": "type(contract IERC721Autentica)"
                              }
                            ],
                            "id": 5268,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "18486:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 5270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18486:22:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Autentica_$4337",
                            "typeString": "type(contract IERC721Autentica)"
                          }
                        },
                        "id": 5271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "18486:34:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 5265,
                        "name": "ERC165Checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3569,
                        "src": "18442:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC165Checker_$3569_$",
                          "typeString": "type(library ERC165Checker)"
                        }
                      },
                      "id": 5266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3417,
                      "src": "18442:31:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (address,bytes4) view returns (bool)"
                      }
                    },
                    "id": 5272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18442:79:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5288,
                  "nodeType": "IfStatement",
                  "src": "18438:340:26",
                  "trueBody": {
                    "id": 5287,
                    "nodeType": "Block",
                    "src": "18523:255:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 5285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5273,
                            "name": "investorFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5262,
                            "src": "18609:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 5276,
                                    "name": "collection",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5254,
                                    "src": "18672:10:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 5275,
                                  "name": "IERC721Autentica",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4337,
                                  "src": "18655:16:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Autentica_$4337_$",
                                    "typeString": "type(contract IERC721Autentica)"
                                  }
                                },
                                "id": 5277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18655:28:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721Autentica_$4337",
                                  "typeString": "contract IERC721Autentica"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 5282,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5256,
                                    "src": "18745:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 5279,
                                        "name": "collection",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5254,
                                        "src": "18718:10:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 5278,
                                      "name": "IERC721Autentica",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4337,
                                      "src": "18701:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC721Autentica_$4337_$",
                                        "typeString": "type(contract IERC721Autentica)"
                                      }
                                    },
                                    "id": 5280,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18701:28:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC721Autentica_$4337",
                                      "typeString": "contract IERC721Autentica"
                                    }
                                  },
                                  "id": 5281,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getInvestorFee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4320,
                                  "src": "18701:43:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view external returns (uint256)"
                                  }
                                },
                                "id": 5283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18701:52:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC721Autentica_$4337",
                                  "typeString": "contract IERC721Autentica"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 5274,
                              "name": "_normalizedFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5486,
                              "src": "18623:14:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_contract$_IERC721Autentica_$4337_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (contract IERC721Autentica,uint256) view returns (uint256)"
                              }
                            },
                            "id": 5284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18623:144:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18609:158:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5286,
                        "nodeType": "ExpressionStatement",
                        "src": "18609:158:26"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 5289,
                    "name": "investorFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5262,
                    "src": "18794:11:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5260,
                  "id": 5290,
                  "nodeType": "Return",
                  "src": "18787:18:26"
                }
              ]
            },
            "documentation": {
              "id": 5252,
              "nodeType": "StructuredDocumentation",
              "src": "17905:366:26",
              "text": " @notice If the collection smart contract implements `IERC721Autentica` then the function \n returns the investor fee from that smart contract, otherwise it will return 0.\n @param collection The ERC-721 smart contract.\n @param tokenId The unique identifier of the ERC-721 token within the `collection` smart contract."
            },
            "functionSelector": "3ab10409",
            "id": 5292,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInvestorFee",
            "nameLocation": "18285:14:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5254,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "18308:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5292,
                  "src": "18300:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18300:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5256,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "18328:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5292,
                  "src": "18320:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18320:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18299:37:26"
            },
            "returnParameters": {
              "id": 5260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5259,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5292,
                  "src": "18382:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18382:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18381:9:26"
            },
            "scope": 5830,
            "src": "18276:536:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5324,
              "nodeType": "Block",
              "src": "19304:154:26",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 5313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 5307,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5298,
                            "src": "19356:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 5305,
                            "name": "collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5296,
                            "src": "19333:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$2231",
                              "typeString": "contract IERC721"
                            }
                          },
                          "id": 5306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getApproved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2220,
                          "src": "19333:22:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 5308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19333:31:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 5311,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "19376:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTMarketplace_$5830",
                              "typeString": "contract NFTMarketplace"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTMarketplace_$5830",
                              "typeString": "contract NFTMarketplace"
                            }
                          ],
                          "id": 5310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19368:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5309,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19368:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19368:13:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "19333:48:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 5316,
                          "name": "tokenOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5300,
                          "src": "19425:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 5319,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "19445:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NFTMarketplace_$5830",
                                "typeString": "contract NFTMarketplace"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NFTMarketplace_$5830",
                                "typeString": "contract NFTMarketplace"
                              }
                            ],
                            "id": 5318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19437:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5317,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19437:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19437:13:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 5314,
                          "name": "collection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5296,
                          "src": "19397:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC721_$2231",
                            "typeString": "contract IERC721"
                          }
                        },
                        "id": 5315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isApprovedForAll",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2230,
                        "src": "19397:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address,address) view external returns (bool)"
                        }
                      },
                      "id": 5321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19397:54:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "19333:118:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5304,
                  "id": 5323,
                  "nodeType": "Return",
                  "src": "19314:137:26"
                }
              ]
            },
            "documentation": {
              "id": 5293,
              "nodeType": "StructuredDocumentation",
              "src": "18818:336:26",
              "text": " @dev Verifies if the token owner has approved this smart contract to manage its \n NFTs from the specified collection.\n @return Returns `true` if this smart contract is approved by the `tokenOwner` in \n the `collection` smart contract or only if that specific NFT is approved for this smart contract."
            },
            "functionSelector": "369e4c2c",
            "id": 5325,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMarketplaceApproved",
            "nameLocation": "19168:21:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5296,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "19207:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5325,
                  "src": "19199:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$2231",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 5295,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5294,
                      "name": "IERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2231,
                      "src": "19199:7:26"
                    },
                    "referencedDeclaration": 2231,
                    "src": "19199:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$2231",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5298,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "19235:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5325,
                  "src": "19227:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19227:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5300,
                  "mutability": "mutable",
                  "name": "tokenOwner",
                  "nameLocation": "19260:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5325,
                  "src": "19252:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19252:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19189:87:26"
            },
            "returnParameters": {
              "id": 5304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5303,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5325,
                  "src": "19298:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5302,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19298:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19297:6:26"
            },
            "scope": 5830,
            "src": "19159:299:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5341,
              "nodeType": "Block",
              "src": "19609:239:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5331,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "19709:18:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5332,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3107,
                              "src": "19729:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 5333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19729:12:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5330,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "19701:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 5334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19701:41:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a204f6e6c792061646d696e732063616e207061757365",
                        "id": 5335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19756:39:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65d05023034d5ad3965dbc642500322e4a5740fb929d24551689e5d27ee8af33",
                          "typeString": "literal_string \"NFTMarketplace: Only admins can pause\""
                        },
                        "value": "NFTMarketplace: Only admins can pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65d05023034d5ad3965dbc642500322e4a5740fb929d24551689e5d27ee8af33",
                          "typeString": "literal_string \"NFTMarketplace: Only admins can pause\""
                        }
                      ],
                      "id": 5329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "19680:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19680:125:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5337,
                  "nodeType": "ExpressionStatement",
                  "src": "19680:125:26"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5338,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 502,
                      "src": "19833:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19833:8:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5340,
                  "nodeType": "ExpressionStatement",
                  "src": "19833:8:26"
                }
              ]
            },
            "documentation": {
              "id": 5326,
              "nodeType": "StructuredDocumentation",
              "src": "19464:116:26",
              "text": " @notice Pause the contract.\n Requirements:\n - the caller must be admin."
            },
            "functionSelector": "8456cb59",
            "id": 5342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nameLocation": "19594:5:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19599:2:26"
            },
            "returnParameters": {
              "id": 5328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19609:0:26"
            },
            "scope": 5830,
            "src": "19585:263:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5358,
              "nodeType": "Block",
              "src": "20003:245:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5348,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "20105:18:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5349,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3107,
                              "src": "20125:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 5350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20125:12:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5347,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "20097:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 5351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20097:41:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a204f6e6c792061646d696e732063616e20756e7061757365",
                        "id": 5352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20152:41:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a49411e75e33a28db4e4a642068002ede44980cb8ff19c1c1c6795425ecff472",
                          "typeString": "literal_string \"NFTMarketplace: Only admins can unpause\""
                        },
                        "value": "NFTMarketplace: Only admins can unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a49411e75e33a28db4e4a642068002ede44980cb8ff19c1c1c6795425ecff472",
                          "typeString": "literal_string \"NFTMarketplace: Only admins can unpause\""
                        }
                      ],
                      "id": 5346,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "20076:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20076:127:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5354,
                  "nodeType": "ExpressionStatement",
                  "src": "20076:127:26"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5355,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "20231:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20231:10:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5357,
                  "nodeType": "ExpressionStatement",
                  "src": "20231:10:26"
                }
              ]
            },
            "documentation": {
              "id": 5343,
              "nodeType": "StructuredDocumentation",
              "src": "19854:118:26",
              "text": " @notice Unpause the contract.\n Requirements:\n - the caller must be admin."
            },
            "functionSelector": "3f4ba83a",
            "id": 5359,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nameLocation": "19986:7:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19993:2:26"
            },
            "returnParameters": {
              "id": 5345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20003:0:26"
            },
            "scope": 5830,
            "src": "19977:271:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5381,
              "nodeType": "Block",
              "src": "20591:122:26",
              "statements": [
                {
                  "assignments": [
                    5368,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5368,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "20607:4:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5381,
                      "src": "20602:9:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 5367,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "20602:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 5375,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 5373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20640:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 5369,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5362,
                          "src": "20617:2:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 5370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "20617:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 5372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 5371,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5364,
                          "src": "20632:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "20617:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 5374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20617:26:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20601:42:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5377,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5368,
                        "src": "20661:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a204661696c656420746f2073656e6420636f696e73",
                        "id": 5378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20667:38:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbd52b8f06a285e4591b858bda2b5202014db9e0952fb4e3932c82ce3767d8fb",
                          "typeString": "literal_string \"NFTMarketplace: Failed to send coins\""
                        },
                        "value": "NFTMarketplace: Failed to send coins"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bbd52b8f06a285e4591b858bda2b5202014db9e0952fb4e3932c82ce3767d8fb",
                          "typeString": "literal_string \"NFTMarketplace: Failed to send coins\""
                        }
                      ],
                      "id": 5376,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "20653:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20653:53:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5380,
                  "nodeType": "ExpressionStatement",
                  "src": "20653:53:26"
                }
              ]
            },
            "documentation": {
              "id": 5360,
              "nodeType": "StructuredDocumentation",
              "src": "20254:266:26",
              "text": " @dev Function to transfer coins (the native cryptocurrency of the \n platform, i.e.: ETH) from this contract to the specified address.\n @param to - Address where to transfer the coins\n @param amount - Amount (in wei)"
            },
            "id": 5382,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sendViaCall",
            "nameLocation": "20534:12:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5362,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "20563:2:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5382,
                  "src": "20547:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20547:15:26",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5364,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "20575:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5382,
                  "src": "20567:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20567:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20546:36:26"
            },
            "returnParameters": {
              "id": 5366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20591:0:26"
            },
            "scope": 5830,
            "src": "20525:188:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5458,
              "nodeType": "Block",
              "src": "21661:701:26",
              "statements": [
                {
                  "assignments": [
                    5410
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5410,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "21679:4:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5458,
                      "src": "21671:12:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 5409,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "21671:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5429,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 5416,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "21745:4:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NFTMarketplace_$5830",
                                  "typeString": "contract NFTMarketplace"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_NFTMarketplace_$5830",
                                  "typeString": "contract NFTMarketplace"
                                }
                              ],
                              "id": 5415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21737:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 5414,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "21737:7:26",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 5417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21737:13:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5418,
                            "name": "collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5385,
                            "src": "21768:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5419,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5387,
                            "src": "21796:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 5420,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5389,
                            "src": "21821:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5421,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5391,
                            "src": "21845:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5422,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5393,
                            "src": "21868:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 5423,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5395,
                            "src": "21891:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5424,
                            "name": "royaltyFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5397,
                            "src": "21914:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 5425,
                            "name": "investorFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5399,
                            "src": "21942:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 5426,
                            "name": "marketplaceFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5401,
                            "src": "21971:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 5412,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "21709:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 5413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "21709:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 5427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21709:290:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 5411,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "21686:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 5428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21686:323:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21671:338:26"
                },
                {
                  "assignments": [
                    5431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5431,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "22028:6:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5458,
                      "src": "22020:14:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5430,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "22020:7:26",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5447,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                                "id": 5436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "22104:34:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                  "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                                },
                                "value": "\u0019Ethereum Signed Message:\n32"
                              },
                              {
                                "id": 5437,
                                "name": "hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5410,
                                "src": "22140:4:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                  "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 5434,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967295,
                                "src": "22087:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 5435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "22087:16:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 5438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22087:58:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 5433,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "22060:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 5439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22060:99:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 5440,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5404,
                          "src": "22173:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Signature_$4425_calldata_ptr",
                            "typeString": "struct NFTMarketplace.Signature calldata"
                          }
                        },
                        "id": 5441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "v",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4420,
                        "src": "22173:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 5442,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5404,
                          "src": "22198:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Signature_$4425_calldata_ptr",
                            "typeString": "struct NFTMarketplace.Signature calldata"
                          }
                        },
                        "id": 5443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "r",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4422,
                        "src": "22198:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 5444,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5404,
                          "src": "22223:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Signature_$4425_calldata_ptr",
                            "typeString": "struct NFTMarketplace.Signature calldata"
                          }
                        },
                        "id": 5445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "s",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4424,
                        "src": "22223:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 5432,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967290,
                      "src": "22037:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 5446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22037:207:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22020:224:26"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 5449,
                          "name": "DEFAULT_ADMIN_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "22282:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 5450,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5431,
                          "src": "22302:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5448,
                        "name": "hasRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "22274:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view returns (bool)"
                        }
                      },
                      "id": 5451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22274:35:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 5453,
                          "name": "OPERATOR_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4394,
                          "src": "22333:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 5454,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5431,
                          "src": "22348:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5452,
                        "name": "hasRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "22325:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view returns (bool)"
                        }
                      },
                      "id": 5455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22325:30:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "22274:81:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5408,
                  "id": 5457,
                  "nodeType": "Return",
                  "src": "22255:100:26"
                }
              ]
            },
            "documentation": {
              "id": 5383,
              "nodeType": "StructuredDocumentation",
              "src": "20719:606:26",
              "text": " Returns `true` if the signer has the admin or the operator role.\n @param collection The ERC-721 smart contract.\n @param tokenId The unique identifier of the ERC-721 token within the `collection` smart contract.\n @param buyer Seller address.\n @param buyer Buyer address.\n @param price Price of the NFT expressed in coins or tokens.\n @param token The ERC-20 smart contract address.\n @param royaltyFee Royalty fee.\n @param investorFee Investor fee.\n @param marketplaceFee Marketplace fee.\n @param signature ECDSA signature."
            },
            "id": 5459,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateTrade",
            "nameLocation": "21339:14:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5385,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "21371:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5459,
                  "src": "21363:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21363:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5387,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "21399:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5459,
                  "src": "21391:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21391:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5389,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "21424:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5459,
                  "src": "21416:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21416:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5391,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "21448:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5459,
                  "src": "21440:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21440:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5393,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "21471:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5459,
                  "src": "21463:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21463:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5395,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "21494:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5459,
                  "src": "21486:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21486:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5397,
                  "mutability": "mutable",
                  "name": "royaltyFee",
                  "nameLocation": "21517:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5459,
                  "src": "21509:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21509:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5399,
                  "mutability": "mutable",
                  "name": "investorFee",
                  "nameLocation": "21545:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5459,
                  "src": "21537:19:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21537:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5401,
                  "mutability": "mutable",
                  "name": "marketplaceFee",
                  "nameLocation": "21574:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5459,
                  "src": "21566:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21566:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5404,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "21617:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5459,
                  "src": "21598:28:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Signature_$4425_calldata_ptr",
                    "typeString": "struct NFTMarketplace.Signature"
                  },
                  "typeName": {
                    "id": 5403,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5402,
                      "name": "Signature",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4425,
                      "src": "21598:9:26"
                    },
                    "referencedDeclaration": 4425,
                    "src": "21598:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Signature_$4425_storage_ptr",
                      "typeString": "struct NFTMarketplace.Signature"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21353:279:26"
            },
            "returnParameters": {
              "id": 5408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5407,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5459,
                  "src": "21655:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5406,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "21655:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21654:6:26"
            },
            "scope": 5830,
            "src": "21330:1032:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5485,
              "nodeType": "Block",
              "src": "22779:76:26",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5470,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5465,
                            "src": "22797:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5473,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 5471,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "22804:2:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "id": 5472,
                                  "name": "DECIMALS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4389,
                                  "src": "22808:8:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "22804:12:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 5474,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "22803:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22797:20:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 5476,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "22796:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 5477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22822:2:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 5478,
                                "name": "collection",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5463,
                                "src": "22826:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721Autentica_$4337",
                                  "typeString": "contract IERC721Autentica"
                                }
                              },
                              "id": 5479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "decimals",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4304,
                              "src": "22826:19:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                "typeString": "function () view external returns (uint8)"
                              }
                            },
                            "id": 5480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22826:21:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "22822:25:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 5482,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "22821:27:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22796:52:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5469,
                  "id": 5484,
                  "nodeType": "Return",
                  "src": "22789:59:26"
                }
              ]
            },
            "documentation": {
              "id": 5460,
              "nodeType": "StructuredDocumentation",
              "src": "22368:281:26",
              "text": " @dev Returns the fee normalized to the number of decimals used in this smart contract.\n @param collection The Autentica ERC-721 smart contract.\n @param fee Value represented using the number of decimals used by the `collection` smart contract."
            },
            "id": 5486,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_normalizedFee",
            "nameLocation": "22663:14:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5463,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "22695:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5486,
                  "src": "22678:27:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721Autentica_$4337",
                    "typeString": "contract IERC721Autentica"
                  },
                  "typeName": {
                    "id": 5462,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5461,
                      "name": "IERC721Autentica",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4337,
                      "src": "22678:16:26"
                    },
                    "referencedDeclaration": 4337,
                    "src": "22678:16:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Autentica_$4337",
                      "typeString": "contract IERC721Autentica"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5465,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "22715:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5486,
                  "src": "22707:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22707:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22677:42:26"
            },
            "returnParameters": {
              "id": 5469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5468,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5486,
                  "src": "22766:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22766:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22765:9:26"
            },
            "scope": 5830,
            "src": "22654:201:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5515,
              "nodeType": "Block",
              "src": "23073:220:26",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5496,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5489,
                      "src": "23087:3:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23094:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "23087:8:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5502,
                  "nodeType": "IfStatement",
                  "src": "23083:47:26",
                  "trueBody": {
                    "id": 5501,
                    "nodeType": "Block",
                    "src": "23097:33:26",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 5499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23118:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 5495,
                        "id": 5500,
                        "nodeType": "Return",
                        "src": "23111:8:26"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5503,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5491,
                            "src": "23251:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 5504,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5489,
                            "src": "23259:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23251:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 5506,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "23250:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "313030",
                            "id": 5507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23267:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 5508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23273:2:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "id": 5509,
                              "name": "DECIMALS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4389,
                              "src": "23277:8:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "23273:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23267:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 5512,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "23266:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23250:36:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5495,
                  "id": 5514,
                  "nodeType": "Return",
                  "src": "23243:43:26"
                }
              ]
            },
            "documentation": {
              "id": 5487,
              "nodeType": "StructuredDocumentation",
              "src": "22861:86:26",
              "text": " @dev Returns the number of coins/tokens for a given fee percentage."
            },
            "id": 5516,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_calculateProceedsForFee",
            "nameLocation": "22961:24:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5489,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "22994:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5516,
                  "src": "22986:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22986:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5491,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "23007:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5516,
                  "src": "22999:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22999:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22985:28:26"
            },
            "returnParameters": {
              "id": 5495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5494,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5516,
                  "src": "23060:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23060:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23059:9:26"
            },
            "scope": 5830,
            "src": "22952:341:26",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5538,
              "nodeType": "Block",
              "src": "23477:139:26",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5527,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5519,
                          "src": "23506:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 5528,
                            "name": "proceeds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5522,
                            "src": "23526:8:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                              "typeString": "struct NFTMarketplace.Proceeds memory"
                            }
                          },
                          "id": 5529,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "marketplace",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4417,
                          "src": "23526:20:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "23506:40:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 5531,
                          "name": "proceeds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5522,
                          "src": "23561:8:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                            "typeString": "struct NFTMarketplace.Proceeds memory"
                          }
                        },
                        "id": 5532,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "creator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4413,
                        "src": "23561:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "23506:71:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 5534,
                        "name": "proceeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5522,
                        "src": "23592:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                          "typeString": "struct NFTMarketplace.Proceeds memory"
                        }
                      },
                      "id": 5535,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "investor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4415,
                      "src": "23592:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23506:103:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5526,
                  "id": 5537,
                  "nodeType": "Return",
                  "src": "23487:122:26"
                }
              ]
            },
            "documentation": {
              "id": 5517,
              "nodeType": "StructuredDocumentation",
              "src": "23299:46:26",
              "text": " Returns the owner proceeds."
            },
            "id": 5539,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_calculateOwnerProceeds",
            "nameLocation": "23359:23:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5519,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "23400:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5539,
                  "src": "23392:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23392:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5522,
                  "mutability": "mutable",
                  "name": "proceeds",
                  "nameLocation": "23431:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5539,
                  "src": "23415:24:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proceeds_$4418_memory_ptr",
                    "typeString": "struct NFTMarketplace.Proceeds"
                  },
                  "typeName": {
                    "id": 5521,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5520,
                      "name": "Proceeds",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4418,
                      "src": "23415:8:26"
                    },
                    "referencedDeclaration": 4418,
                    "src": "23415:8:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proceeds_$4418_storage_ptr",
                      "typeString": "struct NFTMarketplace.Proceeds"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23382:63:26"
            },
            "returnParameters": {
              "id": 5526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5525,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5539,
                  "src": "23468:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5524,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23468:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23467:9:26"
            },
            "scope": 5830,
            "src": "23350:266:26",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5557,
              "nodeType": "Block",
              "src": "23776:245:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5548,
                            "name": "collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5542,
                            "src": "23856:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5550,
                                  "name": "IERC721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2231,
                                  "src": "23889:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$2231_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$2231_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                ],
                                "id": 5549,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "23884:4:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 5551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23884:13:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$2231",
                                "typeString": "type(contract IERC721)"
                              }
                            },
                            "id": 5552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "23884:25:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 5546,
                            "name": "ERC165Checker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3569,
                            "src": "23807:13:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC165Checker_$3569_$",
                              "typeString": "type(library ERC165Checker)"
                            }
                          },
                          "id": 5547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supportsInterface",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3417,
                          "src": "23807:31:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                            "typeString": "function (address,bytes4) view returns (bool)"
                          }
                        },
                        "id": 5553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23807:116:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a20436f6c6c656374696f6e20646f6573206e6f7420737570706f727420746865204552432d37323120696e74657266616365",
                        "id": 5554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23937:67:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20c0ec4c03263819457c6b7a74dbc8485f93f2bd6f37a73f909e2f730406ea0e",
                          "typeString": "literal_string \"NFTMarketplace: Collection does not support the ERC-721 interface\""
                        },
                        "value": "NFTMarketplace: Collection does not support the ERC-721 interface"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20c0ec4c03263819457c6b7a74dbc8485f93f2bd6f37a73f909e2f730406ea0e",
                          "typeString": "literal_string \"NFTMarketplace: Collection does not support the ERC-721 interface\""
                        }
                      ],
                      "id": 5545,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "23786:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23786:228:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5556,
                  "nodeType": "ExpressionStatement",
                  "src": "23786:228:26"
                }
              ]
            },
            "documentation": {
              "id": 5540,
              "nodeType": "StructuredDocumentation",
              "src": "23622:91:26",
              "text": " @dev Makes sure that the `collection` is a valid ERC-721 smart contract."
            },
            "id": 5558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateERC721",
            "nameLocation": "23727:15:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5542,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "23751:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5558,
                  "src": "23743:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23743:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23742:20:26"
            },
            "returnParameters": {
              "id": 5544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23776:0:26"
            },
            "scope": 5830,
            "src": "23718:303:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5581,
              "nodeType": "Block",
              "src": "24251:189:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 5572,
                                "name": "collection",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5561,
                                "src": "24312:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 5571,
                              "name": "IERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2231,
                              "src": "24304:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721_$2231_$",
                                "typeString": "type(contract IERC721)"
                              }
                            },
                            "id": 5573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24304:19:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$2231",
                              "typeString": "contract IERC721"
                            }
                          },
                          {
                            "id": 5574,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5563,
                            "src": "24325:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 5575,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5566,
                              "src": "24334:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                                "typeString": "struct NFTMarketplace.NFT memory"
                              }
                            },
                            "id": 5576,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4401,
                            "src": "24334:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC721_$2231",
                              "typeString": "contract IERC721"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5570,
                          "name": "isMarketplaceApproved",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5325,
                          "src": "24282:21:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IERC721_$2231_$_t_uint256_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (contract IERC721,uint256,address) view returns (bool)"
                          }
                        },
                        "id": 5577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24282:62:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a204f776e657220686173206e6f7420617070726f76656420757320666f72206d616e6167696e6720697473204e465473",
                        "id": 5578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24358:65:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7899767309aa7951a37e89e913c6e7d7909ed17525c5fb28a3b9e8746df3cea",
                          "typeString": "literal_string \"NFTMarketplace: Owner has not approved us for managing its NFTs\""
                        },
                        "value": "NFTMarketplace: Owner has not approved us for managing its NFTs"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7899767309aa7951a37e89e913c6e7d7909ed17525c5fb28a3b9e8746df3cea",
                          "typeString": "literal_string \"NFTMarketplace: Owner has not approved us for managing its NFTs\""
                        }
                      ],
                      "id": 5569,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "24261:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24261:172:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5580,
                  "nodeType": "ExpressionStatement",
                  "src": "24261:172:26"
                }
              ]
            },
            "documentation": {
              "id": 5559,
              "nodeType": "StructuredDocumentation",
              "src": "24027:93:26",
              "text": " @dev Makes sure that the owner approved this smart contract for the token."
            },
            "id": 5582,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateNFTApproval",
            "nameLocation": "24134:20:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5561,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "24172:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5582,
                  "src": "24164:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24164:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5563,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "24200:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5582,
                  "src": "24192:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24192:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5566,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "24228:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5582,
                  "src": "24217:14:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                    "typeString": "struct NFTMarketplace.NFT"
                  },
                  "typeName": {
                    "id": 5565,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5564,
                      "name": "NFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4406,
                      "src": "24217:3:26"
                    },
                    "referencedDeclaration": 4406,
                    "src": "24217:3:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFT_$4406_storage_ptr",
                      "typeString": "struct NFTMarketplace.NFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24154:83:26"
            },
            "returnParameters": {
              "id": 5568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24251:0:26"
            },
            "scope": 5830,
            "src": "24125:315:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5603,
              "nodeType": "Block",
              "src": "24633:167:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5591,
                            "name": "royaltyFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5585,
                            "src": "24664:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 5592,
                            "name": "marketplaceFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5587,
                            "src": "24677:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24664:27:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "313030",
                            "id": 5594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24695:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 5595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24701:2:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "id": 5596,
                              "name": "DECIMALS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4389,
                              "src": "24705:8:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "24701:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24695:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "24664:49:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46544d61726b6574706c6163653a20546f74616c20666565732063616e6e6f742062652067726561746572207468616e2031303025",
                        "id": 5600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24727:56:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a351190521245917ddc60bb333b6be3878906749ead0b92a5512bc886e95d097",
                          "typeString": "literal_string \"NFTMarketplace: Total fees cannot be greater than 100%\""
                        },
                        "value": "NFTMarketplace: Total fees cannot be greater than 100%"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a351190521245917ddc60bb333b6be3878906749ead0b92a5512bc886e95d097",
                          "typeString": "literal_string \"NFTMarketplace: Total fees cannot be greater than 100%\""
                        }
                      ],
                      "id": 5590,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "24643:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24643:150:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5602,
                  "nodeType": "ExpressionStatement",
                  "src": "24643:150:26"
                }
              ]
            },
            "documentation": {
              "id": 5583,
              "nodeType": "StructuredDocumentation",
              "src": "24446:80:26",
              "text": " @dev Make sure that all the fees sumed up do not exceed 100%."
            },
            "id": 5604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateFees",
            "nameLocation": "24540:13:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5585,
                  "mutability": "mutable",
                  "name": "royaltyFee",
                  "nameLocation": "24571:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5604,
                  "src": "24563:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24563:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5587,
                  "mutability": "mutable",
                  "name": "marketplaceFee",
                  "nameLocation": "24599:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5604,
                  "src": "24591:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24591:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24553:66:26"
            },
            "returnParameters": {
              "id": 5589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24633:0:26"
            },
            "scope": 5830,
            "src": "24531:269:26",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5697,
              "nodeType": "Block",
              "src": "25144:1268:26",
              "statements": [
                {
                  "assignments": [
                    5617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5617,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "25201:3:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5697,
                      "src": "25190:14:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                        "typeString": "struct NFTMarketplace.NFT"
                      },
                      "typeName": {
                        "id": 5616,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5615,
                          "name": "NFT",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4406,
                          "src": "25190:3:26"
                        },
                        "referencedDeclaration": 4406,
                        "src": "25190:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$4406_storage_ptr",
                          "typeString": "struct NFTMarketplace.NFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5634,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5623,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5609,
                            "src": "25260:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 5620,
                                "name": "collection",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5607,
                                "src": "25240:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 5619,
                              "name": "IERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2231,
                              "src": "25232:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721_$2231_$",
                                "typeString": "type(contract IERC721)"
                              }
                            },
                            "id": 5621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25232:19:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$2231",
                              "typeString": "contract IERC721"
                            }
                          },
                          "id": 5622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2164,
                          "src": "25232:27:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 5624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25232:36:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "307830",
                            "id": 5627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "25299:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "25291:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5625,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "25291:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25291:12:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "307830",
                            "id": 5631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "25405:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "25397:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5629,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "25397:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25397:12:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5618,
                      "name": "NFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4406,
                      "src": "25207:3:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_NFT_$4406_storage_ptr_$",
                        "typeString": "type(struct NFTMarketplace.NFT storage pointer)"
                      }
                    },
                    "id": 5633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "owner",
                      "creator",
                      "investor"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "25207:283:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                      "typeString": "struct NFTMarketplace.NFT memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25190:300:26"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 5637,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5607,
                        "src": "25602:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5639,
                              "name": "IERC721Autentica",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4337,
                              "src": "25619:16:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721Autentica_$4337_$",
                                "typeString": "type(contract IERC721Autentica)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC721Autentica_$4337_$",
                                "typeString": "type(contract IERC721Autentica)"
                              }
                            ],
                            "id": 5638,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "25614:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 5640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25614:22:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Autentica_$4337",
                            "typeString": "type(contract IERC721Autentica)"
                          }
                        },
                        "id": 5641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "25614:34:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 5635,
                        "name": "ERC165Checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3569,
                        "src": "25570:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC165Checker_$3569_$",
                          "typeString": "type(library ERC165Checker)"
                        }
                      },
                      "id": 5636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3417,
                      "src": "25570:31:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (address,bytes4) view returns (bool)"
                      }
                    },
                    "id": 5642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25570:79:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "arguments": [
                        {
                          "id": 5668,
                          "name": "collection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5607,
                          "src": "25930:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 5670,
                                "name": "IERC2981",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 411,
                                "src": "25947:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC2981_$411_$",
                                  "typeString": "type(contract IERC2981)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC2981_$411_$",
                                  "typeString": "type(contract IERC2981)"
                                }
                              ],
                              "id": 5669,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967269,
                              "src": "25942:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 5671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25942:14:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$411",
                              "typeString": "type(contract IERC2981)"
                            }
                          },
                          "id": 5672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "25942:26:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 5666,
                          "name": "ERC165Checker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3569,
                          "src": "25898:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC165Checker_$3569_$",
                            "typeString": "type(library ERC165Checker)"
                          }
                        },
                        "id": 5667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3417,
                        "src": "25898:31:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (address,bytes4) view returns (bool)"
                        }
                      },
                      "id": 5673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25898:71:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 5693,
                    "nodeType": "IfStatement",
                    "src": "25894:491:26",
                    "trueBody": {
                      "id": 5692,
                      "nodeType": "Block",
                      "src": "25971:414:26",
                      "statements": [
                        {
                          "expression": {
                            "id": 5690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "components": [
                                {
                                  "expression": {
                                    "id": 5674,
                                    "name": "nft",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5617,
                                    "src": "26050:3:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                                      "typeString": "struct NFTMarketplace.NFT memory"
                                    }
                                  },
                                  "id": 5676,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "creator",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4403,
                                  "src": "26050:11:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                null
                              ],
                              "id": 5677,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "TupleExpression",
                              "src": "26049:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$__$",
                                "typeString": "tuple(address,)"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 5682,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5609,
                                  "src": "26100:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5688,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "313030",
                                    "id": 5683,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "26109:3:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 5686,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "3130",
                                          "id": 5684,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "26116:2:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                          },
                                          "value": "10"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "**",
                                        "rightExpression": {
                                          "id": 5685,
                                          "name": "DECIMALS",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4389,
                                          "src": "26122:8:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "src": "26116:14:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 5687,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "26115:16:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "26109:22:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 5679,
                                      "name": "collection",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5607,
                                      "src": "26076:10:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 5678,
                                    "name": "IERC2981",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 411,
                                    "src": "26067:8:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC2981_$411_$",
                                      "typeString": "type(contract IERC2981)"
                                    }
                                  },
                                  "id": 5680,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "26067:20:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC2981_$411",
                                    "typeString": "contract IERC2981"
                                  }
                                },
                                "id": 5681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "royaltyInfo",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 410,
                                "src": "26067:32:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_address_$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) view external returns (address,uint256)"
                                }
                              },
                              "id": 5689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26067:65:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                "typeString": "tuple(address,uint256)"
                              }
                            },
                            "src": "26049:83:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 5691,
                          "nodeType": "ExpressionStatement",
                          "src": "26049:83:26"
                        }
                      ]
                    }
                  },
                  "id": 5694,
                  "nodeType": "IfStatement",
                  "src": "25566:819:26",
                  "trueBody": {
                    "id": 5665,
                    "nodeType": "Block",
                    "src": "25651:237:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 5652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 5643,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5617,
                              "src": "25737:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                                "typeString": "struct NFTMarketplace.NFT memory"
                              }
                            },
                            "id": 5645,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "creator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4403,
                            "src": "25737:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 5650,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5609,
                                "src": "25791:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 5647,
                                    "name": "collection",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5607,
                                    "src": "25768:10:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 5646,
                                  "name": "IERC721Autentica",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4337,
                                  "src": "25751:16:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Autentica_$4337_$",
                                    "typeString": "type(contract IERC721Autentica)"
                                  }
                                },
                                "id": 5648,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "25751:28:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721Autentica_$4337",
                                  "typeString": "contract IERC721Autentica"
                                }
                              },
                              "id": 5649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getCreator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4328,
                              "src": "25751:39:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 5651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25751:48:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "25737:62:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 5653,
                        "nodeType": "ExpressionStatement",
                        "src": "25737:62:26"
                      },
                      {
                        "expression": {
                          "id": 5663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 5654,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5617,
                              "src": "25813:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                                "typeString": "struct NFTMarketplace.NFT memory"
                              }
                            },
                            "id": 5656,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "investor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4405,
                            "src": "25813:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 5661,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5609,
                                "src": "25869:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 5658,
                                    "name": "collection",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5607,
                                    "src": "25845:10:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 5657,
                                  "name": "IERC721Autentica",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4337,
                                  "src": "25828:16:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Autentica_$4337_$",
                                    "typeString": "type(contract IERC721Autentica)"
                                  }
                                },
                                "id": 5659,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "25828:28:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721Autentica_$4337",
                                  "typeString": "contract IERC721Autentica"
                                }
                              },
                              "id": 5660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getInvestor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4336,
                              "src": "25828:40:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 5662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25828:49:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "25813:64:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 5664,
                        "nodeType": "ExpressionStatement",
                        "src": "25813:64:26"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 5695,
                    "name": "nft",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5617,
                    "src": "26402:3:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                      "typeString": "struct NFTMarketplace.NFT memory"
                    }
                  },
                  "functionReturnParameters": 5614,
                  "id": 5696,
                  "nodeType": "Return",
                  "src": "26395:10:26"
                }
              ]
            },
            "documentation": {
              "id": 5605,
              "nodeType": "StructuredDocumentation",
              "src": "24806:213:26",
              "text": " @dev Returns the NFT details.\n @param collection The ERC-721 smart contract.\n @param tokenId The unique identifier of the ERC-721 token within the `collection` smart contract."
            },
            "id": 5698,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_nftDetails",
            "nameLocation": "25033:11:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5607,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "25053:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5698,
                  "src": "25045:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5606,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25045:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5609,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "25073:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5698,
                  "src": "25065:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25065:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25044:37:26"
            },
            "returnParameters": {
              "id": 5614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5613,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5698,
                  "src": "25128:10:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                    "typeString": "struct NFTMarketplace.NFT"
                  },
                  "typeName": {
                    "id": 5612,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5611,
                      "name": "NFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4406,
                      "src": "25128:3:26"
                    },
                    "referencedDeclaration": 4406,
                    "src": "25128:3:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFT_$4406_storage_ptr",
                      "typeString": "struct NFTMarketplace.NFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25127:12:26"
            },
            "scope": 5830,
            "src": "25024:1388:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5828,
              "nodeType": "Block",
              "src": "26831:1255:26",
              "statements": [
                {
                  "assignments": [
                    5716
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5716,
                      "mutability": "mutable",
                      "name": "percentages",
                      "nameLocation": "26860:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5828,
                      "src": "26841:30:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Percentages_$4411_memory_ptr",
                        "typeString": "struct NFTMarketplace.Percentages"
                      },
                      "typeName": {
                        "id": 5715,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5714,
                          "name": "Percentages",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4411,
                          "src": "26841:11:26"
                        },
                        "referencedDeclaration": 4411,
                        "src": "26841:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Percentages_$4411_storage_ptr",
                          "typeString": "struct NFTMarketplace.Percentages"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5721,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 5718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26896:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 5719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26909:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 5717,
                      "name": "Percentages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4411,
                      "src": "26874:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Percentages_$4411_storage_ptr_$",
                        "typeString": "type(struct NFTMarketplace.Percentages storage pointer)"
                      }
                    },
                    "id": 5720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "creator",
                      "investor"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "26874:38:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Percentages_$4411_memory_ptr",
                      "typeString": "struct NFTMarketplace.Percentages memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26841:71:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5722,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5702,
                        "src": "26927:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                          "typeString": "struct NFTMarketplace.NFT memory"
                        }
                      },
                      "id": 5723,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4401,
                      "src": "26927:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 5724,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5702,
                        "src": "26940:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                          "typeString": "struct NFTMarketplace.NFT memory"
                        }
                      },
                      "id": 5725,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "creator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4403,
                      "src": "26940:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "26927:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5824,
                    "nodeType": "Block",
                    "src": "27313:738:26",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 5775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 5771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 5765,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5702,
                                "src": "27388:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                                  "typeString": "struct NFTMarketplace.NFT memory"
                                }
                              },
                              "id": 5766,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "creator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4403,
                              "src": "27388:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "307830",
                                  "id": 5769,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "27411:3:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0x0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 5768,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "27403:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5767,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "27403:7:26",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "27403:12:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "27388:27:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 5772,
                              "name": "royaltyFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5704,
                              "src": "27419:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 5773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27432:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "27419:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "27388:45:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5823,
                        "nodeType": "IfStatement",
                        "src": "27384:657:26",
                        "trueBody": {
                          "id": 5822,
                          "nodeType": "Block",
                          "src": "27435:606:26",
                          "statements": [
                            {
                              "expression": {
                                "id": 5780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 5776,
                                    "name": "percentages",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5716,
                                    "src": "27513:11:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Percentages_$4411_memory_ptr",
                                      "typeString": "struct NFTMarketplace.Percentages memory"
                                    }
                                  },
                                  "id": 5778,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "creator",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4408,
                                  "src": "27513:19:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 5779,
                                  "name": "royaltyFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5704,
                                  "src": "27535:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "27513:32:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5781,
                              "nodeType": "ExpressionStatement",
                              "src": "27513:32:26"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 5792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 5788,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 5782,
                                      "name": "nft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5702,
                                      "src": "27568:3:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                                        "typeString": "struct NFTMarketplace.NFT memory"
                                      }
                                    },
                                    "id": 5783,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "investor",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4405,
                                    "src": "27568:12:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "307830",
                                        "id": 5786,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "27592:3:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0x0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 5785,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "27584:7:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 5784,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "27584:7:26",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 5787,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "27584:12:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "27568:28:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5791,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 5789,
                                    "name": "investorFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5706,
                                    "src": "27600:11:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 5790,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "27614:1:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "27600:15:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "27568:47:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 5821,
                              "nodeType": "IfStatement",
                              "src": "27564:463:26",
                              "trueBody": {
                                "id": 5820,
                                "nodeType": "Block",
                                "src": "27617:410:26",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 5808,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 5793,
                                          "name": "percentages",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5716,
                                          "src": "27795:11:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Percentages_$4411_memory_ptr",
                                            "typeString": "struct NFTMarketplace.Percentages memory"
                                          }
                                        },
                                        "id": 5795,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "investor",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4410,
                                        "src": "27795:20:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 5807,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 5799,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 5796,
                                                "name": "investorFee",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5706,
                                                "src": "27819:11:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "expression": {
                                                  "id": 5797,
                                                  "name": "percentages",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 5716,
                                                  "src": "27833:11:26",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Percentages_$4411_memory_ptr",
                                                    "typeString": "struct NFTMarketplace.Percentages memory"
                                                  }
                                                },
                                                "id": 5798,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "creator",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 4408,
                                                "src": "27833:19:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "27819:33:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 5800,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "27818:35:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 5805,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "hexValue": "313030",
                                                "id": 5801,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "27857:3:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_100_by_1",
                                                  "typeString": "int_const 100"
                                                },
                                                "value": "100"
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 5804,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "hexValue": "3130",
                                                  "id": 5802,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "27863:2:26",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10_by_1",
                                                    "typeString": "int_const 10"
                                                  },
                                                  "value": "10"
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "**",
                                                "rightExpression": {
                                                  "id": 5803,
                                                  "name": "DECIMALS",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 4389,
                                                  "src": "27867:8:26",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                  }
                                                },
                                                "src": "27863:12:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "27857:18:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 5806,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "27856:20:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "27818:58:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "27795:81:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 5809,
                                    "nodeType": "ExpressionStatement",
                                    "src": "27795:81:26"
                                  },
                                  {
                                    "expression": {
                                      "id": 5818,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 5810,
                                          "name": "percentages",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5716,
                                          "src": "27944:11:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Percentages_$4411_memory_ptr",
                                            "typeString": "struct NFTMarketplace.Percentages memory"
                                          }
                                        },
                                        "id": 5812,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "creator",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4408,
                                        "src": "27944:19:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 5817,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 5813,
                                            "name": "percentages",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5716,
                                            "src": "27966:11:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Percentages_$4411_memory_ptr",
                                              "typeString": "struct NFTMarketplace.Percentages memory"
                                            }
                                          },
                                          "id": 5814,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "creator",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 4408,
                                          "src": "27966:19:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 5815,
                                            "name": "percentages",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5716,
                                            "src": "27988:11:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Percentages_$4411_memory_ptr",
                                              "typeString": "struct NFTMarketplace.Percentages memory"
                                            }
                                          },
                                          "id": 5816,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "investor",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 4410,
                                          "src": "27988:20:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "27966:42:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "27944:64:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 5819,
                                    "nodeType": "ExpressionStatement",
                                    "src": "27944:64:26"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 5825,
                  "nodeType": "IfStatement",
                  "src": "26923:1128:26",
                  "trueBody": {
                    "id": 5764,
                    "nodeType": "Block",
                    "src": "26953:354:26",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 5737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 5733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 5727,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5702,
                                "src": "27027:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                                  "typeString": "struct NFTMarketplace.NFT memory"
                                }
                              },
                              "id": 5728,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "investor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4405,
                              "src": "27027:12:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "307830",
                                  "id": 5731,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "27051:3:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0x0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 5730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "27043:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5729,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "27043:7:26",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "27043:12:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "27027:28:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 5734,
                              "name": "investorFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5706,
                              "src": "27059:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 5735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27073:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "27059:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "27027:47:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5763,
                        "nodeType": "IfStatement",
                        "src": "27023:274:26",
                        "trueBody": {
                          "id": 5762,
                          "nodeType": "Block",
                          "src": "27076:221:26",
                          "statements": [
                            {
                              "expression": {
                                "id": 5760,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 5738,
                                    "name": "percentages",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5716,
                                    "src": "27181:11:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Percentages_$4411_memory_ptr",
                                      "typeString": "struct NFTMarketplace.Percentages memory"
                                    }
                                  },
                                  "id": 5740,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "investor",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4410,
                                  "src": "27181:20:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5759,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 5751,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 5741,
                                          "name": "investorFee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5706,
                                          "src": "27205:11:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 5749,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "components": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 5746,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "hexValue": "313030",
                                                      "id": 5742,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "27221:3:26",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_100_by_1",
                                                        "typeString": "int_const 100"
                                                      },
                                                      "value": "100"
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "*",
                                                    "rightExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 5745,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "hexValue": "3130",
                                                        "id": 5743,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "27227:2:26",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_10_by_1",
                                                          "typeString": "int_const 10"
                                                        },
                                                        "value": "10"
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "**",
                                                      "rightExpression": {
                                                        "id": 5744,
                                                        "name": "DECIMALS",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4389,
                                                        "src": "27231:8:26",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint8",
                                                          "typeString": "uint8"
                                                        }
                                                      },
                                                      "src": "27227:12:26",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "src": "27221:18:26",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 5747,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "27220:20:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "id": 5748,
                                                "name": "marketplaceFee",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5708,
                                                "src": "27243:14:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "27220:37:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 5750,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "27219:39:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "27205:53:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 5752,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "27204:55:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 5757,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "313030",
                                          "id": 5753,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "27263:3:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 5756,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "3130",
                                            "id": 5754,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "27269:2:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "**",
                                          "rightExpression": {
                                            "id": 5755,
                                            "name": "DECIMALS",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4389,
                                            "src": "27273:8:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "27269:12:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "27263:18:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 5758,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "27262:20:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "27204:78:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "27181:101:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5761,
                              "nodeType": "ExpressionStatement",
                              "src": "27181:101:26"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 5826,
                    "name": "percentages",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5716,
                    "src": "28068:11:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Percentages_$4411_memory_ptr",
                      "typeString": "struct NFTMarketplace.Percentages memory"
                    }
                  },
                  "functionReturnParameters": 5713,
                  "id": 5827,
                  "nodeType": "Return",
                  "src": "28061:18:26"
                }
              ]
            },
            "documentation": {
              "id": 5699,
              "nodeType": "StructuredDocumentation",
              "src": "26418:218:26",
              "text": " @dev Returns the Percentages details.\n @param nft NFT details.\n @param royaltyFee Royalty fee.\n @param investorFee Investor fee.\n @param marketplaceFee Marketplace fee."
            },
            "id": 5829,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_percentagesDetails",
            "nameLocation": "26650:19:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5702,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "26690:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5829,
                  "src": "26679:14:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NFT_$4406_memory_ptr",
                    "typeString": "struct NFTMarketplace.NFT"
                  },
                  "typeName": {
                    "id": 5701,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5700,
                      "name": "NFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4406,
                      "src": "26679:3:26"
                    },
                    "referencedDeclaration": 4406,
                    "src": "26679:3:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFT_$4406_storage_ptr",
                      "typeString": "struct NFTMarketplace.NFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5704,
                  "mutability": "mutable",
                  "name": "royaltyFee",
                  "nameLocation": "26711:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5829,
                  "src": "26703:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5703,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26703:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5706,
                  "mutability": "mutable",
                  "name": "investorFee",
                  "nameLocation": "26739:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5829,
                  "src": "26731:19:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5705,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26731:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5708,
                  "mutability": "mutable",
                  "name": "marketplaceFee",
                  "nameLocation": "26768:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5829,
                  "src": "26760:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26760:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26669:119:26"
            },
            "returnParameters": {
              "id": 5713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5712,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5829,
                  "src": "26811:18:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Percentages_$4411_memory_ptr",
                    "typeString": "struct NFTMarketplace.Percentages"
                  },
                  "typeName": {
                    "id": 5711,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5710,
                      "name": "Percentages",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4411,
                      "src": "26811:11:26"
                    },
                    "referencedDeclaration": 4411,
                    "src": "26811:11:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Percentages_$4411_storage_ptr",
                      "typeString": "struct NFTMarketplace.Percentages"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26810:20:26"
            },
            "scope": 5830,
            "src": "26641:1445:26",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 5831,
        "src": "525:27563:26",
        "usedErrors": []
      }
    ],
    "src": "32:28057:26"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0xf849d00bc67e9e4bf072df9680646c59b8c5380160834c2e1d4896ce5ec81f75": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "AllowedTokenAdded",
          "type": "event"
        },
        "0xbf996b4fd74f0c7159bb017b1db415b0d9a6f13129f46d0b93309d170b78df31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "AllowedTokenRemoved",
          "type": "event"
        },
        "0xa2c04199617341beb18c0052b61ae8aa35006743d43ca44891ca000f56e90655": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oldAddress",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newAddress",
              "type": "address"
            }
          ],
          "name": "ChangedAutentica",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x0208fc5be027d6de8ccfba986c6e00e8fe20decd43de203db40d4024616c2333": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "ownerProceeds",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "creatorProceeds",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "investorProceeds",
              "type": "uint256"
            }
          ],
          "name": "TradedForCoins",
          "type": "event"
        },
        "0x69d820f7af9ba1109e1ff47df37b0819b3ed419d6e5361abcd8574d4f836be1b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "ownerProceeds",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "creatorProceeds",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "investorProceeds",
              "type": "uint256"
            }
          ],
          "name": "TradedForTokens",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xc731d111023b11EB39606B672Be35f20C6D88Af1",
      "transactionHash": "0xabc35d69809d0d746b7eaa966908ad83e795ed76dc12f3f568f02047bb2fcb11"
    },
    "56": {
      "events": {
        "0xf849d00bc67e9e4bf072df9680646c59b8c5380160834c2e1d4896ce5ec81f75": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "AllowedTokenAdded",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x1a224a1a77f76aac623571408c45789a173314c8",
      "transactionHash": "0x4df4736c841eedc47b78f57d91f0f7c53088a98bf0ad2e91ae35b4a78b25b8b5"
    },
    "4": {
      "events": {
        "0xf849d00bc67e9e4bf072df9680646c59b8c5380160834c2e1d4896ce5ec81f75": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "AllowedTokenAdded",
          "type": "event"
        },
        "0xbf996b4fd74f0c7159bb017b1db415b0d9a6f13129f46d0b93309d170b78df31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "AllowedTokenRemoved",
          "type": "event"
        },
        "0xa2c04199617341beb18c0052b61ae8aa35006743d43ca44891ca000f56e90655": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oldAddress",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newAddress",
              "type": "address"
            }
          ],
          "name": "ChangedAutentica",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x3f50967031f099da64972c124ffe273c54d217d5626acee2b44875ec378718ac": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "creatorProceeds",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "investorProceeds",
              "type": "uint256"
            }
          ],
          "name": "TradedForCoins",
          "type": "event"
        },
        "0xd2931a5510b70889f7184c1086b44af3927ab0a2edc9f2efd28e158973e1c274": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "creatorProceeds",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "investorProceeds",
              "type": "uint256"
            }
          ],
          "name": "TradedForTokens",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x12774EAd954F19DDe4142462C22E05F19452d320",
      "transactionHash": "0x82313dbe4c8d85c2944f8441c7a5214802d20e89aa1d17a55327c31ec2aca7bd"
    },
    "97": {
      "events": {
        "0xf849d00bc67e9e4bf072df9680646c59b8c5380160834c2e1d4896ce5ec81f75": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "AllowedTokenAdded",
          "type": "event"
        },
        "0xbf996b4fd74f0c7159bb017b1db415b0d9a6f13129f46d0b93309d170b78df31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "AllowedTokenRemoved",
          "type": "event"
        },
        "0xa2c04199617341beb18c0052b61ae8aa35006743d43ca44891ca000f56e90655": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oldAddress",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newAddress",
              "type": "address"
            }
          ],
          "name": "ChangedAutentica",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x3f50967031f099da64972c124ffe273c54d217d5626acee2b44875ec378718ac": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "creatorProceeds",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "investorProceeds",
              "type": "uint256"
            }
          ],
          "name": "TradedForCoins",
          "type": "event"
        },
        "0xd2931a5510b70889f7184c1086b44af3927ab0a2edc9f2efd28e158973e1c274": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "creatorProceeds",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "investorProceeds",
              "type": "uint256"
            }
          ],
          "name": "TradedForTokens",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x621866d04C82Fbec31b1C67c5E4FAa904584CaFC",
      "transactionHash": "0xc230c8d29159d79760a462787d76d108dc4ccc2d0099350c8fb5b6d916ec5668"
    },
    "5777": {
      "events": {
        "0xf849d00bc67e9e4bf072df9680646c59b8c5380160834c2e1d4896ce5ec81f75": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "AllowedTokenAdded",
          "type": "event"
        },
        "0xbf996b4fd74f0c7159bb017b1db415b0d9a6f13129f46d0b93309d170b78df31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "AllowedTokenRemoved",
          "type": "event"
        },
        "0xa2c04199617341beb18c0052b61ae8aa35006743d43ca44891ca000f56e90655": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oldAddress",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newAddress",
              "type": "address"
            }
          ],
          "name": "ChangedAutentica",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x5571d7a2f159f42b30a9146ea3b63800a6daee9ef203f7c8bd3e58433cc3740e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "name": "TradedForCoins",
          "type": "event"
        },
        "0x89a3ccd6bf92084ed98b16a09ee98eca5bab2e4321a76d8d7c9c0fbd5852e84e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "name": "TradedForTokens",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9561C133DD8580860B6b7E504bC5Aa500f0f06a7",
      "transactionHash": "0xea71278f2fa7688f2fb21fd3534c135f218498454ae150a8cb2f82f4b665b4b7"
    }
  },
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-07-14T11:54:33.414Z",
  "networkType": "ethereum",
  "devdoc": {
    "events": {
      "AllowedTokenAdded(address)": {
        "details": "Emitted when a new token is allowed to be used for trading."
      },
      "AllowedTokenRemoved(address)": {
        "details": "Emitted when a token is not longer allowed to be used for trading."
      },
      "ChangedAutentica(address,address)": {
        "details": "Emitted when the Autentica wallet address has been updated."
      },
      "TradedForCoins(address,uint256,address,address,uint256,uint256,uint256,uint256)": {
        "details": "Emitted when a trade occured between the `seller` (the owner of the ERC-721 token represented by `tokenId` within the `collection` smart contract) and `buyer` which payed the specified `price` in coins (the native cryptocurrency of the platform, i.e.: ETH)."
      },
      "TradedForTokens(address,uint256,address,address,address,uint256,uint256,uint256,uint256)": {
        "details": "Emitted when a trade occured between the `seller` (the owner of the ERC-721 token represented by `tokenId` within the `collection` smart contract) and `buyer` which payed the specified `price` in tokens that are represented by the `token` ERC-20 smart contract address."
      }
    },
    "kind": "dev",
    "methods": {
      "addAllowedToken(address)": {
        "details": "Add a new allowed token to the contract.",
        "params": {
          "tokenAddress": "The address of the allowed token to add. Requirements: - the caller must be admin."
        }
      },
      "allowedTokenAtIndex(uint256)": {
        "details": "Returns the address of the allowed token at the specified index.",
        "params": {
          "index": "The index of the allowed token."
        }
      },
      "canPerformTrade(address,uint256,uint256,address,address,uint256,(uint8,bytes32,bytes32))": {
        "params": {
          "buyer": "Buyer address.",
          "collection": "The ERC-721 smart contract.",
          "currency": "The type of currency (erc20 or native currency)",
          "marketplaceFee": "Marketplace fee.",
          "price": "The price of the NFT in `token` tokens.",
          "signature": "ECDSA signature.",
          "tokenId": "The unique identifier of the ERC-721 token within the `collection` smart contract."
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used for fees."
      },
      "getInvestorFee(address,uint256)": {
        "params": {
          "collection": "The ERC-721 smart contract.",
          "tokenId": "The unique identifier of the ERC-721 token within the `collection` smart contract."
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoyaltyFee(address,uint256)": {
        "params": {
          "collection": "The ERC-721 smart contract.",
          "tokenId": "The unique identifier of the ERC-721 token within the `collection` smart contract."
        }
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isMarketplaceApproved(address,uint256,address)": {
        "details": "Verifies if the token owner has approved this smart contract to manage its  NFTs from the specified collection.",
        "returns": {
          "_0": "Returns `true` if this smart contract is approved by the `tokenOwner` in  the `collection` smart contract or only if that specific NFT is approved for this smart contract."
        }
      },
      "isTokenAllowed(address)": {
        "details": "Verifies if a token address has been allowed already."
      },
      "numberOfAllowedTokens()": {
        "details": "Returns the number of allowed tokens."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "removeAllowedTokenAtIndex(uint256)": {
        "details": "Remove the allowed token at the specified index.",
        "params": {
          "index": "The index of the allowed token. Requirements: - the caller must be admin."
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "setAutentica(address)": {
        "details": "Sets the Autentica wallet address. Requirements: - the caller must be admin."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "tradeForCoins(address,uint256,uint256,address,uint256,(uint8,bytes32,bytes32))": {
        "details": "Requirements - The `collection` smart contract must be an ERC-721 smart contract. - The owner of the NFT identified by `tokenId` within the `collection` smart contract must have approved   this smart contract to manage its NFTs. - The `price` and `msg.value` must be equal. - The sum of all the fees cannot be greater than 100%. - The ECDSA signature must be signed by someone with the admin or operator role.",
        "params": {
          "buyer": "Buyer address.",
          "collection": "The ERC-721 smart contract.",
          "marketplaceFee": "Marketplace fee.",
          "price": "The price of the NFT in coins.",
          "signature": "ECDSA signature.",
          "tokenId": "The unique identifier of the ERC-721 token within the `collection` smart contract."
        }
      },
      "tradeForTokens(address,uint256,uint256,address,address,uint256,(uint8,bytes32,bytes32))": {
        "params": {
          "buyer": "Buyer address.",
          "collection": "The ERC-721 smart contract.",
          "marketplaceFee": "Marketplace fee.",
          "price": "The price of the NFT in `token` tokens.",
          "signature": "ECDSA signature. Requirements: - The `collection` smart contract must be an ERC-721 smart contract. - The owner of the NFT identified by `tokenId` within the `collection` smart contract must have approved   this smart contract to manage its NFTs. - The sum of all the fees cannot be greater than 100%. - The ECDSA signature must be signed by someone with the admin or operator role.",
          "token": "The ERC-20 smart contract.",
          "tokenId": "The unique identifier of the ERC-721 token within the `collection` smart contract."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "autentica()": {
        "notice": "Returns the Autentica wallet address."
      },
      "canPerformTrade(address,uint256,uint256,address,address,uint256,(uint8,bytes32,bytes32))": {
        "notice": "Validate the trade."
      },
      "constructor": {
        "notice": "The constructor sets the creator of the contract as the admin and operator of this smart contract, sets the wallet address for Autentica and sets the allowed tokens."
      },
      "getInvestorFee(address,uint256)": {
        "notice": "If the collection smart contract implements `IERC721Autentica` then the function  returns the investor fee from that smart contract, otherwise it will return 0."
      },
      "getRoyaltyFee(address,uint256)": {
        "notice": "If the collection smart contract implements `IERC721Autentica` or `IERC2981` then  the function returns the royalty fee from that smart contract, otherwise it will return 0."
      },
      "pause()": {
        "notice": "Pause the contract. Requirements: - the caller must be admin."
      },
      "tradeForCoins(address,uint256,uint256,address,uint256,(uint8,bytes32,bytes32))": {
        "notice": "Trades an NFT for a given amount of coins (the native cryptocurrency of the platform, i.e.: ETH)."
      },
      "tradeForTokens(address,uint256,uint256,address,address,uint256,(uint8,bytes32,bytes32))": {
        "notice": "Trades an NFT for a given amount of ERC-20 tokens (i.e.: AUT/USDT/USDC)."
      },
      "unpause()": {
        "notice": "Unpause the contract. Requirements: - the caller must be admin."
      }
    },
    "version": 1
  }
}